// <auto-generated />
using System;
using KyoS.Web.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace KyoS.Web.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20230106103616_ImprovesIncidentAndSendMenssage")]
    partial class ImprovesIncidentAndSendMenssage
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.1");

            modelBuilder.Entity("KyoS.Web.Data.Entities.ActivityEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateOfApprove")
                        .HasColumnType("datetime2");

                    b.Property<int?>("FacilitatorId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int?>("SupervisorId")
                        .HasColumnType("int");

                    b.Property<int?>("ThemeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FacilitatorId");

                    b.HasIndex("SupervisorId");

                    b.HasIndex("ThemeId");

                    b.ToTable("Activities");
                });

            modelBuilder.Entity("KyoS.Web.Data.Entities.AdendumEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Dateidentified")
                        .HasColumnType("datetime2");

                    b.Property<int>("Duration")
                        .HasColumnType("int");

                    b.Property<int?>("FacilitatorId")
                        .HasColumnType("int");

                    b.Property<string>("Frecuency")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("MtpId")
                        .HasColumnType("int");

                    b.Property<string>("ProblemStatement")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int?>("SupervisorId")
                        .HasColumnType("int");

                    b.Property<int>("Unit")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FacilitatorId");

                    b.HasIndex("MtpId");

                    b.HasIndex("SupervisorId");

                    b.ToTable("Adendums");
                });

            modelBuilder.Entity("KyoS.Web.Data.Entities.BioEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<bool>("AReferral")
                        .HasColumnType("bit");

                    b.Property<string>("AReferral_Services")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AReferral_When")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AReferral_Where")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AdmissionedFor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AdultCurrentExperience")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Affect_Angry")
                        .HasColumnType("bit");

                    b.Property<bool>("Affect_Anxious")
                        .HasColumnType("bit");

                    b.Property<bool>("Affect_Appropriate")
                        .HasColumnType("bit");

                    b.Property<bool>("Affect_Blunted")
                        .HasColumnType("bit");

                    b.Property<bool>("Affect_Constricted")
                        .HasColumnType("bit");

                    b.Property<bool>("Affect_Expansive")
                        .HasColumnType("bit");

                    b.Property<bool>("Affect_Flat")
                        .HasColumnType("bit");

                    b.Property<bool>("Affect_Other")
                        .HasColumnType("bit");

                    b.Property<bool>("Affect_Tearful_Sad")
                        .HasColumnType("bit");

                    b.Property<bool>("Affect_labile")
                        .HasColumnType("bit");

                    b.Property<string>("AlternativeDiagnosis")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Appearance_Bizarre")
                        .HasColumnType("bit");

                    b.Property<bool>("Appearance_Cleaned")
                        .HasColumnType("bit");

                    b.Property<bool>("Appearance_Disheveled")
                        .HasColumnType("bit");

                    b.Property<bool>("Appearance_FairHygiene")
                        .HasColumnType("bit");

                    b.Property<bool>("Appearance_WellGroomed")
                        .HasColumnType("bit");

                    b.Property<int>("Appetite")
                        .HasColumnType("int");

                    b.Property<DateTime>("ApproximateDateReport")
                        .HasColumnType("datetime2");

                    b.Property<string>("ApproximateDateReport_Where")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("BioH0031HN")
                        .HasColumnType("bit");

                    b.Property<bool>("CMH")
                        .HasColumnType("bit");

                    b.Property<bool>("CanClientFollow")
                        .HasColumnType("bit");

                    b.Property<string>("Children")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClientAssessmentSituation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("ClientDenied")
                        .HasColumnType("bit");

                    b.Property<bool>("ClientFamilyAbusoTrauma")
                        .HasColumnType("bit");

                    b.Property<int>("Client_FK")
                        .HasColumnType("int");

                    b.Property<string>("Comments")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateAbuse")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateBio")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateSignatureLicensedPractitioner")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateSignaturePerson")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateSignatureSupervisor")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateSignatureUnlicensedTherapist")
                        .HasColumnType("datetime2");

                    b.Property<string>("Details")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("DoYouHaveAnyPhysical")
                        .HasColumnType("bit");

                    b.Property<bool>("DoYouHaveAnyReligious")
                        .HasColumnType("bit");

                    b.Property<bool>("DoYouHaveAnyVisual")
                        .HasColumnType("bit");

                    b.Property<bool>("DoYouOwn")
                        .HasColumnType("bit");

                    b.Property<string>("DoYouOwn_Explain")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DocumentsAssistantId")
                        .HasColumnType("int");

                    b.Property<bool>("DoesClient")
                        .HasColumnType("bit");

                    b.Property<bool>("DoesClientRequired")
                        .HasColumnType("bit");

                    b.Property<string>("DoesClientRequired_Where")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("DoesNotAlways")
                        .HasColumnType("bit");

                    b.Property<bool>("DoesTheClientExperience")
                        .HasColumnType("bit");

                    b.Property<string>("DoesTheClientExperience_Where")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EastAlone")
                        .HasColumnType("bit");

                    b.Property<bool>("EastFew")
                        .HasColumnType("bit");

                    b.Property<bool>("EastFewer")
                        .HasColumnType("bit");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("FamilyAssessmentSituation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FamilyEmotional")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ForHowLong")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GeneralDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Has3OrMore")
                        .HasColumnType("bit");

                    b.Property<bool>("HasAnIllnes")
                        .HasColumnType("bit");

                    b.Property<bool>("HasClientBeenTreatedPain")
                        .HasColumnType("bit");

                    b.Property<string>("HasClientBeenTreatedPain_Ifnot")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HasClientBeenTreatedPain_PleaseIncludeService")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HasClientBeenTreatedPain_Where")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("HasTheClient")
                        .HasColumnType("bit");

                    b.Property<bool>("HasTheClientVisitedPhysician")
                        .HasColumnType("bit");

                    b.Property<string>("HasTheClientVisitedPhysician_Date")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HasTheClientVisitedPhysician_Reason")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HasTheClient_Explain")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("HasTooth")
                        .HasColumnType("bit");

                    b.Property<bool>("HaveYouEverBeen")
                        .HasColumnType("bit");

                    b.Property<string>("HaveYouEverBeen_Explain")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("HaveYouEverThought")
                        .HasColumnType("bit");

                    b.Property<string>("HaveYouEverThought_Explain")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HigHestEducation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Hydration")
                        .HasColumnType("int");

                    b.Property<bool>("IConcurWhitDiagnistic")
                        .HasColumnType("bit");

                    b.Property<bool>("IDAH0031HO")
                        .HasColumnType("bit");

                    b.Property<DateTime>("If6_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("If6_ReferredTo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IfForeing_AgeArrival")
                        .HasColumnType("int");

                    b.Property<bool>("IfForeing_Born")
                        .HasColumnType("bit");

                    b.Property<int>("IfForeing_YearArrival")
                        .HasColumnType("int");

                    b.Property<string>("IfMarried")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IfSeparated")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IfSexuallyActive")
                        .HasColumnType("int");

                    b.Property<bool>("Insight_Fair")
                        .HasColumnType("bit");

                    b.Property<bool>("Insight_Good")
                        .HasColumnType("bit");

                    b.Property<bool>("Insight_Other")
                        .HasColumnType("bit");

                    b.Property<bool>("Insight_Poor")
                        .HasColumnType("bit");

                    b.Property<bool>("Judgment_Fair")
                        .HasColumnType("bit");

                    b.Property<bool>("Judgment_Good")
                        .HasColumnType("bit");

                    b.Property<bool>("Judgment_Other")
                        .HasColumnType("bit");

                    b.Property<bool>("Judgment_Poor")
                        .HasColumnType("bit");

                    b.Property<bool>("Lacking_Location")
                        .HasColumnType("bit");

                    b.Property<bool>("Lacking_Person")
                        .HasColumnType("bit");

                    b.Property<bool>("Lacking_Place")
                        .HasColumnType("bit");

                    b.Property<bool>("Lacking_Time")
                        .HasColumnType("bit");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("LegalAssessment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LegalHistory")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaritalStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Mood_Angry")
                        .HasColumnType("bit");

                    b.Property<bool>("Mood_Anxious")
                        .HasColumnType("bit");

                    b.Property<bool>("Mood_Depressed")
                        .HasColumnType("bit");

                    b.Property<bool>("Mood_Euphoric")
                        .HasColumnType("bit");

                    b.Property<bool>("Mood_Euthymic")
                        .HasColumnType("bit");

                    b.Property<bool>("Mood_Maniac")
                        .HasColumnType("bit");

                    b.Property<bool>("Mood_Other")
                        .HasColumnType("bit");

                    b.Property<bool>("Motor_Agitated")
                        .HasColumnType("bit");

                    b.Property<bool>("Motor_Akathisia")
                        .HasColumnType("bit");

                    b.Property<bool>("Motor_Normal")
                        .HasColumnType("bit");

                    b.Property<bool>("Motor_Other")
                        .HasColumnType("bit");

                    b.Property<bool>("Motor_RestLess")
                        .HasColumnType("bit");

                    b.Property<bool>("Motor_Retardation")
                        .HasColumnType("bit");

                    b.Property<bool>("Motor_Tremor")
                        .HasColumnType("bit");

                    b.Property<bool>("NotAlwaysPhysically")
                        .HasColumnType("bit");

                    b.Property<bool>("ObtainRelease")
                        .HasColumnType("bit");

                    b.Property<bool>("ObtainReleaseInformation")
                        .HasColumnType("bit");

                    b.Property<bool>("ObtainReleaseInformation7")
                        .HasColumnType("bit");

                    b.Property<bool>("Oriented_FullOriented")
                        .HasColumnType("bit");

                    b.Property<string>("Outcome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PersonInvolved")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PersonalFamilyPsychiatric")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PleaseProvideGoal")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PleaseRatePain")
                        .HasColumnType("int");

                    b.Property<string>("PresentingProblem")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrimaryLocation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Priv")
                        .HasColumnType("bit");

                    b.Property<string>("ProvideIntegratedSummary")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RecentWeight")
                        .HasColumnType("int");

                    b.Property<string>("RelationShips")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RelationshipWithFamily")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("RiskToOther_Chronic")
                        .HasColumnType("bit");

                    b.Property<bool>("RiskToOther_High")
                        .HasColumnType("bit");

                    b.Property<bool>("RiskToOther_Low")
                        .HasColumnType("bit");

                    b.Property<bool>("RiskToOther_Medium")
                        .HasColumnType("bit");

                    b.Property<bool>("RiskToSelf_Chronic")
                        .HasColumnType("bit");

                    b.Property<bool>("RiskToSelf_High")
                        .HasColumnType("bit");

                    b.Property<bool>("RiskToSelf_Low")
                        .HasColumnType("bit");

                    b.Property<bool>("RiskToSelf_Medium")
                        .HasColumnType("bit");

                    b.Property<bool>("SafetyPlan")
                        .HasColumnType("bit");

                    b.Property<string>("Setting")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Speech_Impoverished")
                        .HasColumnType("bit");

                    b.Property<bool>("Speech_Loud")
                        .HasColumnType("bit");

                    b.Property<bool>("Speech_Mumbled")
                        .HasColumnType("bit");

                    b.Property<bool>("Speech_Normal")
                        .HasColumnType("bit");

                    b.Property<bool>("Speech_Other")
                        .HasColumnType("bit");

                    b.Property<bool>("Speech_Pressured")
                        .HasColumnType("bit");

                    b.Property<bool>("Speech_Rapid")
                        .HasColumnType("bit");

                    b.Property<bool>("Speech_Slow")
                        .HasColumnType("bit");

                    b.Property<bool>("Speech_Slurred")
                        .HasColumnType("bit");

                    b.Property<bool>("Speech_Stutters")
                        .HasColumnType("bit");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("SubstanceAbuse")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SupervisorId")
                        .HasColumnType("int");

                    b.Property<bool>("Takes3OrMore")
                        .HasColumnType("bit");

                    b.Property<bool>("ThoughtContent_Delusions")
                        .HasColumnType("bit");

                    b.Property<string>("ThoughtContent_Delusions_Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("ThoughtContent_Hallucinations")
                        .HasColumnType("bit");

                    b.Property<string>("ThoughtContent_Hallucinations_Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("ThoughtContent_RealityBased")
                        .HasColumnType("bit");

                    b.Property<bool>("ThoughtContent_Relevant")
                        .HasColumnType("bit");

                    b.Property<bool>("ThoughtProcess_Blocking")
                        .HasColumnType("bit");

                    b.Property<bool>("ThoughtProcess_Circumstantial")
                        .HasColumnType("bit");

                    b.Property<bool>("ThoughtProcess_Disorganized")
                        .HasColumnType("bit");

                    b.Property<bool>("ThoughtProcess_FightIdeas")
                        .HasColumnType("bit");

                    b.Property<bool>("ThoughtProcess_GoalDirected")
                        .HasColumnType("bit");

                    b.Property<bool>("ThoughtProcess_Irrational")
                        .HasColumnType("bit");

                    b.Property<bool>("ThoughtProcess_LooseAssociations")
                        .HasColumnType("bit");

                    b.Property<bool>("ThoughtProcess_Obsessive")
                        .HasColumnType("bit");

                    b.Property<bool>("ThoughtProcess_Organized")
                        .HasColumnType("bit");

                    b.Property<bool>("ThoughtProcess_Other")
                        .HasColumnType("bit");

                    b.Property<bool>("ThoughtProcess_Preoccupied")
                        .HasColumnType("bit");

                    b.Property<bool>("ThoughtProcess_Rigid")
                        .HasColumnType("bit");

                    b.Property<bool>("ThoughtProcess_Tangential")
                        .HasColumnType("bit");

                    b.Property<string>("TreatmentNeeds")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Treatmentrecomendations")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WhatIsTheClient")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WhatIsYourLanguage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("WhereRecord")
                        .HasColumnType("bit");

                    b.Property<string>("WhereRecord_When")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WhereRecord_Where")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("WithoutWanting")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("Client_FK")
                        .IsUnique();

                    b.HasIndex("DocumentsAssistantId");

                    b.HasIndex("SupervisorId");

                    b.ToTable("Bio");
                });

            modelBuilder.Entity("KyoS.Web.Data.Entities.Bio_BehavioralHistoryEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("ClientId")
                        .HasColumnType("int");

                    b.Property<string>("Date")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Problem")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.ToTable("Bio_BehavioralHistory");
                });

            modelBuilder.Entity("KyoS.Web.Data.Entities.CaseMannagerEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("ClinicId")
                        .HasColumnType("int");

                    b.Property<string>("Credentials")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LinkedUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Money")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProviderNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SignaturePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClinicId");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("CaseManagers");
                });

            modelBuilder.Entity("KyoS.Web.Data.Entities.ClassificationEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Classifications");
                });

            modelBuilder.Entity("KyoS.Web.Data.Entities.ClientEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("AdmisionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("AlternativeAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ClinicId")
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOfClose")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DoctorId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("EmergencyContactId")
                        .HasColumnType("int");

                    b.Property<int>("Ethnicity")
                        .HasColumnType("int");

                    b.Property<string>("FullAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<int?>("GroupId")
                        .HasColumnType("int");

                    b.Property<int>("IdFacilitatorPSR")
                        .HasColumnType("int");

                    b.Property<int?>("IndividualTherapyFacilitatorId")
                        .HasColumnType("int");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LegalGuardianId")
                        .HasColumnType("int");

                    b.Property<int>("MaritalStatus")
                        .HasColumnType("int");

                    b.Property<string>("MedicaidID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MedicareId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("OnlyTCM")
                        .HasColumnType("bit");

                    b.Property<string>("OtherLanguage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("OtherLanguage_Read")
                        .HasColumnType("bit");

                    b.Property<bool>("OtherLanguage_Speak")
                        .HasColumnType("bit");

                    b.Property<bool>("OtherLanguage_Understand")
                        .HasColumnType("bit");

                    b.Property<string>("PhotoPath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PlaceOfBirth")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PreferredLanguage")
                        .HasColumnType("int");

                    b.Property<int?>("PsychiatristId")
                        .HasColumnType("int");

                    b.Property<int>("Race")
                        .HasColumnType("int");

                    b.Property<int>("RelationShipOfEmergencyContact")
                        .HasColumnType("int");

                    b.Property<int>("RelationShipOfLegalGuardian")
                        .HasColumnType("int");

                    b.Property<string>("SSN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Service")
                        .HasColumnType("int");

                    b.Property<string>("SignPath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("State")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Telephone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TelephoneSecondary")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ZipCode")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ClinicId");

                    b.HasIndex("DoctorId");

                    b.HasIndex("EmergencyContactId");

                    b.HasIndex("GroupId");

                    b.HasIndex("IndividualTherapyFacilitatorId");

                    b.HasIndex("LegalGuardianId");

                    b.HasIndex("PsychiatristId");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("KyoS.Web.Data.Entities.Client_Diagnostic", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("ClientId")
                        .HasColumnType("int");

                    b.Property<int?>("DiagnosticId")
                        .HasColumnType("int");

                    b.Property<bool>("Principal")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.HasIndex("DiagnosticId");

                    b.ToTable("Clients_Diagnostics");
                });

            modelBuilder.Entity("KyoS.Web.Data.Entities.Client_HealthInsurance", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ApprovedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ClientId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("DurationTime")
                        .HasColumnType("int");

                    b.Property<int?>("HealthInsuranceId")
                        .HasColumnType("int");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("MemberId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Units")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.HasIndex("HealthInsuranceId");

                    b.ToTable("Clients_HealthInsurances");
                });

            modelBuilder.Entity("KyoS.Web.Data.Entities.Client_Referred", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("ClientId")
                        .HasColumnType("int");

                    b.Property<int?>("ReferredId")
                        .HasColumnType("int");

                    b.Property<string>("ReferredNote")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Service")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.HasIndex("ReferredId");

                    b.ToTable("Clients_Referreds");
                });

            modelBuilder.Entity("KyoS.Web.Data.Entities.ClinicEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CEO")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClinicalDirector")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FaxNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LogoPath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProviderMedicaidId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProviderTaxId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Schema")
                        .HasColumnType("int");

                    b.Property<string>("State")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ZipCode")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Clinics");
                });

            modelBuilder.Entity("KyoS.Web.Data.Entities.DailySessionEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("Day")
                        .HasColumnType("int");

                    b.Property<int?>("GroupId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GroupId");

                    b.ToTable("DailySessions");
                });

            modelBuilder.Entity("KyoS.Web.Data.Entities.DiagnosticEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Diagnostics");
                });

            modelBuilder.Entity("KyoS.Web.Data.Entities.DiagnosticTempEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Principal")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("DiagnosticsTemp");
                });

            modelBuilder.Entity("KyoS.Web.Data.Entities.DischargeEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<bool>("Administrative")
                        .HasColumnType("bit");

                    b.Property<string>("AdmissionedFor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ClientId")
                        .HasColumnType("int");

                    b.Property<bool>("ClientTransferred")
                        .HasColumnType("bit");

                    b.Property<int>("Client_FK")
                        .HasColumnType("int");

                    b.Property<bool>("ClinicalCoherente")
                        .HasColumnType("bit");

                    b.Property<bool>("ClinicalInRemission")
                        .HasColumnType("bit");

                    b.Property<bool>("ClinicalIncoherente")
                        .HasColumnType("bit");

                    b.Property<bool>("ClinicalStable")
                        .HasColumnType("bit");

                    b.Property<bool>("ClinicalUnpredictable")
                        .HasColumnType("bit");

                    b.Property<bool>("ClinicalUnstable")
                        .HasColumnType("bit");

                    b.Property<bool>("CompletedTreatment")
                        .HasColumnType("bit");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateAdmissionService")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateDischarge")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateReport")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateSignatureEmployee")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateSignaturePerson")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateSignatureSupervisor")
                        .HasColumnType("datetime2");

                    b.Property<string>("DischargeDiagnosis")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("LeftBefore")
                        .HasColumnType("bit");

                    b.Property<bool>("NonCompliant")
                        .HasColumnType("bit");

                    b.Property<bool>("Other")
                        .HasColumnType("bit");

                    b.Property<string>("Other_Explain")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Planned")
                        .HasColumnType("bit");

                    b.Property<bool>("PrognosisFair")
                        .HasColumnType("bit");

                    b.Property<bool>("PrognosisGood")
                        .HasColumnType("bit");

                    b.Property<bool>("PrognosisGuarded")
                        .HasColumnType("bit");

                    b.Property<bool>("PrognosisPoor")
                        .HasColumnType("bit");

                    b.Property<bool>("ProgramClubHouse")
                        .HasColumnType("bit");

                    b.Property<bool>("ProgramGroup")
                        .HasColumnType("bit");

                    b.Property<bool>("ProgramInd")
                        .HasColumnType("bit");

                    b.Property<bool>("ProgramPSR")
                        .HasColumnType("bit");

                    b.Property<string>("ReferralsTo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int?>("SupervisorId")
                        .HasColumnType("int");

                    b.Property<bool>("Termination")
                        .HasColumnType("bit");

                    b.Property<int>("TypeService")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.HasIndex("SupervisorId");

                    b.ToTable("Discharge");
                });

            modelBuilder.Entity("KyoS.Web.Data.Entities.DoctorEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FaxNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Telephone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Doctors");
                });

            modelBuilder.Entity("KyoS.Web.Data.Entities.DocumentDiagnosticEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DiagnosticId")
                        .HasColumnType("int");

                    b.Property<string>("FileName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("DiagnosticId");

                    b.ToTable("DocumentDiagnostics");
                });

            modelBuilder.Entity("KyoS.Web.Data.Entities.DocumentEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("ClientId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("Description")
                        .HasColumnType("int");

                    b.Property<string>("FileName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.ToTable("Documents");
                });

            modelBuilder.Entity("KyoS.Web.Data.Entities.DocumentTempEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("Description")
                        .HasColumnType("int");

                    b.Property<string>("DocumentName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DocumentPath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("DocumentsTemp");
                });

            modelBuilder.Entity("KyoS.Web.Data.Entities.DocumentsAssistantEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("ClinicId")
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Firm")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LinkedUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("RaterEducation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RaterFMHCertification")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SignaturePath")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ClinicId");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("DocumentsAssistant");
                });

            modelBuilder.Entity("KyoS.Web.Data.Entities.EmergencyContactEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AdressLine2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("State")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telephone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TelephoneSecondary")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ZipCode")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("EmergencyContacts");
                });

            modelBuilder.Entity("KyoS.Web.Data.Entities.FacilitatorEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("ClinicId")
                        .HasColumnType("int");

                    b.Property<string>("Codigo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LinkedUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("RaterEducation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RaterFMHCertification")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SignaturePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClinicId");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Facilitators");
                });

            modelBuilder.Entity("KyoS.Web.Data.Entities.FarsFormEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("AbilityScale")
                        .HasColumnType("int");

                    b.Property<int>("ActivitiesScale")
                        .HasColumnType("int");

                    b.Property<string>("AdmissionedFor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AnxietyScale")
                        .HasColumnType("int");

                    b.Property<int?>("ClientId")
                        .HasColumnType("int");

                    b.Property<int>("CognitiveScale")
                        .HasColumnType("int");

                    b.Property<string>("ContID1")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ContID2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContID3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContractorID")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("DangerToOtherScale")
                        .HasColumnType("int");

                    b.Property<int>("DangerToSelfScale")
                        .HasColumnType("int");

                    b.Property<string>("DcfEvaluation")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("DepressionScale")
                        .HasColumnType("int");

                    b.Property<DateTime>("EvaluationDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("FamilyEnvironmentScale")
                        .HasColumnType("int");

                    b.Property<int>("FamilyRelationShipsScale")
                        .HasColumnType("int");

                    b.Property<int>("HyperAffectScale")
                        .HasColumnType("int");

                    b.Property<int>("InterpersonalScale")
                        .HasColumnType("int");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("MCOID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("M_GafScore")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MedicaidProviderID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MedicaidRecipientID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MedicalScale")
                        .HasColumnType("int");

                    b.Property<string>("ProgramEvaluation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProviderId")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ProviderLocal")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RaterEducation")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("RaterFMHI")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("SecurityScale")
                        .HasColumnType("int");

                    b.Property<DateTime>("SignatureDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("SocialScale")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("SubstanceAbusoHistory")
                        .HasColumnType("int");

                    b.Property<int>("SubstanceScale")
                        .HasColumnType("int");

                    b.Property<int?>("SupervisorId")
                        .HasColumnType("int");

                    b.Property<int>("ThoughtProcessScale")
                        .HasColumnType("int");

                    b.Property<int>("TraumaticsScale")
                        .HasColumnType("int");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<int>("WorkScale")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.HasIndex("SupervisorId");

                    b.ToTable("FarsForm");
                });

            modelBuilder.Entity("KyoS.Web.Data.Entities.GeneratedNoteEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<bool>("Adequate")
                        .HasColumnType("bit");

                    b.Property<bool>("AdequateAC")
                        .HasColumnType("bit");

                    b.Property<bool>("Anxious")
                        .HasColumnType("bit");

                    b.Property<int?>("ClientId")
                        .HasColumnType("int");

                    b.Property<bool>("Congruent")
                        .HasColumnType("bit");

                    b.Property<int?>("DailySessionId")
                        .HasColumnType("int");

                    b.Property<bool>("Depressed")
                        .HasColumnType("bit");

                    b.Property<bool>("Dramatized")
                        .HasColumnType("bit");

                    b.Property<bool>("Euphoric")
                        .HasColumnType("bit");

                    b.Property<bool>("Euthymic")
                        .HasColumnType("bit");

                    b.Property<bool>("Fair")
                        .HasColumnType("bit");

                    b.Property<bool>("Faulty")
                        .HasColumnType("bit");

                    b.Property<bool>("Guarded")
                        .HasColumnType("bit");

                    b.Property<bool>("Hostile")
                        .HasColumnType("bit");

                    b.Property<bool>("Impaired")
                        .HasColumnType("bit");

                    b.Property<bool>("Inadequate")
                        .HasColumnType("bit");

                    b.Property<bool>("Irritable")
                        .HasColumnType("bit");

                    b.Property<bool>("Limited")
                        .HasColumnType("bit");

                    b.Property<bool>("MildlyImpaired")
                        .HasColumnType("bit");

                    b.Property<bool>("Motivated")
                        .HasColumnType("bit");

                    b.Property<bool>("Negativistic")
                        .HasColumnType("bit");

                    b.Property<bool>("Normal")
                        .HasColumnType("bit");

                    b.Property<bool>("NotPerson")
                        .HasColumnType("bit");

                    b.Property<bool>("NotPlace")
                        .HasColumnType("bit");

                    b.Property<bool>("NotTime")
                        .HasColumnType("bit");

                    b.Property<bool>("Optimistic")
                        .HasColumnType("bit");

                    b.Property<bool>("OrientedX3")
                        .HasColumnType("bit");

                    b.Property<int?>("PlanId")
                        .HasColumnType("int");

                    b.Property<bool>("Present")
                        .HasColumnType("bit");

                    b.Property<bool>("SeverelyImpaired")
                        .HasColumnType("bit");

                    b.Property<bool>("ShortSpanned")
                        .HasColumnType("bit");

                    b.Property<bool>("Unmotivated")
                        .HasColumnType("bit");

                    b.Property<bool>("Withdrawn")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.HasIndex("DailySessionId");

                    b.HasIndex("PlanId");

                    b.ToTable("GeneratedNotes");
                });

            modelBuilder.Entity("KyoS.Web.Data.Entities.GeneratedNote_NotePrototype", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("GeneratedNoteId")
                        .HasColumnType("int");

                    b.Property<string>("LinkedGoal")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LinkedObj")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("NotePrototypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GeneratedNoteId");

                    b.HasIndex("NotePrototypeId");

                    b.ToTable("GeneratedNotes_NotesPrototypes");
                });

            modelBuilder.Entity("KyoS.Web.Data.Entities.GoalEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("AdendumId")
                        .HasColumnType("int");

                    b.Property<string>("AreaOfFocus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Compliment")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Compliment_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Compliment_Explain")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Compliment_IdMTPReview")
                        .HasColumnType("int");

                    b.Property<int>("IdMTPReview")
                        .HasColumnType("int");

                    b.Property<int?>("MTPId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Number")
                        .HasColumnType("int");

                    b.Property<int>("Service")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AdendumId");

                    b.HasIndex("MTPId");

                    b.ToTable("Goals");
                });

            modelBuilder.Entity("KyoS.Web.Data.Entities.GoalsTempEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("AdmissionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("AreaOfFocus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdClient")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Number")
                        .HasColumnType("int");

                    b.Property<int>("Service")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("numberMonths")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("GoalsTemp");
                });

            modelBuilder.Entity("KyoS.Web.Data.Entities.GroupEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<bool>("Am")
                        .HasColumnType("bit");

                    b.Property<int?>("FacilitatorId")
                        .HasColumnType("int");

                    b.Property<bool>("Pm")
                        .HasColumnType("bit");

                    b.Property<int>("Service")
                        .HasColumnType("int");

                    b.Property<bool>("SharedSession")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("FacilitatorId");

                    b.ToTable("Groups");
                });

            modelBuilder.Entity("KyoS.Web.Data.Entities.GroupNoteEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<bool>("Anxious")
                        .HasColumnType("bit");

                    b.Property<bool>("BehaviorModification")
                        .HasColumnType("bit");

                    b.Property<bool>("Blocked")
                        .HasColumnType("bit");

                    b.Property<bool>("CBT")
                        .HasColumnType("bit");

                    b.Property<bool>("Clear")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DateOfApprove")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Depressed")
                        .HasColumnType("bit");

                    b.Property<bool>("Disheveled")
                        .HasColumnType("bit");

                    b.Property<bool>("Euthymic")
                        .HasColumnType("bit");

                    b.Property<bool>("Exceptional")
                        .HasColumnType("bit");

                    b.Property<bool>("Fearful")
                        .HasColumnType("bit");

                    b.Property<bool>("Groomed")
                        .HasColumnType("bit");

                    b.Property<bool>("Guarded")
                        .HasColumnType("bit");

                    b.Property<bool>("Hostile")
                        .HasColumnType("bit");

                    b.Property<bool>("Impaired")
                        .HasColumnType("bit");

                    b.Property<bool>("Impulsive")
                        .HasColumnType("bit");

                    b.Property<bool>("Irritable")
                        .HasColumnType("bit");

                    b.Property<bool>("Labile")
                        .HasColumnType("bit");

                    b.Property<int?>("MTPId")
                        .HasColumnType("int");

                    b.Property<bool>("Maintain")
                        .HasColumnType("bit");

                    b.Property<bool>("Meticulous")
                        .HasColumnType("bit");

                    b.Property<bool>("Obsessive")
                        .HasColumnType("bit");

                    b.Property<bool>("Other")
                        .HasColumnType("bit");

                    b.Property<bool>("Other_Intervention")
                        .HasColumnType("bit");

                    b.Property<bool>("Overbuild")
                        .HasColumnType("bit");

                    b.Property<bool>("Paranoid")
                        .HasColumnType("bit");

                    b.Property<string>("PlanNote")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Poverty")
                        .HasColumnType("bit");

                    b.Property<bool>("Pressured")
                        .HasColumnType("bit");

                    b.Property<bool>("Psychodynamic")
                        .HasColumnType("bit");

                    b.Property<bool>("Psychotic")
                        .HasColumnType("bit");

                    b.Property<bool>("Regressing")
                        .HasColumnType("bit");

                    b.Property<bool>("Restless")
                        .HasColumnType("bit");

                    b.Property<bool>("Scattered")
                        .HasColumnType("bit");

                    b.Property<bool>("Slow")
                        .HasColumnType("bit");

                    b.Property<bool>("Slow_Progress")
                        .HasColumnType("bit");

                    b.Property<bool>("Slurred")
                        .HasColumnType("bit");

                    b.Property<bool>("Stable")
                        .HasColumnType("bit");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<bool>("Steady")
                        .HasColumnType("bit");

                    b.Property<int?>("SupervisorId")
                        .HasColumnType("int");

                    b.Property<bool>("Unkempt")
                        .HasColumnType("bit");

                    b.Property<bool>("WNL")
                        .HasColumnType("bit");

                    b.Property<bool>("WNL_Cognition")
                        .HasColumnType("bit");

                    b.Property<bool>("Withdrawn")
                        .HasColumnType("bit");

                    b.Property<int>("Workday_Client_FK")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SupervisorId");

                    b.HasIndex("Workday_Client_FK")
                        .IsUnique();

                    b.ToTable("GroupNotes");
                });

            modelBuilder.Entity("KyoS.Web.Data.Entities.GroupNote_Activity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("ActivityId")
                        .HasColumnType("int");

                    b.Property<string>("AnswerClient")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AnswerFacilitator")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("GroupNoteId")
                        .HasColumnType("int");

                    b.Property<int?>("ObjetiveId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ActivityId");

                    b.HasIndex("GroupNoteId");

                    b.HasIndex("ObjetiveId");

                    b.ToTable("GroupNotes_Activities");
                });

            modelBuilder.Entity("KyoS.Web.Data.Entities.HealthInsuranceEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<int?>("ClinicId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("DocumentPath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DurationTime")
                        .HasColumnType("int");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("SignedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ClinicId");

                    b.ToTable("HealthInsurances");
                });

            modelBuilder.Entity("KyoS.Web.Data.Entities.HealthInsuranceTempEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ApprovedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("DurationTime")
                        .HasColumnType("int");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("MemberId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Units")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("HealthInsuranceTemp");
                });

            modelBuilder.Entity("KyoS.Web.Data.Entities.IncidentEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SolvedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("SolvedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("UserAsignedId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("UserCreatedById")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("clientId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserAsignedId");

                    b.HasIndex("UserCreatedById");

                    b.HasIndex("clientId");

                    b.ToTable("Incidents");
                });

            modelBuilder.Entity("KyoS.Web.Data.Entities.IndividualNoteEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<bool>("Anxious")
                        .HasColumnType("bit");

                    b.Property<string>("Assessment")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("BehaviorModification")
                        .HasColumnType("bit");

                    b.Property<bool>("Blocked")
                        .HasColumnType("bit");

                    b.Property<bool>("CBT")
                        .HasColumnType("bit");

                    b.Property<bool>("Clear")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DateOfApprove")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Depressed")
                        .HasColumnType("bit");

                    b.Property<bool>("Disheveled")
                        .HasColumnType("bit");

                    b.Property<bool>("Euthymic")
                        .HasColumnType("bit");

                    b.Property<bool>("Exceptional")
                        .HasColumnType("bit");

                    b.Property<bool>("Fearful")
                        .HasColumnType("bit");

                    b.Property<bool>("Groomed")
                        .HasColumnType("bit");

                    b.Property<bool>("Guarded")
                        .HasColumnType("bit");

                    b.Property<bool>("Hostile")
                        .HasColumnType("bit");

                    b.Property<bool>("Impaired")
                        .HasColumnType("bit");

                    b.Property<bool>("Impulsive")
                        .HasColumnType("bit");

                    b.Property<bool>("Irritable")
                        .HasColumnType("bit");

                    b.Property<bool>("Labile")
                        .HasColumnType("bit");

                    b.Property<int?>("MTPId")
                        .HasColumnType("int");

                    b.Property<bool>("Maintain")
                        .HasColumnType("bit");

                    b.Property<bool>("Meticulous")
                        .HasColumnType("bit");

                    b.Property<string>("ObjectiveData")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ObjectiveId")
                        .HasColumnType("int");

                    b.Property<bool>("Obsessive")
                        .HasColumnType("bit");

                    b.Property<bool>("Other")
                        .HasColumnType("bit");

                    b.Property<bool>("Other_Intervention")
                        .HasColumnType("bit");

                    b.Property<bool>("Overbuild")
                        .HasColumnType("bit");

                    b.Property<bool>("Paranoid")
                        .HasColumnType("bit");

                    b.Property<string>("PlanNote")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Poverty")
                        .HasColumnType("bit");

                    b.Property<bool>("Pressured")
                        .HasColumnType("bit");

                    b.Property<bool>("Psychodynamic")
                        .HasColumnType("bit");

                    b.Property<bool>("Psychotic")
                        .HasColumnType("bit");

                    b.Property<bool>("Regressing")
                        .HasColumnType("bit");

                    b.Property<bool>("Restless")
                        .HasColumnType("bit");

                    b.Property<bool>("Scattered")
                        .HasColumnType("bit");

                    b.Property<bool>("Slow")
                        .HasColumnType("bit");

                    b.Property<bool>("Slow_Progress")
                        .HasColumnType("bit");

                    b.Property<bool>("Slurred")
                        .HasColumnType("bit");

                    b.Property<bool>("Stable")
                        .HasColumnType("bit");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<bool>("Steady")
                        .HasColumnType("bit");

                    b.Property<string>("SubjectiveData")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SupervisorId")
                        .HasColumnType("int");

                    b.Property<bool>("Unkempt")
                        .HasColumnType("bit");

                    b.Property<bool>("WNL")
                        .HasColumnType("bit");

                    b.Property<bool>("WNL_Cognition")
                        .HasColumnType("bit");

                    b.Property<bool>("Withdrawn")
                        .HasColumnType("bit");

                    b.Property<int>("Workday_Client_FK")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ObjectiveId");

                    b.HasIndex("SupervisorId");

                    b.HasIndex("Workday_Client_FK")
                        .IsUnique();

                    b.ToTable("IndividualNotes");
                });

            modelBuilder.Entity("KyoS.Web.Data.Entities.IntakeAccessToServicesEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("AdmissionedFor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Client_FK")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateSignatureEmployee")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateSignatureLegalGuardian")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateSignaturePerson")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Documents")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("Client_FK")
                        .IsUnique();

                    b.ToTable("IntakeAccessToServices");
                });

            modelBuilder.Entity("KyoS.Web.Data.Entities.IntakeAcknowledgementHippaEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("AdmissionedFor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Client_FK")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateSignatureEmployee")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateSignatureLegalGuardian")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateSignaturePerson")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Documents")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("Client_FK")
                        .IsUnique();

                    b.ToTable("IntakeAcknowledgement");
                });

            modelBuilder.Entity("KyoS.Web.Data.Entities.IntakeConsentForReleaseEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("AdmissionedFor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Client_FK")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateSignatureEmployee")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateSignatureLegalGuardian")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateSignaturePerson")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Discaherge")
                        .HasColumnType("bit");

                    b.Property<bool>("Documents")
                        .HasColumnType("bit");

                    b.Property<bool>("ForPurpose_CaseManagement")
                        .HasColumnType("bit");

                    b.Property<bool>("ForPurpose_Other")
                        .HasColumnType("bit");

                    b.Property<string>("ForPurpose_OtherExplain")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("ForPurpose_Treatment")
                        .HasColumnType("bit");

                    b.Property<bool>("History")
                        .HasColumnType("bit");

                    b.Property<bool>("HospitalRecord")
                        .HasColumnType("bit");

                    b.Property<bool>("InForm_Facsimile")
                        .HasColumnType("bit");

                    b.Property<bool>("InForm_VerbalInformation")
                        .HasColumnType("bit");

                    b.Property<bool>("InForm_WrittenRecords")
                        .HasColumnType("bit");

                    b.Property<bool>("IncidentReport")
                        .HasColumnType("bit");

                    b.Property<bool>("LabWork")
                        .HasColumnType("bit");

                    b.Property<bool>("Other")
                        .HasColumnType("bit");

                    b.Property<string>("Other_Explain")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("ProgressReports")
                        .HasColumnType("bit");

                    b.Property<bool>("PsychologycalEvaluation")
                        .HasColumnType("bit");

                    b.Property<bool>("SchoolRecord")
                        .HasColumnType("bit");

                    b.Property<bool>("ToRelease")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("Client_FK")
                        .IsUnique();

                    b.ToTable("IntakeConsentForRelease");
                });

            modelBuilder.Entity("KyoS.Web.Data.Entities.IntakeConsentForTreatmentEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("AdmissionedFor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Aggre")
                        .HasColumnType("bit");

                    b.Property<bool>("Aggre1")
                        .HasColumnType("bit");

                    b.Property<bool>("AuthorizeRelease")
                        .HasColumnType("bit");

                    b.Property<bool>("AuthorizeStaff")
                        .HasColumnType("bit");

                    b.Property<bool>("Certify")
                        .HasColumnType("bit");

                    b.Property<bool>("Certify1")
                        .HasColumnType("bit");

                    b.Property<int>("Client_FK")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateSignatureEmployee")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateSignatureLegalGuardian")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateSignaturePerson")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Documents")
                        .HasColumnType("bit");

                    b.Property<bool>("Underestand")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("Client_FK")
                        .IsUnique();

                    b.ToTable("IntakeConsentForTreatment");
                });

            modelBuilder.Entity("KyoS.Web.Data.Entities.IntakeConsentPhotographEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("AdmissionedFor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Broadcast")
                        .HasColumnType("bit");

                    b.Property<bool>("ByTODocument")
                        .HasColumnType("bit");

                    b.Property<int>("Client_FK")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateSignatureEmployee")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateSignatureLegalGuardian")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateSignaturePerson")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Documents")
                        .HasColumnType("bit");

                    b.Property<bool>("Filmed")
                        .HasColumnType("bit");

                    b.Property<bool>("Interviwed")
                        .HasColumnType("bit");

                    b.Property<bool>("Markrting")
                        .HasColumnType("bit");

                    b.Property<bool>("NoneOfTheForegoing")
                        .HasColumnType("bit");

                    b.Property<string>("Other")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Photograph")
                        .HasColumnType("bit");

                    b.Property<bool>("Publication")
                        .HasColumnType("bit");

                    b.Property<bool>("VideoTaped")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("Client_FK")
                        .IsUnique();

                    b.ToTable("IntakeConsentPhotograph");
                });

            modelBuilder.Entity("KyoS.Web.Data.Entities.IntakeConsumerRightsEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("AdmissionedFor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Client_FK")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateSignatureEmployee")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateSignatureLegalGuardian")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateSignaturePerson")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Documents")
                        .HasColumnType("bit");

                    b.Property<string>("ServedOf")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Client_FK")
                        .IsUnique();

                    b.ToTable("IntakeConsumerRights");
                });

            modelBuilder.Entity("KyoS.Web.Data.Entities.IntakeFeeAgreementEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("AdmissionedFor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Client_FK")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateSignatureEmployee")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateSignatureLegalGuardian")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateSignaturePerson")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Documents")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("Client_FK")
                        .IsUnique();

                    b.ToTable("IntakeFeeAgreement");
                });

            modelBuilder.Entity("KyoS.Web.Data.Entities.IntakeMedicalHistoryEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("AddressPhysician")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AdmissionedFor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AgeFirstTalked")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AgeFirstWalked")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AgeOfFirstMenstruation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AgeToiletTrained")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AgeWeaned")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Allergies")
                        .HasColumnType("bit");

                    b.Property<string>("Allergies_Describe")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("AndOrSoiling")
                        .HasColumnType("bit");

                    b.Property<bool>("Anemia")
                        .HasColumnType("bit");

                    b.Property<bool>("AreYouCurrently")
                        .HasColumnType("bit");

                    b.Property<bool>("AreYouPhysician")
                        .HasColumnType("bit");

                    b.Property<bool>("Arthritis")
                        .HasColumnType("bit");

                    b.Property<bool>("AssumingCertainPositions")
                        .HasColumnType("bit");

                    b.Property<bool>("BackPain")
                        .HasColumnType("bit");

                    b.Property<bool>("BeingConfused")
                        .HasColumnType("bit");

                    b.Property<bool>("BeingDisorientated")
                        .HasColumnType("bit");

                    b.Property<string>("BirthWeight")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("BlackStools")
                        .HasColumnType("bit");

                    b.Property<bool>("BloodInUrine")
                        .HasColumnType("bit");

                    b.Property<bool>("BloodyStools")
                        .HasColumnType("bit");

                    b.Property<string>("BottleFedUntilAge")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("BreastFed")
                        .HasColumnType("bit");

                    b.Property<bool>("BurningUrine")
                        .HasColumnType("bit");

                    b.Property<bool>("Calculating")
                        .HasColumnType("bit");

                    b.Property<bool>("Cancer")
                        .HasColumnType("bit");

                    b.Property<bool>("ChestPain")
                        .HasColumnType("bit");

                    b.Property<bool>("ChronicCough")
                        .HasColumnType("bit");

                    b.Property<bool>("ChronicIndigestion")
                        .HasColumnType("bit");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Client_FK")
                        .HasColumnType("int");

                    b.Property<bool>("Complications")
                        .HasColumnType("bit");

                    b.Property<string>("Complications_Explain")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Comprehending")
                        .HasColumnType("bit");

                    b.Property<bool>("Concentrating")
                        .HasColumnType("bit");

                    b.Property<bool>("Constipation")
                        .HasColumnType("bit");

                    b.Property<bool>("ConvulsionsOrFits")
                        .HasColumnType("bit");

                    b.Property<bool>("CoughingOfBlood")
                        .HasColumnType("bit");

                    b.Property<string>("DateOfLastBreastExam")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DateOfLastPelvic")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DateOfLastPeriod")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateSignatureEmployee")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateSignatureLegalGuardian")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateSignaturePerson")
                        .HasColumnType("datetime2");

                    b.Property<string>("DescriptionOfChild")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Diabetes")
                        .HasColumnType("bit");

                    b.Property<bool>("Diphtheria")
                        .HasColumnType("bit");

                    b.Property<bool>("DoYouSmoke")
                        .HasColumnType("bit");

                    b.Property<string>("DoYouSmoke_PackPerDay")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DoYouSmoke_Year")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Documents")
                        .HasColumnType("bit");

                    b.Property<bool>("EarInfections")
                        .HasColumnType("bit");

                    b.Property<bool>("Epilepsy")
                        .HasColumnType("bit");

                    b.Property<bool>("EyeTrouble")
                        .HasColumnType("bit");

                    b.Property<bool>("Fainting")
                        .HasColumnType("bit");

                    b.Property<bool>("FamilyAsthma")
                        .HasColumnType("bit");

                    b.Property<string>("FamilyAsthma_")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("FamilyCancer")
                        .HasColumnType("bit");

                    b.Property<string>("FamilyCancer_")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("FamilyDiabetes")
                        .HasColumnType("bit");

                    b.Property<string>("FamilyDiabetes_")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("FamilyEpilepsy")
                        .HasColumnType("bit");

                    b.Property<string>("FamilyEpilepsy_")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("FamilyGlaucoma")
                        .HasColumnType("bit");

                    b.Property<string>("FamilyGlaucoma_")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("FamilyHayFever")
                        .HasColumnType("bit");

                    b.Property<string>("FamilyHayFever_")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("FamilyHeartDisease")
                        .HasColumnType("bit");

                    b.Property<string>("FamilyHeartDisease_")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("FamilyHighBloodPressure")
                        .HasColumnType("bit");

                    b.Property<string>("FamilyHighBloodPressure_")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("FamilyKidneyDisease")
                        .HasColumnType("bit");

                    b.Property<string>("FamilyKidneyDisease_")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("FamilyNervousDisorders")
                        .HasColumnType("bit");

                    b.Property<string>("FamilyNervousDisorders_")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("FamilyOther")
                        .HasColumnType("bit");

                    b.Property<string>("FamilyOther_")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("FamilySyphilis")
                        .HasColumnType("bit");

                    b.Property<string>("FamilySyphilis_")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("FamilyTuberculosis")
                        .HasColumnType("bit");

                    b.Property<string>("FamilyTuberculosis_")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstYearMedical")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Fractures")
                        .HasColumnType("bit");

                    b.Property<bool>("FrequentColds")
                        .HasColumnType("bit");

                    b.Property<bool>("FrequentHeadaches")
                        .HasColumnType("bit");

                    b.Property<bool>("FrequentNoseBleeds")
                        .HasColumnType("bit");

                    b.Property<bool>("FrequentSoreThroat")
                        .HasColumnType("bit");

                    b.Property<bool>("FrequentVomiting")
                        .HasColumnType("bit");

                    b.Property<bool>("HaveYouEverBeenPregnant")
                        .HasColumnType("bit");

                    b.Property<bool>("HaveYouEverHadComplications")
                        .HasColumnType("bit");

                    b.Property<bool>("HaveYouEverHadExcessive")
                        .HasColumnType("bit");

                    b.Property<bool>("HaveYouEverHadPainful")
                        .HasColumnType("bit");

                    b.Property<bool>("HaveYouEverHadSpotting")
                        .HasColumnType("bit");

                    b.Property<bool>("HayFever")
                        .HasColumnType("bit");

                    b.Property<bool>("HeadInjury")
                        .HasColumnType("bit");

                    b.Property<bool>("Hearing")
                        .HasColumnType("bit");

                    b.Property<bool>("HearingTrouble")
                        .HasColumnType("bit");

                    b.Property<bool>("HeartPalpitation")
                        .HasColumnType("bit");

                    b.Property<bool>("Hemorrhoids")
                        .HasColumnType("bit");

                    b.Property<bool>("Hepatitis")
                        .HasColumnType("bit");

                    b.Property<bool>("Hernia")
                        .HasColumnType("bit");

                    b.Property<bool>("HighBloodPressure")
                        .HasColumnType("bit");

                    b.Property<bool>("Hoarseness")
                        .HasColumnType("bit");

                    b.Property<string>("Immunizations")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("InfectiousDisease")
                        .HasColumnType("bit");

                    b.Property<bool>("InformationProvided")
                        .HasColumnType("bit");

                    b.Property<bool>("Jaundice")
                        .HasColumnType("bit");

                    b.Property<bool>("KidneyStones")
                        .HasColumnType("bit");

                    b.Property<bool>("KidneyTrouble")
                        .HasColumnType("bit");

                    b.Property<string>("Length")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ListAllCurrentMedications")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LossOfMemory")
                        .HasColumnType("bit");

                    b.Property<bool>("Mumps")
                        .HasColumnType("bit");

                    b.Property<bool>("Nervousness")
                        .HasColumnType("bit");

                    b.Property<bool>("NightSweats")
                        .HasColumnType("bit");

                    b.Property<bool>("Normal")
                        .HasColumnType("bit");

                    b.Property<bool>("PainfulJoints")
                        .HasColumnType("bit");

                    b.Property<bool>("PainfulMuscles")
                        .HasColumnType("bit");

                    b.Property<bool>("PainfulUrination")
                        .HasColumnType("bit");

                    b.Property<bool>("PerformingCertainMotions")
                        .HasColumnType("bit");

                    b.Property<bool>("Planned")
                        .HasColumnType("bit");

                    b.Property<bool>("Poliomyelitis")
                        .HasColumnType("bit");

                    b.Property<string>("PrimaryCarePhysician")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("ProblemWithBedWetting")
                        .HasColumnType("bit");

                    b.Property<bool>("Reading")
                        .HasColumnType("bit");

                    b.Property<bool>("RheumaticFever")
                        .HasColumnType("bit");

                    b.Property<bool>("Rheumatism")
                        .HasColumnType("bit");

                    b.Property<bool>("ScarletFever")
                        .HasColumnType("bit");

                    b.Property<bool>("Seeing")
                        .HasColumnType("bit");

                    b.Property<bool>("SeriousInjury")
                        .HasColumnType("bit");

                    b.Property<bool>("ShortnessOfBreath")
                        .HasColumnType("bit");

                    b.Property<bool>("SkinTrouble")
                        .HasColumnType("bit");

                    b.Property<bool>("Speaking")
                        .HasColumnType("bit");

                    b.Property<string>("State")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("StomachPain")
                        .HasColumnType("bit");

                    b.Property<bool>("Surgery")
                        .HasColumnType("bit");

                    b.Property<bool>("SwellingOfFeet")
                        .HasColumnType("bit");

                    b.Property<bool>("SwollenAnkles")
                        .HasColumnType("bit");

                    b.Property<bool>("Tuberculosis")
                        .HasColumnType("bit");

                    b.Property<bool>("Unplanned")
                        .HasColumnType("bit");

                    b.Property<string>("UsualDurationOfPeriods")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsualIntervalBetweenPeriods")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("VaricoseVeins")
                        .HasColumnType("bit");

                    b.Property<bool>("VenerealDisease")
                        .HasColumnType("bit");

                    b.Property<bool>("VomitingOfBlood")
                        .HasColumnType("bit");

                    b.Property<bool>("Walking")
                        .HasColumnType("bit");

                    b.Property<bool>("WeightLoss")
                        .HasColumnType("bit");

                    b.Property<bool>("WhoopingCough")
                        .HasColumnType("bit");

                    b.Property<bool>("WritingSentence")
                        .HasColumnType("bit");

                    b.Property<string>("ZipCode")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Client_FK")
                        .IsUnique();

                    b.ToTable("IntakeMedicalHistory");
                });

            modelBuilder.Entity("KyoS.Web.Data.Entities.IntakeOrientationChecklistEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<bool>("Access")
                        .HasColumnType("bit");

                    b.Property<string>("AdmissionedFor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("AgencyExpectation")
                        .HasColumnType("bit");

                    b.Property<bool>("AgencyPolice")
                        .HasColumnType("bit");

                    b.Property<int>("Client_FK")
                        .HasColumnType("int");

                    b.Property<bool>("Code")
                        .HasColumnType("bit");

                    b.Property<bool>("Confidentiality")
                        .HasColumnType("bit");

                    b.Property<DateTime>("DateSignatureEmployee")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateSignatureLegalGuardian")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateSignaturePerson")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Discharge")
                        .HasColumnType("bit");

                    b.Property<bool>("Documents")
                        .HasColumnType("bit");

                    b.Property<bool>("Education")
                        .HasColumnType("bit");

                    b.Property<bool>("Explanation")
                        .HasColumnType("bit");

                    b.Property<bool>("Fire")
                        .HasColumnType("bit");

                    b.Property<bool>("Identification")
                        .HasColumnType("bit");

                    b.Property<bool>("IndividualPlan")
                        .HasColumnType("bit");

                    b.Property<bool>("Insent")
                        .HasColumnType("bit");

                    b.Property<bool>("Methods")
                        .HasColumnType("bit");

                    b.Property<bool>("PoliceGrievancce")
                        .HasColumnType("bit");

                    b.Property<bool>("PoliceIllicit")
                        .HasColumnType("bit");

                    b.Property<bool>("PoliceTobacco")
                        .HasColumnType("bit");

                    b.Property<bool>("PoliceWeapons")
                        .HasColumnType("bit");

                    b.Property<bool>("Program")
                        .HasColumnType("bit");

                    b.Property<bool>("Purpose")
                        .HasColumnType("bit");

                    b.Property<bool>("Rights")
                        .HasColumnType("bit");

                    b.Property<bool>("Services")
                        .HasColumnType("bit");

                    b.Property<bool>("TheAbove")
                        .HasColumnType("bit");

                    b.Property<bool>("TourFacility")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("Client_FK")
                        .IsUnique();

                    b.ToTable("IntakeOrientationCheckList");
                });

            modelBuilder.Entity("KyoS.Web.Data.Entities.IntakeScreeningEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("BehaviorIsStatus")
                        .HasColumnType("int");

                    b.Property<int>("ClientIsStatus")
                        .HasColumnType("int");

                    b.Property<int>("Client_FK")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateDischarge")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateSignatureClient")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateSignatureEmployee")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateSignatureWitness")
                        .HasColumnType("datetime2");

                    b.Property<bool>("DoesClientKnowHisName")
                        .HasColumnType("bit");

                    b.Property<bool>("DoesClientKnowTimeOfDay")
                        .HasColumnType("bit");

                    b.Property<bool>("DoesClientKnowTodayDate")
                        .HasColumnType("bit");

                    b.Property<bool>("DoesClientKnowWhereIs")
                        .HasColumnType("bit");

                    b.Property<bool>("EmergencyContact")
                        .HasColumnType("bit");

                    b.Property<string>("InformationGatheredBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SpeechIsStatus")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Client_FK")
                        .IsUnique();

                    b.ToTable("IntakeScreenings");
                });

            modelBuilder.Entity("KyoS.Web.Data.Entities.IntakeTransportationEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("AdmissionedFor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Client_FK")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateSignatureEmployee")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateSignatureLegalGuardian")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateSignaturePerson")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Documents")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("Client_FK")
                        .IsUnique();

                    b.ToTable("IntakeTransportation");
                });

            modelBuilder.Entity("KyoS.Web.Data.Entities.IntakeTuberculosisEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("AdmissionedFor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("AgencyExpectation")
                        .HasColumnType("bit");

                    b.Property<bool>("AreYouRecently")
                        .HasColumnType("bit");

                    b.Property<int>("Client_FK")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateSignatureEmployee")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateSignatureLegalGuardian")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateSignaturePerson")
                        .HasColumnType("datetime2");

                    b.Property<bool>("DoYouBring")
                        .HasColumnType("bit");

                    b.Property<bool>("DoYouCough")
                        .HasColumnType("bit");

                    b.Property<bool>("DoYouCurrently")
                        .HasColumnType("bit");

                    b.Property<bool>("DoYouHaveChest")
                        .HasColumnType("bit");

                    b.Property<bool>("DoYouHaveFever")
                        .HasColumnType("bit");

                    b.Property<bool>("DoYouOr")
                        .HasColumnType("bit");

                    b.Property<bool>("DoYouSweat")
                        .HasColumnType("bit");

                    b.Property<bool>("Documents")
                        .HasColumnType("bit");

                    b.Property<bool>("HaveYouEverBeen")
                        .HasColumnType("bit");

                    b.Property<bool>("HaveYouEverConsidered")
                        .HasColumnType("bit");

                    b.Property<bool>("HaveYouEverHadAbnormal")
                        .HasColumnType("bit");

                    b.Property<bool>("HaveYouEverHadOrgan")
                        .HasColumnType("bit");

                    b.Property<bool>("HaveYouEverHadPositive")
                        .HasColumnType("bit");

                    b.Property<bool>("HaveYouEverWorked")
                        .HasColumnType("bit");

                    b.Property<bool>("HaveYouLost")
                        .HasColumnType("bit");

                    b.Property<bool>("HaveYouRecently")
                        .HasColumnType("bit");

                    b.Property<bool>("HaveYoyEverBeenTold")
                        .HasColumnType("bit");

                    b.Property<bool>("If1OrMore")
                        .HasColumnType("bit");

                    b.Property<bool>("If2OrMore")
                        .HasColumnType("bit");

                    b.Property<bool>("If3OrMore")
                        .HasColumnType("bit");

                    b.Property<string>("IfYesWhere")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IfYesWhich")
                        .HasColumnType("bit");

                    b.Property<string>("When")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Client_FK")
                        .IsUnique();

                    b.ToTable("IntakeTuberculosis");
                });

            modelBuilder.Entity("KyoS.Web.Data.Entities.LegalGuardianEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AdressLine2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("State")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telephone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TelephoneSecondary")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ZipCode")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("LegalGuardians");
                });

            modelBuilder.Entity("KyoS.Web.Data.Entities.MTPEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("AdditionalRecommended")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("AdmissionDateMTP")
                        .HasColumnType("datetime2");

                    b.Property<string>("AdmissionedFor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ClientId")
                        .HasColumnType("int");

                    b.Property<string>("ClientLimitation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClientStrengths")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOfUpdate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DocumentAssistantId")
                        .HasColumnType("int");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Family")
                        .HasColumnType("bit");

                    b.Property<string>("FamilyCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FamilyDuration")
                        .HasColumnType("int");

                    b.Property<string>("FamilyFrecuency")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FamilyUnits")
                        .HasColumnType("int");

                    b.Property<string>("Frecuency")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Group")
                        .HasColumnType("bit");

                    b.Property<string>("GroupCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GroupDuration")
                        .HasColumnType("int");

                    b.Property<string>("GroupFrecuency")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GroupUnits")
                        .HasColumnType("int");

                    b.Property<bool>("Health")
                        .HasColumnType("bit");

                    b.Property<string>("HealthWhere")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Individual")
                        .HasColumnType("bit");

                    b.Property<string>("IndividualCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IndividualDuration")
                        .HasColumnType("int");

                    b.Property<string>("IndividualFrecuency")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IndividualUnits")
                        .HasColumnType("int");

                    b.Property<string>("InitialDischargeCriteria")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Legal")
                        .HasColumnType("bit");

                    b.Property<string>("LegalWhere")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LevelCare")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("MTPDevelopedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Medication")
                        .HasColumnType("bit");

                    b.Property<string>("MedicationCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MedicationDuration")
                        .HasColumnType("int");

                    b.Property<string>("MedicationFrecuency")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MedicationUnits")
                        .HasColumnType("int");

                    b.Property<string>("Modality")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("NumberOfMonths")
                        .HasColumnType("int");

                    b.Property<bool>("Other")
                        .HasColumnType("bit");

                    b.Property<string>("OtherWhere")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Paint")
                        .HasColumnType("bit");

                    b.Property<string>("PaintWhere")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Psychosocial")
                        .HasColumnType("bit");

                    b.Property<string>("PsychosocialCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PsychosocialDuration")
                        .HasColumnType("int");

                    b.Property<string>("PsychosocialFrecuency")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PsychosocialUnits")
                        .HasColumnType("int");

                    b.Property<string>("RationaleForUpdate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Setting")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<bool>("Substance")
                        .HasColumnType("bit");

                    b.Property<string>("SubstanceWhere")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("SupervisorDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("SupervisorId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.HasIndex("DocumentAssistantId");

                    b.HasIndex("SupervisorId");

                    b.ToTable("MTPs");
                });

            modelBuilder.Entity("KyoS.Web.Data.Entities.MTPReviewEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<bool>("ACopy")
                        .HasColumnType("bit");

                    b.Property<string>("ClinicalDirector")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataOfService")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateClinicalDirector")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateLicensedPractitioner")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateSignaturePerson")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateTherapist")
                        .HasColumnType("datetime2");

                    b.Property<string>("DescribeAnyGoals")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DescribeClient")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Documents")
                        .HasColumnType("bit");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Frecuency")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IfCurrent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("LicensedPractitioner")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MTP_FK")
                        .HasColumnType("int");

                    b.Property<int>("MonthOfTreatment")
                        .HasColumnType("int");

                    b.Property<int?>("MtpId")
                        .HasColumnType("int");

                    b.Property<int>("NumberUnit")
                        .HasColumnType("int");

                    b.Property<string>("ProviderNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ReviewedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("ServiceCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Setting")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SpecifyChanges")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("SummaryOfServices")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TheConsumer")
                        .HasColumnType("bit");

                    b.Property<bool>("TheTreatmentPlan")
                        .HasColumnType("bit");

                    b.Property<string>("Therapist")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("MtpId");

                    b.ToTable("MTPReviews");
                });

            modelBuilder.Entity("KyoS.Web.Data.Entities.MedicationEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("ClientId")
                        .HasColumnType("int");

                    b.Property<string>("Dosage")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Frequency")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Prescriber")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.ToTable("Medication");
                });

            modelBuilder.Entity("KyoS.Web.Data.Entities.MessageEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("AddendumId")
                        .HasColumnType("int");

                    b.Property<int?>("BioId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateRead")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DischargeId")
                        .HasColumnType("int");

                    b.Property<int?>("FarsFormId")
                        .HasColumnType("int");

                    b.Property<string>("From")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("IncidentId")
                        .HasColumnType("int");

                    b.Property<int?>("MTPReviewId")
                        .HasColumnType("int");

                    b.Property<int?>("MtpId")
                        .HasColumnType("int");

                    b.Property<bool>("Notification")
                        .HasColumnType("bit");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("To")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Workday_ClientId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AddendumId");

                    b.HasIndex("BioId");

                    b.HasIndex("DischargeId");

                    b.HasIndex("FarsFormId");

                    b.HasIndex("IncidentId");

                    b.HasIndex("MTPReviewId");

                    b.HasIndex("MtpId");

                    b.HasIndex("Workday_ClientId");

                    b.ToTable("Messages");
                });

            modelBuilder.Entity("KyoS.Web.Data.Entities.NoteEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<bool>("Adequate")
                        .HasColumnType("bit");

                    b.Property<bool>("AdequateAC")
                        .HasColumnType("bit");

                    b.Property<bool>("Anxious")
                        .HasColumnType("bit");

                    b.Property<bool>("Congruent")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DateOfApprove")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Decompensating")
                        .HasColumnType("bit");

                    b.Property<bool>("Depressed")
                        .HasColumnType("bit");

                    b.Property<bool>("Dramatized")
                        .HasColumnType("bit");

                    b.Property<bool>("Euphoric")
                        .HasColumnType("bit");

                    b.Property<bool>("Euthymic")
                        .HasColumnType("bit");

                    b.Property<bool>("Fair")
                        .HasColumnType("bit");

                    b.Property<bool>("Faulty")
                        .HasColumnType("bit");

                    b.Property<bool>("Guarded")
                        .HasColumnType("bit");

                    b.Property<bool>("Hostile")
                        .HasColumnType("bit");

                    b.Property<bool>("Impaired")
                        .HasColumnType("bit");

                    b.Property<bool>("Inadequate")
                        .HasColumnType("bit");

                    b.Property<bool>("Irritable")
                        .HasColumnType("bit");

                    b.Property<bool>("Limited")
                        .HasColumnType("bit");

                    b.Property<int?>("MTPId")
                        .HasColumnType("int");

                    b.Property<bool>("MildlyImpaired")
                        .HasColumnType("bit");

                    b.Property<bool>("MinimalProgress")
                        .HasColumnType("bit");

                    b.Property<bool>("ModerateProgress")
                        .HasColumnType("bit");

                    b.Property<bool>("Motivated")
                        .HasColumnType("bit");

                    b.Property<bool>("Negativistic")
                        .HasColumnType("bit");

                    b.Property<bool>("NoProgress")
                        .HasColumnType("bit");

                    b.Property<bool>("Normal")
                        .HasColumnType("bit");

                    b.Property<bool>("NotPerson")
                        .HasColumnType("bit");

                    b.Property<bool>("NotPlace")
                        .HasColumnType("bit");

                    b.Property<bool>("NotTime")
                        .HasColumnType("bit");

                    b.Property<bool>("Optimistic")
                        .HasColumnType("bit");

                    b.Property<bool>("OrientedX3")
                        .HasColumnType("bit");

                    b.Property<string>("PlanNote")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Present")
                        .HasColumnType("bit");

                    b.Property<bool>("Regression")
                        .HasColumnType("bit");

                    b.Property<int>("Schema")
                        .HasColumnType("int");

                    b.Property<string>("Setting")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("SeverelyImpaired")
                        .HasColumnType("bit");

                    b.Property<bool>("ShortSpanned")
                        .HasColumnType("bit");

                    b.Property<bool>("SignificantProgress")
                        .HasColumnType("bit");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int?>("SupervisorId")
                        .HasColumnType("int");

                    b.Property<bool>("UnableToDetermine")
                        .HasColumnType("bit");

                    b.Property<bool>("Unmotivated")
                        .HasColumnType("bit");

                    b.Property<bool>("Withdrawn")
                        .HasColumnType("bit");

                    b.Property<int>("Workday_Client_FK")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SupervisorId");

                    b.HasIndex("Workday_Client_FK")
                        .IsUnique();

                    b.ToTable("Notes");
                });

            modelBuilder.Entity("KyoS.Web.Data.Entities.NotePEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<bool>("AbleToGenerateAlternatives")
                        .HasColumnType("bit");

                    b.Property<bool>("Angry")
                        .HasColumnType("bit");

                    b.Property<bool>("Anxious")
                        .HasColumnType("bit");

                    b.Property<bool>("AppropiateEyeContact")
                        .HasColumnType("bit");

                    b.Property<bool>("Attentive")
                        .HasColumnType("bit");

                    b.Property<bool>("Aware")
                        .HasColumnType("bit");

                    b.Property<bool>("Complicated")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DateOfApprove")
                        .HasColumnType("datetime2");

                    b.Property<bool>("DecreasedEyeContact")
                        .HasColumnType("bit");

                    b.Property<bool>("DemostratesEmpathy")
                        .HasColumnType("bit");

                    b.Property<bool>("Depressed")
                        .HasColumnType("bit");

                    b.Property<bool>("DevelopingInsight")
                        .HasColumnType("bit");

                    b.Property<bool>("FlatAffect")
                        .HasColumnType("bit");

                    b.Property<bool>("GoodExcelent")
                        .HasColumnType("bit");

                    b.Property<bool>("Impulsive")
                        .HasColumnType("bit");

                    b.Property<bool>("Inattentive")
                        .HasColumnType("bit");

                    b.Property<bool>("IncreasedDifficultiesNoted")
                        .HasColumnType("bit");

                    b.Property<bool>("Initiates")
                        .HasColumnType("bit");

                    b.Property<bool>("Labile")
                        .HasColumnType("bit");

                    b.Property<bool>("LittleInsight")
                        .HasColumnType("bit");

                    b.Property<int?>("MTPId")
                        .HasColumnType("int");

                    b.Property<bool>("Minimal")
                        .HasColumnType("bit");

                    b.Property<bool>("Oriented1x")
                        .HasColumnType("bit");

                    b.Property<bool>("Oriented2x")
                        .HasColumnType("bit");

                    b.Property<bool>("Oriented3x")
                        .HasColumnType("bit");

                    b.Property<string>("PlanNote")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PositiveEffect")
                        .HasColumnType("bit");

                    b.Property<bool>("ProblemSolved")
                        .HasColumnType("bit");

                    b.Property<int>("RealUnits")
                        .HasColumnType("int");

                    b.Property<bool>("RelatesWell")
                        .HasColumnType("bit");

                    b.Property<bool>("Sad")
                        .HasColumnType("bit");

                    b.Property<int>("Schema")
                        .HasColumnType("int");

                    b.Property<string>("Setting")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Slow")
                        .HasColumnType("bit");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<bool>("Steady")
                        .HasColumnType("bit");

                    b.Property<int?>("SupervisorId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("UsesSessions")
                        .HasColumnType("bit");

                    b.Property<bool>("Variable")
                        .HasColumnType("bit");

                    b.Property<bool>("Withdrawn")
                        .HasColumnType("bit");

                    b.Property<int>("Workday_Client_FK")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SupervisorId");

                    b.HasIndex("Workday_Client_FK")
                        .IsUnique();

                    b.ToTable("NotesP");
                });

            modelBuilder.Entity("KyoS.Web.Data.Entities.NoteP_Activity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("ActivityId")
                        .HasColumnType("int");

                    b.Property<bool>("Aggresive")
                        .HasColumnType("bit");

                    b.Property<bool>("Assertive")
                        .HasColumnType("bit");

                    b.Property<bool>("Confused")
                        .HasColumnType("bit");

                    b.Property<bool>("Cooperative")
                        .HasColumnType("bit");

                    b.Property<bool>("Distractible")
                        .HasColumnType("bit");

                    b.Property<bool>("EngagedActive")
                        .HasColumnType("bit");

                    b.Property<int?>("NotePId")
                        .HasColumnType("int");

                    b.Property<int?>("ObjetiveId")
                        .HasColumnType("int");

                    b.Property<bool>("Other")
                        .HasColumnType("bit");

                    b.Property<bool>("Passive")
                        .HasColumnType("bit");

                    b.Property<bool>("Present")
                        .HasColumnType("bit");

                    b.Property<bool>("Resistant")
                        .HasColumnType("bit");

                    b.Property<bool>("Uninterested")
                        .HasColumnType("bit");

                    b.Property<bool>("Variable")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("ActivityId");

                    b.HasIndex("NotePId");

                    b.HasIndex("ObjetiveId");

                    b.ToTable("NotesP_Activities");
                });

            modelBuilder.Entity("KyoS.Web.Data.Entities.NotePrototypeEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("ActivityId")
                        .HasColumnType("int");

                    b.Property<string>("AnswerClient")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("AnswerFacilitator")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.HasKey("Id");

                    b.HasIndex("ActivityId");

                    b.ToTable("NotesPrototypes");
                });

            modelBuilder.Entity("KyoS.Web.Data.Entities.NotePrototype_Classification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("ClassificationId")
                        .HasColumnType("int");

                    b.Property<int?>("NoteId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClassificationId");

                    b.HasIndex("NoteId");

                    b.ToTable("NotesPrototypes_Classifications");
                });

            modelBuilder.Entity("KyoS.Web.Data.Entities.Note_Activity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("ActivityId")
                        .HasColumnType("int");

                    b.Property<string>("AnswerClient")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AnswerFacilitator")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("NoteId")
                        .HasColumnType("int");

                    b.Property<int?>("ObjetiveId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ActivityId");

                    b.HasIndex("NoteId");

                    b.HasIndex("ObjetiveId");

                    b.ToTable("Notes_Activities");
                });

            modelBuilder.Entity("KyoS.Web.Data.Entities.ObjectiveTempEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("DateOpened")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateResolved")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateTarget")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("GoalTempId")
                        .HasColumnType("int");

                    b.Property<string>("Intervention")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Objetive")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("GoalTempId");

                    b.ToTable("ObjetivesTemp");
                });

            modelBuilder.Entity("KyoS.Web.Data.Entities.ObjetiveEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<bool>("Compliment")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Compliment_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Compliment_Explain")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Compliment_IdMTPReview")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateOpened")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateResolved")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateTarget")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("GoalId")
                        .HasColumnType("int");

                    b.Property<int>("IdMTPReview")
                        .HasColumnType("int");

                    b.Property<string>("Intervention")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Objetive")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("GoalId");

                    b.ToTable("Objetives");
                });

            modelBuilder.Entity("KyoS.Web.Data.Entities.Objetive_Classification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("ClassificationId")
                        .HasColumnType("int");

                    b.Property<int?>("ObjetiveId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClassificationId");

                    b.HasIndex("ObjetiveId");

                    b.ToTable("Objetives_Classifications");
                });

            modelBuilder.Entity("KyoS.Web.Data.Entities.PlanEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Plans");
                });

            modelBuilder.Entity("KyoS.Web.Data.Entities.Plan_Classification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("ClassificationId")
                        .HasColumnType("int");

                    b.Property<int?>("PlanId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClassificationId");

                    b.HasIndex("PlanId");

                    b.ToTable("Plans_Classifications");
                });

            modelBuilder.Entity("KyoS.Web.Data.Entities.PsychiatristEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Telephone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Psychiatrists");
                });

            modelBuilder.Entity("KyoS.Web.Data.Entities.ReferredEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Agency")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Telephone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Referreds");
                });

            modelBuilder.Entity("KyoS.Web.Data.Entities.ReferredTempEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Agency")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdReferred")
                        .HasColumnType("int");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ReferredNote")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Service")
                        .HasColumnType("int");

                    b.Property<string>("Telephone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ReferredsTemp");
                });

            modelBuilder.Entity("KyoS.Web.Data.Entities.SettingEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<bool>("AvailableCreateNewWorkdays")
                        .HasColumnType("bit");

                    b.Property<int>("Clinic_FK")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("MHClassificationOfGoals")
                        .HasColumnType("bit");

                    b.Property<bool>("MHProblems")
                        .HasColumnType("bit");

                    b.Property<bool>("MentalHealthClinic")
                        .HasColumnType("bit");

                    b.Property<bool>("TCMClinic")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("Clinic_FK")
                        .IsUnique();

                    b.ToTable("Settings");
                });

            modelBuilder.Entity("KyoS.Web.Data.Entities.SupervisorEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("ClinicId")
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Firm")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LinkedUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("RaterEducation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RaterFMHCertification")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SignaturePath")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ClinicId");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Supervisors");
                });

            modelBuilder.Entity("KyoS.Web.Data.Entities.TCMAdendumEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("Approved")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateAdendum")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("LongTerm")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NeedsIdentified")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TcmDomainId")
                        .HasColumnType("int");

                    b.Property<int?>("TcmServicePlanId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.HasIndex("TcmDomainId");

                    b.HasIndex("TcmServicePlanId");

                    b.ToTable("TCMAdendums");
                });

            modelBuilder.Entity("KyoS.Web.Data.Entities.TCMAssessmentDrugEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateBegin")
                        .HasColumnType("datetime2");

                    b.Property<string>("Frequency")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastTimeUsed")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SustanceName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TcmAssessmentId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TcmAssessmentId");

                    b.ToTable("TCMAssessmentDrug");
                });

            modelBuilder.Entity("KyoS.Web.Data.Entities.TCMAssessmentEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<bool>("AHomeVisit")
                        .HasColumnType("bit");

                    b.Property<string>("AHomeVisitOn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("AbuseViolence")
                        .HasColumnType("bit");

                    b.Property<bool>("AcademicEelementary")
                        .HasColumnType("bit");

                    b.Property<bool>("AcademicHigh")
                        .HasColumnType("bit");

                    b.Property<bool>("AcademicMiddle")
                        .HasColumnType("bit");

                    b.Property<bool>("AcademicPreSchool")
                        .HasColumnType("bit");

                    b.Property<string>("AdditionalInformation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AdditionalInformationMigration")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Allergy")
                        .HasColumnType("bit");

                    b.Property<string>("AllergySpecify")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AnyOther")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Appliances")
                        .HasColumnType("bit");

                    b.Property<int>("Approved")
                        .HasColumnType("int");

                    b.Property<bool>("AreAllImmunization")
                        .HasColumnType("bit");

                    b.Property<string>("AreAllImmunizationExplain")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("AreChild")
                        .HasColumnType("bit");

                    b.Property<string>("AreChildAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AreChildCity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AreChildName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AreChildPhone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("AreYouPhysician")
                        .HasColumnType("bit");

                    b.Property<string>("AreYouPhysicianSpecify")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("AttendanceEelementary")
                        .HasColumnType("bit");

                    b.Property<bool>("AttendanceHigh")
                        .HasColumnType("bit");

                    b.Property<bool>("AttendanceMiddle")
                        .HasColumnType("bit");

                    b.Property<bool>("AttendancePreSchool")
                        .HasColumnType("bit");

                    b.Property<bool>("BathingAssistive")
                        .HasColumnType("bit");

                    b.Property<bool>("BathingIndependent")
                        .HasColumnType("bit");

                    b.Property<bool>("BathingPhysical")
                        .HasColumnType("bit");

                    b.Property<bool>("BathingSupervision")
                        .HasColumnType("bit");

                    b.Property<bool>("BathingTotal")
                        .HasColumnType("bit");

                    b.Property<bool>("Bathtub")
                        .HasColumnType("bit");

                    b.Property<bool>("BehaviorEelementary")
                        .HasColumnType("bit");

                    b.Property<bool>("BehaviorHigh")
                        .HasColumnType("bit");

                    b.Property<bool>("BehaviorMiddle")
                        .HasColumnType("bit");

                    b.Property<bool>("BehaviorPreSchool")
                        .HasColumnType("bit");

                    b.Property<string>("Briefly")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("CantDoItAtAll")
                        .HasColumnType("bit");

                    b.Property<bool>("Caregiver")
                        .HasColumnType("bit");

                    b.Property<bool>("CaseManagerWas")
                        .HasColumnType("bit");

                    b.Property<string>("CaseManagerWasDueTo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ChildFather")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ChildMother")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Citizen")
                        .HasColumnType("bit");

                    b.Property<bool>("ClientInput")
                        .HasColumnType("bit");

                    b.Property<string>("ColonCancer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("CongredatedHowOften")
                        .HasColumnType("real");

                    b.Property<string>("CongredatedProvider")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("CongredatedReceive")
                        .HasColumnType("bit");

                    b.Property<bool>("ContinueToLive")
                        .HasColumnType("bit");

                    b.Property<bool>("ContinueToLiveOnly")
                        .HasColumnType("bit");

                    b.Property<bool>("CookingAssistive")
                        .HasColumnType("bit");

                    b.Property<bool>("CookingIndependent")
                        .HasColumnType("bit");

                    b.Property<bool>("CookingPhysical")
                        .HasColumnType("bit");

                    b.Property<bool>("CookingSupervision")
                        .HasColumnType("bit");

                    b.Property<bool>("CookingTotal")
                        .HasColumnType("bit");

                    b.Property<string>("CountryOfBirth")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("CurrentEmployer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateAssessment")
                        .HasColumnType("datetime2");

                    b.Property<string>("DateMostRecent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateOfOnSetPresentingProblem")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateSignatureCaseManager")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateSignatureTCMSupervisor")
                        .HasColumnType("datetime2");

                    b.Property<string>("DentalExam")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DescribeAnyOther")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DescribeAnyRisk")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DescribeAnySchool")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DescribeClientCultural")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DescribeClientEducation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DescribeClientLiving")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DescribeClientRelationship")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DescribeNeighborhood")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DescribeOtherNeedConcerns")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Divorced")
                        .HasColumnType("bit");

                    b.Property<bool>("DoesAggressiveness")
                        .HasColumnType("bit");

                    b.Property<bool>("DoesAnxiety")
                        .HasColumnType("bit");

                    b.Property<string>("DoesClientBasicNeed")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("DoesClientCurrently")
                        .HasColumnType("bit");

                    b.Property<string>("DoesClientCurrentlyExplain")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("DoesClientFeel")
                        .HasColumnType("bit");

                    b.Property<string>("DoesClientFeelExplain")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("DoesClientNeedAssistance")
                        .HasColumnType("bit");

                    b.Property<bool>("DoesClientNeedAssistanceEducational")
                        .HasColumnType("bit");

                    b.Property<string>("DoesClientNeedAssistanceEducationalExplain")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DoesClientNeedAssistanceExplain")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("DoesClientTranspotation")
                        .HasColumnType("bit");

                    b.Property<string>("DoesClientTranspotationExplain")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("DoesDelusions")
                        .HasColumnType("bit");

                    b.Property<bool>("DoesDepression")
                        .HasColumnType("bit");

                    b.Property<bool>("DoesFearfulness")
                        .HasColumnType("bit");

                    b.Property<bool>("DoesHallucinations")
                        .HasColumnType("bit");

                    b.Property<bool>("DoesHelplessness")
                        .HasColumnType("bit");

                    b.Property<bool>("DoesHopelessness")
                        .HasColumnType("bit");

                    b.Property<bool>("DoesHyperactivity")
                        .HasColumnType("bit");

                    b.Property<bool>("DoesImpulsivity")
                        .HasColumnType("bit");

                    b.Property<bool>("DoesIrritability")
                        .HasColumnType("bit");

                    b.Property<bool>("DoesLoss")
                        .HasColumnType("bit");

                    b.Property<bool>("DoesLow")
                        .HasColumnType("bit");

                    b.Property<bool>("DoesMood")
                        .HasColumnType("bit");

                    b.Property<bool>("DoesNegative")
                        .HasColumnType("bit");

                    b.Property<bool>("DoesNervousness")
                        .HasColumnType("bit");

                    b.Property<bool>("DoesNotKnow")
                        .HasColumnType("bit");

                    b.Property<bool>("DoesObsessive")
                        .HasColumnType("bit");

                    b.Property<bool>("DoesPanic")
                        .HasColumnType("bit");

                    b.Property<bool>("DoesParanoia")
                        .HasColumnType("bit");

                    b.Property<bool>("DoesPoor")
                        .HasColumnType("bit");

                    b.Property<bool>("DoesSadness")
                        .HasColumnType("bit");

                    b.Property<bool>("DoesSelfNeglect")
                        .HasColumnType("bit");

                    b.Property<bool>("DoesSheUnderstand")
                        .HasColumnType("bit");

                    b.Property<bool>("DoesSleep")
                        .HasColumnType("bit");

                    b.Property<bool>("DoesTheClientFeel")
                        .HasColumnType("bit");

                    b.Property<bool>("DoesWithdrawal")
                        .HasColumnType("bit");

                    b.Property<bool>("DoingAssistive")
                        .HasColumnType("bit");

                    b.Property<bool>("DoingIndependent")
                        .HasColumnType("bit");

                    b.Property<bool>("DoingPhysical")
                        .HasColumnType("bit");

                    b.Property<bool>("DoingSupervision")
                        .HasColumnType("bit");

                    b.Property<bool>("DoingTotal")
                        .HasColumnType("bit");

                    b.Property<bool>("DressingAssistive")
                        .HasColumnType("bit");

                    b.Property<bool>("DressingIndependent")
                        .HasColumnType("bit");

                    b.Property<bool>("DressingPhysical")
                        .HasColumnType("bit");

                    b.Property<bool>("DressingSupervision")
                        .HasColumnType("bit");

                    b.Property<bool>("DressingTotal")
                        .HasColumnType("bit");

                    b.Property<bool>("Drives")
                        .HasColumnType("bit");

                    b.Property<bool>("Electrical")
                        .HasColumnType("bit");

                    b.Property<string>("EmployerAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmployerCityState")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmployerContactPerson")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmployerPhone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmploymentStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("ExcessiveCluter")
                        .HasColumnType("bit");

                    b.Property<bool>("FailToEelementary")
                        .HasColumnType("bit");

                    b.Property<bool>("FailToHigh")
                        .HasColumnType("bit");

                    b.Property<bool>("FailToMiddle")
                        .HasColumnType("bit");

                    b.Property<bool>("FailToPreSchool")
                        .HasColumnType("bit");

                    b.Property<bool>("Family")
                        .HasColumnType("bit");

                    b.Property<bool>("FeedingAssistive")
                        .HasColumnType("bit");

                    b.Property<bool>("FeedingIndependent")
                        .HasColumnType("bit");

                    b.Property<bool>("FeedingPhysical")
                        .HasColumnType("bit");

                    b.Property<bool>("FeedingSupervision")
                        .HasColumnType("bit");

                    b.Property<bool>("FeedingTotal")
                        .HasColumnType("bit");

                    b.Property<bool>("FireHazards")
                        .HasColumnType("bit");

                    b.Property<bool>("Flooring")
                        .HasColumnType("bit");

                    b.Property<float>("FoodPantryHowOften")
                        .HasColumnType("real");

                    b.Property<string>("FoodPantryProvider")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("FoodPantryReceive")
                        .HasColumnType("bit");

                    b.Property<float>("FoodStampHowOften")
                        .HasColumnType("real");

                    b.Property<string>("FoodStampProvider")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("FoodStampReceive")
                        .HasColumnType("bit");

                    b.Property<bool>("FriendOrFamily")
                        .HasColumnType("bit");

                    b.Property<bool>("GroomingAssistive")
                        .HasColumnType("bit");

                    b.Property<bool>("GroomingIndependent")
                        .HasColumnType("bit");

                    b.Property<bool>("GroomingPhysical")
                        .HasColumnType("bit");

                    b.Property<bool>("GroomingSupervision")
                        .HasColumnType("bit");

                    b.Property<bool>("GroomingTotal")
                        .HasColumnType("bit");

                    b.Property<bool>("HasClientEverArrest")
                        .HasColumnType("bit");

                    b.Property<string>("HasClientEverArrestLastTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HasClientEverArrestManyTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("HasClientUndergone")
                        .HasColumnType("bit");

                    b.Property<bool>("HasDifficultySeeingLevel")
                        .HasColumnType("bit");

                    b.Property<bool>("HasDifficultySeeingObjetive")
                        .HasColumnType("bit");

                    b.Property<bool>("HasNoImpairment")
                        .HasColumnType("bit");

                    b.Property<bool>("HasNoUsefull")
                        .HasColumnType("bit");

                    b.Property<bool>("HasTheClient")
                        .HasColumnType("bit");

                    b.Property<bool>("HaveYouEverBeenToAny")
                        .HasColumnType("bit");

                    b.Property<bool>("HaveYouEverUsedAlcohol")
                        .HasColumnType("bit");

                    b.Property<bool>("HearingDifficulty")
                        .HasColumnType("bit");

                    b.Property<bool>("HearingImpairment")
                        .HasColumnType("bit");

                    b.Property<bool>("HearingNotDetermined")
                        .HasColumnType("bit");

                    b.Property<bool>("Hears")
                        .HasColumnType("bit");

                    b.Property<float>("HomeDeliveredHowOften")
                        .HasColumnType("real");

                    b.Property<string>("HomeDeliveredProvider")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("HomeDeliveredReceive")
                        .HasColumnType("bit");

                    b.Property<bool>("Homicidal")
                        .HasColumnType("bit");

                    b.Property<string>("HowActive")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("HowDoesByFollowing")
                        .HasColumnType("bit");

                    b.Property<bool>("HowDoesCalendar")
                        .HasColumnType("bit");

                    b.Property<bool>("HowDoesDaily")
                        .HasColumnType("bit");

                    b.Property<bool>("HowDoesElectronic")
                        .HasColumnType("bit");

                    b.Property<bool>("HowDoesFamily")
                        .HasColumnType("bit");

                    b.Property<bool>("HowDoesKeeping")
                        .HasColumnType("bit");

                    b.Property<bool>("HowDoesOther")
                        .HasColumnType("bit");

                    b.Property<string>("HowDoesOtherExplain")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("HowDoesPill")
                        .HasColumnType("bit");

                    b.Property<bool>("HowDoesRNHHA")
                        .HasColumnType("bit");

                    b.Property<string>("HowManyTimes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("HowWeelEnable")
                        .HasColumnType("bit");

                    b.Property<bool>("HowWeelWithALot")
                        .HasColumnType("bit");

                    b.Property<bool>("HowWeelWithNo")
                        .HasColumnType("bit");

                    b.Property<bool>("HowWeelWithSome")
                        .HasColumnType("bit");

                    b.Property<string>("HoweverOn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("HoweverVisitScheduler")
                        .HasColumnType("datetime2");

                    b.Property<string>("IfThereAnyHousing")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IfYesWereCriminal")
                        .HasColumnType("bit");

                    b.Property<string>("IfYesWhatArea")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("ImmigrationOther")
                        .HasColumnType("bit");

                    b.Property<string>("ImmigrationOtherExplain")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Insect")
                        .HasColumnType("bit");

                    b.Property<bool>("IsClientCurrently")
                        .HasColumnType("bit");

                    b.Property<bool>("IsClientCurrentlyEmployed")
                        .HasColumnType("bit");

                    b.Property<bool>("IsClientCurrentlySchool")
                        .HasColumnType("bit");

                    b.Property<string>("IsClientCurrentlySchoolExplain")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsClientInterested")
                        .HasColumnType("bit");

                    b.Property<bool>("IsClientInvolved")
                        .HasColumnType("bit");

                    b.Property<string>("IsClientInvolvedSpecify")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsClientPregnancy")
                        .HasColumnType("bit");

                    b.Property<bool>("IsClientPregnancyNA")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSheReceiving")
                        .HasColumnType("bit");

                    b.Property<bool>("IsTheClientAbleWork")
                        .HasColumnType("bit");

                    b.Property<bool>("IsTheClientAbleWorkLimitation")
                        .HasColumnType("bit");

                    b.Property<bool>("IsTheClientHavingFinancial")
                        .HasColumnType("bit");

                    b.Property<string>("IsTheClientHavingFinancialExplain")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsThereAnyAide")
                        .HasColumnType("bit");

                    b.Property<string>("IsThereAnyAideName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IsThereAnyAidePhone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsThereAnyCurrentLegalProcess")
                        .HasColumnType("bit");

                    b.Property<string>("Issues")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LabWorks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("LearningEelementary")
                        .HasColumnType("bit");

                    b.Property<bool>("LearningHigh")
                        .HasColumnType("bit");

                    b.Property<bool>("LearningMiddle")
                        .HasColumnType("bit");

                    b.Property<bool>("LearningPreSchool")
                        .HasColumnType("bit");

                    b.Property<bool>("LegalDecisionAdLitem")
                        .HasColumnType("bit");

                    b.Property<string>("LegalDecisionAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LegalDecisionAttomey")
                        .HasColumnType("bit");

                    b.Property<string>("LegalDecisionCityStateZip")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LegalDecisionLegal")
                        .HasColumnType("bit");

                    b.Property<string>("LegalDecisionName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LegalDecisionNone")
                        .HasColumnType("bit");

                    b.Property<bool>("LegalDecisionOther")
                        .HasColumnType("bit");

                    b.Property<string>("LegalDecisionOtherExplain")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LegalDecisionParent")
                        .HasColumnType("bit");

                    b.Property<string>("LegalDecisionPhone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ListAnyNeed")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ListClientCurrentPotencialStrngths")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ListClientCurrentPotencialWeakness")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("MakingAssistive")
                        .HasColumnType("bit");

                    b.Property<bool>("MakingIndependent")
                        .HasColumnType("bit");

                    b.Property<bool>("MakingPhysical")
                        .HasColumnType("bit");

                    b.Property<bool>("MakingSupervision")
                        .HasColumnType("bit");

                    b.Property<bool>("MakingTotal")
                        .HasColumnType("bit");

                    b.Property<string>("Mammogram")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Married")
                        .HasColumnType("bit");

                    b.Property<bool>("MayWe")
                        .HasColumnType("bit");

                    b.Property<bool>("MayWeLeaveSend")
                        .HasColumnType("bit");

                    b.Property<bool>("MayWeNA")
                        .HasColumnType("bit");

                    b.Property<string>("MentalHealth")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MonthlyFamilyIncome")
                        .HasColumnType("int");

                    b.Property<bool>("NeedALot")
                        .HasColumnType("bit");

                    b.Property<bool>("NeedNoHelp")
                        .HasColumnType("bit");

                    b.Property<bool>("NeedOfSpecial")
                        .HasColumnType("bit");

                    b.Property<string>("NeedOfSpecialSpecify")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("NeedSome")
                        .HasColumnType("bit");

                    b.Property<bool>("NeverMarried")
                        .HasColumnType("bit");

                    b.Property<bool>("NoAirCondition")
                        .HasColumnType("bit");

                    b.Property<bool>("NoHearing")
                        .HasColumnType("bit");

                    b.Property<bool>("NoTelephone")
                        .HasColumnType("bit");

                    b.Property<bool>("NoUseful")
                        .HasColumnType("bit");

                    b.Property<bool>("NotHot")
                        .HasColumnType("bit");

                    b.Property<int>("NumberOfBedrooms")
                        .HasColumnType("int");

                    b.Property<int>("NumberOfPersonLiving")
                        .HasColumnType("int");

                    b.Property<bool>("Other")
                        .HasColumnType("bit");

                    b.Property<string>("OtherExplain")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OtherFinancial")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("OtherHowOften")
                        .HasColumnType("real");

                    b.Property<string>("OtherProvider")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("OtherReceive")
                        .HasColumnType("bit");

                    b.Property<string>("OtherReceiveExplain")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Outcome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PapAndHPV")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("ParticipationEelementary")
                        .HasColumnType("bit");

                    b.Property<bool>("ParticipationHigh")
                        .HasColumnType("bit");

                    b.Property<bool>("ParticipationMiddle")
                        .HasColumnType("bit");

                    b.Property<bool>("ParticipationPreSchool")
                        .HasColumnType("bit");

                    b.Property<float>("PersonPorBedrooms")
                        .HasColumnType("real");

                    b.Property<string>("PharmacyPhone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhysicalExam")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhysicalOther")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Poor")
                        .HasColumnType("bit");

                    b.Property<bool>("PreferToLive")
                        .HasColumnType("bit");

                    b.Property<bool>("PresentingProblemPrevious")
                        .HasColumnType("bit");

                    b.Property<string>("PresentingProblems")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("ProbationOfficer")
                        .HasColumnType("bit");

                    b.Property<string>("ProbationOfficerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProbationOfficerPhone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Provider")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("RecommendedActivities")
                        .HasColumnType("bit");

                    b.Property<bool>("RecommendedBasicNeed")
                        .HasColumnType("bit");

                    b.Property<bool>("RecommendedEconomic")
                        .HasColumnType("bit");

                    b.Property<bool>("RecommendedHousing")
                        .HasColumnType("bit");

                    b.Property<bool>("RecommendedLegalImmigration")
                        .HasColumnType("bit");

                    b.Property<bool>("RecommendedMentalHealth")
                        .HasColumnType("bit");

                    b.Property<bool>("RecommendedOther")
                        .HasColumnType("bit");

                    b.Property<string>("RecommendedOtherSpecify")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("RecommendedPhysicalHealth")
                        .HasColumnType("bit");

                    b.Property<bool>("RecommendedRecreational")
                        .HasColumnType("bit");

                    b.Property<bool>("RecommendedSchool")
                        .HasColumnType("bit");

                    b.Property<bool>("RecommendedTransportation")
                        .HasColumnType("bit");

                    b.Property<bool>("RecommendedVocation")
                        .HasColumnType("bit");

                    b.Property<bool>("Referring")
                        .HasColumnType("bit");

                    b.Property<bool>("RelationshipEelementary")
                        .HasColumnType("bit");

                    b.Property<bool>("RelationshipHigh")
                        .HasColumnType("bit");

                    b.Property<bool>("RelationshipMiddle")
                        .HasColumnType("bit");

                    b.Property<bool>("RelationshipPreSchool")
                        .HasColumnType("bit");

                    b.Property<bool>("Resident")
                        .HasColumnType("bit");

                    b.Property<string>("ResidentStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Review")
                        .HasColumnType("bit");

                    b.Property<bool>("School")
                        .HasColumnType("bit");

                    b.Property<string>("SchoolAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SchoolCityState")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SchoolDistrict")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SchoolGrade")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SchoolName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("SchoolProgramEBD")
                        .HasColumnType("bit");

                    b.Property<bool>("SchoolProgramESE")
                        .HasColumnType("bit");

                    b.Property<bool>("SchoolProgramESOL")
                        .HasColumnType("bit");

                    b.Property<bool>("SchoolProgramHHIP")
                        .HasColumnType("bit");

                    b.Property<bool>("SchoolProgramOther")
                        .HasColumnType("bit");

                    b.Property<bool>("SchoolProgramRegular")
                        .HasColumnType("bit");

                    b.Property<string>("SchoolProgramTeacherName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SchoolProgramTeacherPhone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Separated")
                        .HasColumnType("bit");

                    b.Property<bool>("ShoppingAssistive")
                        .HasColumnType("bit");

                    b.Property<bool>("ShoppingIndependent")
                        .HasColumnType("bit");

                    b.Property<bool>("ShoppingPhysical")
                        .HasColumnType("bit");

                    b.Property<bool>("ShoppingSupervision")
                        .HasColumnType("bit");

                    b.Property<bool>("ShoppingTotal")
                        .HasColumnType("bit");

                    b.Property<bool>("Staff")
                        .HasColumnType("bit");

                    b.Property<bool>("Stairs")
                        .HasColumnType("bit");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<bool>("Structural")
                        .HasColumnType("bit");

                    b.Property<bool>("Suicidal")
                        .HasColumnType("bit");

                    b.Property<int?>("TCMSupervisorId")
                        .HasColumnType("int");

                    b.Property<bool>("TakesABus")
                        .HasColumnType("bit");

                    b.Property<int>("TcmClient_FK")
                        .HasColumnType("int");

                    b.Property<bool>("TransferringAssistive")
                        .HasColumnType("bit");

                    b.Property<bool>("TransferringIndependent")
                        .HasColumnType("bit");

                    b.Property<bool>("TransferringPhysical")
                        .HasColumnType("bit");

                    b.Property<bool>("TransferringSupervision")
                        .HasColumnType("bit");

                    b.Property<bool>("TransferringTotal")
                        .HasColumnType("bit");

                    b.Property<bool>("TransportationOther")
                        .HasColumnType("bit");

                    b.Property<string>("TransportationOtherExplain")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Treating")
                        .HasColumnType("bit");

                    b.Property<bool>("Tripping")
                        .HasColumnType("bit");

                    b.Property<bool>("TypeOfAssessmentAnnual")
                        .HasColumnType("bit");

                    b.Property<bool>("TypeOfAssessmentInitial")
                        .HasColumnType("bit");

                    b.Property<bool>("TypeOfAssessmentOther")
                        .HasColumnType("bit");

                    b.Property<string>("TypeOfAssessmentOtherExplain")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TypeOfAssessmentSignificant")
                        .HasColumnType("bit");

                    b.Property<bool>("Unsanitary")
                        .HasColumnType("bit");

                    b.Property<bool>("VisionImpairment")
                        .HasColumnType("bit");

                    b.Property<bool>("VisionNotDetermined")
                        .HasColumnType("bit");

                    b.Property<string>("VocationalEmployment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Walks")
                        .HasColumnType("bit");

                    b.Property<string>("WhatActivityThings")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("WhatIsCollegeGraduated")
                        .HasColumnType("bit");

                    b.Property<bool>("WhatIsElementary")
                        .HasColumnType("bit");

                    b.Property<bool>("WhatIsGED")
                        .HasColumnType("bit");

                    b.Property<bool>("WhatIsGraduated")
                        .HasColumnType("bit");

                    b.Property<bool>("WhatIsGraduatedDegree")
                        .HasColumnType("bit");

                    b.Property<bool>("WhatIsHighSchool")
                        .HasColumnType("bit");

                    b.Property<bool>("WhatIsMiddle")
                        .HasColumnType("bit");

                    b.Property<bool>("WhatIsNoSchool")
                        .HasColumnType("bit");

                    b.Property<bool>("WhatIsSomeCollege")
                        .HasColumnType("bit");

                    b.Property<bool>("WhatIsSomeHigh")
                        .HasColumnType("bit");

                    b.Property<string>("WhatIsTheMainSource")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("WhatIsTradeSchool")
                        .HasColumnType("bit");

                    b.Property<bool>("WhatIsUnknown")
                        .HasColumnType("bit");

                    b.Property<string>("WhatPharmacy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WhenWas")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("WouldLikeObtainJob")
                        .HasColumnType("bit");

                    b.Property<bool>("WouldLikeObtainJobNotAtThisTime")
                        .HasColumnType("bit");

                    b.Property<int>("YearEnteredUsa")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TCMSupervisorId");

                    b.HasIndex("TcmClient_FK")
                        .IsUnique();

                    b.ToTable("TCMAssessment");
                });

            modelBuilder.Entity("KyoS.Web.Data.Entities.TCMAssessmentHospitalEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Reason")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TcmAssessmentId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TcmAssessmentId");

                    b.ToTable("TCMAssessmentHospital");
                });

            modelBuilder.Entity("KyoS.Web.Data.Entities.TCMAssessmentHouseCompositionEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RelationShip")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Supporting")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TcmAssessmentId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TcmAssessmentId");

                    b.ToTable("TCMAssessmentHouseComposition");
                });

            modelBuilder.Entity("KyoS.Web.Data.Entities.TCMAssessmentIndividualAgencyEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Agency")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RelationShip")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TcmAssessmentId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TcmAssessmentId");

                    b.ToTable("TCMAssessmentIndividualAgency");
                });

            modelBuilder.Entity("KyoS.Web.Data.Entities.TCMAssessmentMedicalProblemEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<bool>("Client")
                        .HasColumnType("bit");

                    b.Property<string>("Comments")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Family")
                        .HasColumnType("bit");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("MedicalProblem")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TcmAssessmentId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TcmAssessmentId");

                    b.ToTable("TCMAssessmentMedicalProblem");
                });

            modelBuilder.Entity("KyoS.Web.Data.Entities.TCMAssessmentMedicationEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Dosage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Frequency")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prescriber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReasonPurpose")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TcmAssessmentId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TcmAssessmentId");

                    b.ToTable("TCMAssessmentMedication");
                });

            modelBuilder.Entity("KyoS.Web.Data.Entities.TCMAssessmentPastCurrentServiceEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateReceived")
                        .HasColumnType("datetime2");

                    b.Property<string>("Efectiveness")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("ProviderAgency")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TcmAssessmentId")
                        .HasColumnType("int");

                    b.Property<string>("TypeService")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("TcmAssessmentId");

                    b.ToTable("TCMAssessmentPastCurrentService");
                });

            modelBuilder.Entity("KyoS.Web.Data.Entities.TCMAssessmentSurgeryEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Hospital")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Outcome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TcmAssessmentId")
                        .HasColumnType("int");

                    b.Property<string>("TypeSurgery")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("TcmAssessmentId");

                    b.ToTable("TCMAssessmentSurgery");
                });

            modelBuilder.Entity("KyoS.Web.Data.Entities.TCMClientEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("CaseNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CasemanagerId")
                        .HasColumnType("int");

                    b.Property<int?>("ClientId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataClose")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataOpen")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("Period")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CasemanagerId");

                    b.HasIndex("ClientId");

                    b.ToTable("TCMClient");
                });

            modelBuilder.Entity("KyoS.Web.Data.Entities.TCMDischargeEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<bool>("AdministrativeDischarge")
                        .HasColumnType("bit");

                    b.Property<string>("AdministrativeDischarge_Explain")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("AllServiceInPlace")
                        .HasColumnType("bit");

                    b.Property<int>("Approved")
                        .HasColumnType("int");

                    b.Property<bool>("ClientLeftVoluntarily")
                        .HasColumnType("bit");

                    b.Property<bool>("ClientMovedOutArea")
                        .HasColumnType("bit");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DischargeDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("LackOfProgress")
                        .HasColumnType("bit");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("NonComplianceWithAgencyRules")
                        .HasColumnType("bit");

                    b.Property<bool>("Other")
                        .HasColumnType("bit");

                    b.Property<string>("Other_Explain")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PresentProblems")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProgressToward")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Referred")
                        .HasColumnType("bit");

                    b.Property<DateTime>("StaffSignatureDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("StaffingDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("SupervisorSignatureDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("TCMSupervisorId")
                        .HasColumnType("int");

                    b.Property<int>("TcmServicePlan_FK")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TCMSupervisorId");

                    b.HasIndex("TcmServicePlan_FK")
                        .IsUnique();

                    b.ToTable("TCMDischarge");
                });

            modelBuilder.Entity("KyoS.Web.Data.Entities.TCMDischargeFollowUpEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Address_Location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("NextAppt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProviderAgency")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TcmDischargeId")
                        .HasColumnType("int");

                    b.Property<string>("TypeService")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("TcmDischargeId");

                    b.ToTable("TCMDischargeFollowUp");
                });

            modelBuilder.Entity("KyoS.Web.Data.Entities.TCMDischargeServiceStatusEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("CodeService")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("NameService")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<int?>("TcmDischargeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TcmDischargeId");

                    b.ToTable("TCMDischargeServiceStatus");
                });

            modelBuilder.Entity("KyoS.Web.Data.Entities.TCMDomainEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateIdentified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("LongTerm")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NeedsIdentified")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Origin")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<int?>("TcmServicePlanId")
                        .HasColumnType("int");

                    b.Property<bool>("Used")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("TcmServicePlanId");

                    b.ToTable("TCMDomains");
                });

            modelBuilder.Entity("KyoS.Web.Data.Entities.TCMFarsFormEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("AbilityScale")
                        .HasColumnType("int");

                    b.Property<int>("ActivitiesScale")
                        .HasColumnType("int");

                    b.Property<string>("AdmissionedFor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AnxietyScale")
                        .HasColumnType("int");

                    b.Property<int>("CognitiveScale")
                        .HasColumnType("int");

                    b.Property<string>("ContID1")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ContID2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContID3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContractorID")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("DangerToOtherScale")
                        .HasColumnType("int");

                    b.Property<int>("DangerToSelfScale")
                        .HasColumnType("int");

                    b.Property<string>("DcfEvaluation")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("DepressionScale")
                        .HasColumnType("int");

                    b.Property<DateTime>("EvaluationDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("FamilyEnvironmentScale")
                        .HasColumnType("int");

                    b.Property<int>("FamilyRelationShipsScale")
                        .HasColumnType("int");

                    b.Property<int>("HyperAffectScale")
                        .HasColumnType("int");

                    b.Property<int>("InterpersonalScale")
                        .HasColumnType("int");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("MCOID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("M_GafScore")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MedicaidProviderID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MedicaidRecipientID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MedicalScale")
                        .HasColumnType("int");

                    b.Property<string>("ProgramEvaluation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProviderId")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ProviderLocal")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RaterEducation")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("RaterFMHI")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("SecurityScale")
                        .HasColumnType("int");

                    b.Property<DateTime>("SignatureDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("SocialScale")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("SubstanceAbusoHistory")
                        .HasColumnType("int");

                    b.Property<int>("SubstanceScale")
                        .HasColumnType("int");

                    b.Property<int?>("TCMClientId")
                        .HasColumnType("int");

                    b.Property<int?>("TCMSupervisorId")
                        .HasColumnType("int");

                    b.Property<int>("ThoughtProcessScale")
                        .HasColumnType("int");

                    b.Property<int>("TraumaticsScale")
                        .HasColumnType("int");

                    b.Property<int>("WorkScale")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TCMClientId");

                    b.HasIndex("TCMSupervisorId");

                    b.ToTable("TCMFarsForm");
                });

            modelBuilder.Entity("KyoS.Web.Data.Entities.TCMIntakeAcknowledgementHippaEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("AdmissionedFor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateSignatureEmployee")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateSignatureLegalGuardian")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateSignaturePerson")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Documents")
                        .HasColumnType("bit");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("TcmClient_FK")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TcmClient_FK")
                        .IsUnique();

                    b.ToTable("TCMIntakeAcknowledgement");
                });

            modelBuilder.Entity("KyoS.Web.Data.Entities.TCMIntakeAdvancedDirectiveEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("AdmissionedFor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateSignatureEmployee")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateSignatureLegalGuardian")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateSignaturePerson")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Documents")
                        .HasColumnType("bit");

                    b.Property<bool>("IHave")
                        .HasColumnType("bit");

                    b.Property<bool>("IHaveNot")
                        .HasColumnType("bit");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("TcmClient_FK")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TcmClient_FK")
                        .IsUnique();

                    b.ToTable("TCMIntakeAdvancedDirective");
                });

            modelBuilder.Entity("KyoS.Web.Data.Entities.TCMIntakeAppendixJEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("AdmissionedFor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Approved")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<bool>("HasBeen")
                        .HasColumnType("bit");

                    b.Property<bool>("HasHad")
                        .HasColumnType("bit");

                    b.Property<bool>("IsAt")
                        .HasColumnType("bit");

                    b.Property<bool>("IsAwaiting")
                        .HasColumnType("bit");

                    b.Property<bool>("IsExperiencing")
                        .HasColumnType("bit");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("SupervisorSignatureDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("TcmClient_FK")
                        .HasColumnType("int");

                    b.Property<int?>("TcmSupervisorId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TcmClient_FK")
                        .IsUnique();

                    b.HasIndex("TcmSupervisorId");

                    b.ToTable("TCMIntakeAppendixJ");
                });

            modelBuilder.Entity("KyoS.Web.Data.Entities.TCMIntakeConsentForReleaseEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AdmissionedFor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CityStateZip")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateSignatureEmployee")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateSignatureLegalGuardian")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateSignaturePerson")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Discharge")
                        .HasColumnType("bit");

                    b.Property<bool>("Documents")
                        .HasColumnType("bit");

                    b.Property<string>("FaxNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("ForPurpose_CaseManagement")
                        .HasColumnType("bit");

                    b.Property<bool>("ForPurpose_Other")
                        .HasColumnType("bit");

                    b.Property<string>("ForPurpose_OtherExplain")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("ForPurpose_Treatment")
                        .HasColumnType("bit");

                    b.Property<bool>("History")
                        .HasColumnType("bit");

                    b.Property<bool>("HospitalRecord")
                        .HasColumnType("bit");

                    b.Property<bool>("InForm_Facsimile")
                        .HasColumnType("bit");

                    b.Property<bool>("InForm_VerbalInformation")
                        .HasColumnType("bit");

                    b.Property<bool>("InForm_WrittenRecords")
                        .HasColumnType("bit");

                    b.Property<bool>("IncidentReport")
                        .HasColumnType("bit");

                    b.Property<bool>("LabWork")
                        .HasColumnType("bit");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("NameOfFacility")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Other")
                        .HasColumnType("bit");

                    b.Property<string>("Other_Explain")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("ProgressReports")
                        .HasColumnType("bit");

                    b.Property<bool>("PsychologycalEvaluation")
                        .HasColumnType("bit");

                    b.Property<bool>("SchoolRecord")
                        .HasColumnType("bit");

                    b.Property<int?>("TcmClientId")
                        .HasColumnType("int");

                    b.Property<int>("TcmClient_FK")
                        .HasColumnType("int");

                    b.Property<bool>("ToRelease")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("TcmClientId");

                    b.ToTable("TCMIntakeConsentForRelease");
                });

            modelBuilder.Entity("KyoS.Web.Data.Entities.TCMIntakeConsentForTreatmentEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("AdmissionedFor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Aggre")
                        .HasColumnType("bit");

                    b.Property<bool>("Aggre1")
                        .HasColumnType("bit");

                    b.Property<bool>("AuthorizeRelease")
                        .HasColumnType("bit");

                    b.Property<bool>("AuthorizeStaff")
                        .HasColumnType("bit");

                    b.Property<bool>("Certify")
                        .HasColumnType("bit");

                    b.Property<bool>("Certify1")
                        .HasColumnType("bit");

                    b.Property<int>("Client_FK")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateSignatureEmployee")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateSignatureLegalGuardian")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateSignaturePerson")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Documents")
                        .HasColumnType("bit");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Underestand")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("Client_FK")
                        .IsUnique();

                    b.ToTable("TCMIntakeConsentForTreatment");
                });

            modelBuilder.Entity("KyoS.Web.Data.Entities.TCMIntakeConsumerRightsEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("AdmissionedFor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateSignatureEmployee")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateSignatureLegalGuardian")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateSignaturePerson")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Documents")
                        .HasColumnType("bit");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("ServedOf")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TcmClient_FK")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TcmClient_FK")
                        .IsUnique();

                    b.ToTable("TCMIntakeConsumerRights");
                });

            modelBuilder.Entity("KyoS.Web.Data.Entities.TCMIntakeCoordinationCareEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("AdmissionedFor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateSignatureEmployee")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateSignatureLegalGuardian")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateSignaturePerson")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Documents")
                        .HasColumnType("bit");

                    b.Property<bool>("IAuthorize")
                        .HasColumnType("bit");

                    b.Property<bool>("IRefuse")
                        .HasColumnType("bit");

                    b.Property<bool>("InformationAllBefore")
                        .HasColumnType("bit");

                    b.Property<bool>("InformationElectronic")
                        .HasColumnType("bit");

                    b.Property<bool>("InformationFascimile")
                        .HasColumnType("bit");

                    b.Property<bool>("InformationNonKnown")
                        .HasColumnType("bit");

                    b.Property<bool>("InformationToRelease")
                        .HasColumnType("bit");

                    b.Property<bool>("InformationTorequested")
                        .HasColumnType("bit");

                    b.Property<bool>("InformationVerbal")
                        .HasColumnType("bit");

                    b.Property<bool>("InformationWrited")
                        .HasColumnType("bit");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("PCP")
                        .HasColumnType("bit");

                    b.Property<bool>("Specialist")
                        .HasColumnType("bit");

                    b.Property<string>("SpecialistText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TcmClient_FK")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TcmClient_FK")
                        .IsUnique();

                    b.ToTable("TCMIntakeCoordinationCare");
                });

            modelBuilder.Entity("KyoS.Web.Data.Entities.TCMIntakeForeignLanguageEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("AdmissionedFor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateSignatureEmployee")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateSignatureLegalGuardian")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateSignaturePerson")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Documents")
                        .HasColumnType("bit");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("TcmClient_FK")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TcmClient_FK")
                        .IsUnique();

                    b.ToTable("TCMIntakeForeignLanguage");
                });

            modelBuilder.Entity("KyoS.Web.Data.Entities.TCMIntakeFormEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Agency")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CaseManagerNotes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CountryOfBirth")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("EducationLevel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Elibigility")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EmergencyContact")
                        .HasColumnType("bit");

                    b.Property<int>("EmploymentStatus")
                        .HasColumnType("int");

                    b.Property<string>("Grade")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InsuranceOther")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("IntakeDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsClientCurrently")
                        .HasColumnType("bit");

                    b.Property<bool>("LTC")
                        .HasColumnType("bit");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("MMA")
                        .HasColumnType("bit");

                    b.Property<string>("MonthlyFamilyIncome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("NeedSpecial")
                        .HasColumnType("bit");

                    b.Property<string>("NeedSpecial_Specify")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Other")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Other_Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Other_City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Other_Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PCP_Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PCP_CityStateZip")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PCP_FaxNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PCP_Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PCP_Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PCP_Place")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrimarySourceIncome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Psychiatrist_Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Psychiatrist_CityStateZip")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Psychiatrist_Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Psychiatrist_Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReligionOrEspiritual")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ResidentialStatus")
                        .HasColumnType("int");

                    b.Property<string>("School")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("School_EBD")
                        .HasColumnType("bit");

                    b.Property<bool>("School_ESE")
                        .HasColumnType("bit");

                    b.Property<bool>("School_ESOL")
                        .HasColumnType("bit");

                    b.Property<bool>("School_HHIP")
                        .HasColumnType("bit");

                    b.Property<bool>("School_Other")
                        .HasColumnType("bit");

                    b.Property<bool>("School_Regular")
                        .HasColumnType("bit");

                    b.Property<string>("SecondaryContact")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SecondaryContact_Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SecondaryContact_RelationShip")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("StatusOther")
                        .HasColumnType("bit");

                    b.Property<string>("StatusOther_Explain")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("StatusResident")
                        .HasColumnType("bit");

                    b.Property<bool>("StausCitizen")
                        .HasColumnType("bit");

                    b.Property<int>("TcmClient_FK")
                        .HasColumnType("int");

                    b.Property<string>("TeacherCounselor_Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TeacherCounselor_Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TitlePosition")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("YearEnterUsa")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("TcmClient_FK")
                        .IsUnique();

                    b.ToTable("TCMIntakeForms");
                });

            modelBuilder.Entity("KyoS.Web.Data.Entities.TCMIntakeInterventionEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Activity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("TcmInterventionLogId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TcmInterventionLogId");

                    b.ToTable("TCMIntakeIntervention");
                });

            modelBuilder.Entity("KyoS.Web.Data.Entities.TCMIntakeInterventionLogEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("TcmClient_FK")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TcmClient_FK")
                        .IsUnique();

                    b.ToTable("TCMIntakeInterventionLog");
                });

            modelBuilder.Entity("KyoS.Web.Data.Entities.TCMIntakeMiniMentalEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("AdmissionedFor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Attention")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("LanguageCopy")
                        .HasColumnType("int");

                    b.Property<int>("LanguageFollow")
                        .HasColumnType("int");

                    b.Property<int>("LanguageName")
                        .HasColumnType("int");

                    b.Property<int>("LanguageRead")
                        .HasColumnType("int");

                    b.Property<int>("LanguageRepeat")
                        .HasColumnType("int");

                    b.Property<int>("LanguageWrite")
                        .HasColumnType("int");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("OrientationWhat")
                        .HasColumnType("int");

                    b.Property<int>("OrientationWhere")
                        .HasColumnType("int");

                    b.Property<int>("Recall")
                        .HasColumnType("int");

                    b.Property<int>("RegistrationName")
                        .HasColumnType("int");

                    b.Property<int>("TcmClient_FK")
                        .HasColumnType("int");

                    b.Property<int>("TotalScore")
                        .HasColumnType("int");

                    b.Property<int>("Trials")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TcmClient_FK")
                        .IsUnique();

                    b.ToTable("TCMIntakeMiniMental");
                });

            modelBuilder.Entity("KyoS.Web.Data.Entities.TCMIntakeNonClinicalLogEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("AdmissionedFor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("DateActivity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("TcmClient_FK")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TcmClient_FK")
                        .IsUnique();

                    b.ToTable("TCMIntakeNonClinicalLog");
                });

            modelBuilder.Entity("KyoS.Web.Data.Entities.TCMIntakeOrientationChecklistEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<bool>("Access")
                        .HasColumnType("bit");

                    b.Property<string>("AdmissionedFor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("AgencyExpectation")
                        .HasColumnType("bit");

                    b.Property<bool>("AgencyPolice")
                        .HasColumnType("bit");

                    b.Property<bool>("Code")
                        .HasColumnType("bit");

                    b.Property<bool>("Confidentiality")
                        .HasColumnType("bit");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateSignatureEmployee")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateSignatureLegalGuardian")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateSignaturePerson")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Discharge")
                        .HasColumnType("bit");

                    b.Property<bool>("Documents")
                        .HasColumnType("bit");

                    b.Property<bool>("Education")
                        .HasColumnType("bit");

                    b.Property<bool>("Explanation")
                        .HasColumnType("bit");

                    b.Property<bool>("Fire")
                        .HasColumnType("bit");

                    b.Property<bool>("Identification")
                        .HasColumnType("bit");

                    b.Property<bool>("IndividualPlan")
                        .HasColumnType("bit");

                    b.Property<bool>("Insent")
                        .HasColumnType("bit");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Methods")
                        .HasColumnType("bit");

                    b.Property<bool>("PoliceGrievancce")
                        .HasColumnType("bit");

                    b.Property<bool>("PoliceIllicit")
                        .HasColumnType("bit");

                    b.Property<bool>("PoliceTobacco")
                        .HasColumnType("bit");

                    b.Property<bool>("PoliceWeapons")
                        .HasColumnType("bit");

                    b.Property<bool>("Program")
                        .HasColumnType("bit");

                    b.Property<bool>("Purpose")
                        .HasColumnType("bit");

                    b.Property<bool>("Rights")
                        .HasColumnType("bit");

                    b.Property<bool>("Services")
                        .HasColumnType("bit");

                    b.Property<int>("TcmClient_FK")
                        .HasColumnType("int");

                    b.Property<bool>("TheAbove")
                        .HasColumnType("bit");

                    b.Property<bool>("TourFacility")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("TcmClient_FK")
                        .IsUnique();

                    b.ToTable("TCMIntakeOrientationCheckList");
                });

            modelBuilder.Entity("KyoS.Web.Data.Entities.TCMIntakeWelcomeEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("AdmissionedFor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("TcmClient_FK")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TcmClient_FK")
                        .IsUnique();

                    b.ToTable("TCMIntakeWelcome");
                });

            modelBuilder.Entity("KyoS.Web.Data.Entities.TCMMessageEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateRead")
                        .HasColumnType("datetime2");

                    b.Property<string>("From")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Notification")
                        .HasColumnType("bit");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int?>("TCMAddendumId")
                        .HasColumnType("int");

                    b.Property<int?>("TCMAssessmentId")
                        .HasColumnType("int");

                    b.Property<int?>("TCMDischargeId")
                        .HasColumnType("int");

                    b.Property<int?>("TCMFarsFormId")
                        .HasColumnType("int");

                    b.Property<int?>("TCMNoteId")
                        .HasColumnType("int");

                    b.Property<int?>("TCMServicePlanId")
                        .HasColumnType("int");

                    b.Property<int?>("TCMServicePlanReviewId")
                        .HasColumnType("int");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("To")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("TCMAddendumId");

                    b.HasIndex("TCMAssessmentId");

                    b.HasIndex("TCMDischargeId");

                    b.HasIndex("TCMFarsFormId");

                    b.HasIndex("TCMNoteId");

                    b.HasIndex("TCMServicePlanId");

                    b.HasIndex("TCMServicePlanReviewId");

                    b.ToTable("TCMMessages");
                });

            modelBuilder.Entity("KyoS.Web.Data.Entities.TCMNoteActivityEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("DescriptionOfService")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("Minutes")
                        .HasColumnType("int");

                    b.Property<string>("ServiceName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Setting")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("TCMDomainId")
                        .HasColumnType("int");

                    b.Property<int?>("TCMNoteId")
                        .HasColumnType("int");

                    b.Property<int?>("TCMServiceActivityId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TCMDomainId");

                    b.HasIndex("TCMNoteId");

                    b.HasIndex("TCMServiceActivityId");

                    b.ToTable("TCMNoteActivity");
                });

            modelBuilder.Entity("KyoS.Web.Data.Entities.TCMNoteActivityTempEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("DateOfServiceOfNote")
                        .HasColumnType("datetime2");

                    b.Property<string>("DescriptionOfService")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdSetting")
                        .HasColumnType("int");

                    b.Property<int>("IdTCMClient")
                        .HasColumnType("int");

                    b.Property<int>("IdTCMDomain")
                        .HasColumnType("int");

                    b.Property<int>("IdTCMServiceActivity")
                        .HasColumnType("int");

                    b.Property<int>("Minutes")
                        .HasColumnType("int");

                    b.Property<string>("ServiceName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Setting")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("TCMDomainCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TCMNoteActivityTemp");
                });

            modelBuilder.Entity("KyoS.Web.Data.Entities.TCMNoteEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOfService")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("NextStep")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Outcome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ServiceCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int?>("TCMClientId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TCMClientId");

                    b.ToTable("TCMNote");
                });

            modelBuilder.Entity("KyoS.Web.Data.Entities.TCMObjetiveEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Finish")
                        .HasColumnType("bit");

                    b.Property<int>("IdObjetive")
                        .HasColumnType("int");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Origin")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Responsible")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime>("TargetDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Task")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TcmDomainId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TcmDomainId");

                    b.ToTable("TCMObjetives");
                });

            modelBuilder.Entity("KyoS.Web.Data.Entities.TCMServiceActivityEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("Approved")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Frecuency")
                        .HasColumnType("int");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<int?>("TcmServiceId")
                        .HasColumnType("int");

                    b.Property<int>("Unit")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TcmServiceId");

                    b.ToTable("TCMServiceActivity");
                });

            modelBuilder.Entity("KyoS.Web.Data.Entities.TCMServiceEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("ClinicId")
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("TCMServicePlanEntityId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClinicId");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.HasIndex("TCMServicePlanEntityId");

                    b.ToTable("TCMServices");
                });

            modelBuilder.Entity("KyoS.Web.Data.Entities.TCMServicePlanEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("Approved")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateAssessment")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateCertification")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateIntake")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateServicePlan")
                        .HasColumnType("datetime2");

                    b.Property<string>("DischargerCriteria")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Strengths")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TCMSupervisorId")
                        .HasColumnType("int");

                    b.Property<int>("TcmClient_FK")
                        .HasColumnType("int");

                    b.Property<string>("Weakness")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("TCMSupervisorId");

                    b.HasIndex("TcmClient_FK")
                        .IsUnique();

                    b.ToTable("TCMServicePlans");
                });

            modelBuilder.Entity("KyoS.Web.Data.Entities.TCMServicePlanReviewDomainEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("ChangesUpdate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CodeDomain")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int?>("TcmDomainId")
                        .HasColumnType("int");

                    b.Property<int?>("TcmServicePlanReviewId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.HasIndex("TcmDomainId");

                    b.HasIndex("TcmServicePlanReviewId");

                    b.ToTable("TCMServicePlanReviewDomains");
                });

            modelBuilder.Entity("KyoS.Web.Data.Entities.TCMServicePlanReviewDomainObjectiveEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("ChangesUpdate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateEndObjective")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdObjective")
                        .HasColumnType("int");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Origin")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int?>("tcmServicePlanReviewDomainId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.HasIndex("tcmServicePlanReviewDomainId");

                    b.ToTable("TCMServicePlanReviewDomainObjectives");
                });

            modelBuilder.Entity("KyoS.Web.Data.Entities.TCMServicePlanReviewEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("Approved")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOpending")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateServicePlanReview")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Recomendation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SummaryProgress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TCMSupervisorId")
                        .HasColumnType("int");

                    b.Property<int>("TcmServicePlan_FK")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TCMSupervisorId");

                    b.HasIndex("TcmServicePlan_FK")
                        .IsUnique();

                    b.ToTable("TCMServicePlanReviews");
                });

            modelBuilder.Entity("KyoS.Web.Data.Entities.TCMStageEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("ClinicId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ID_Etapa")
                        .HasColumnType("int");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Units")
                        .HasColumnType("int");

                    b.Property<int?>("tCMserviceId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClinicId");

                    b.HasIndex("tCMserviceId");

                    b.ToTable("TCMStages");
                });

            modelBuilder.Entity("KyoS.Web.Data.Entities.TCMSupervisorEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("ClinicId")
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Firm")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("LinkedUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("RaterEducation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RaterFMHCertification")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SignaturePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClinicId");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("TCMSupervisors");
                });

            modelBuilder.Entity("KyoS.Web.Data.Entities.TemplateDOCEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("ClinicId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("Description")
                        .HasColumnType("int");

                    b.Property<string>("FileName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ClinicId");

                    b.ToTable("TemplatesDOC");
                });

            modelBuilder.Entity("KyoS.Web.Data.Entities.ThemeEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("ClinicId")
                        .HasColumnType("int");

                    b.Property<int?>("Day")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ClinicId");

                    b.ToTable("Themes");
                });

            modelBuilder.Entity("KyoS.Web.Data.Entities.UserEntity", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("Address")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("ClinicId")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Document")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("PicturePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<int>("UserType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClinicId");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("KyoS.Web.Data.Entities.WeekEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("ClinicId")
                        .HasColumnType("int");

                    b.Property<DateTime>("FinalDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("InitDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("WeekOfYear")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClinicId");

                    b.ToTable("Weeks");
                });

            modelBuilder.Entity("KyoS.Web.Data.Entities.WorkdayEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("Service")
                        .HasColumnType("int");

                    b.Property<int?>("WeekId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("WeekId");

                    b.ToTable("Workdays");
                });

            modelBuilder.Entity("KyoS.Web.Data.Entities.Workday_Activity_Facilitator", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<bool>("AM")
                        .HasColumnType("bit");

                    b.Property<int?>("ActivityId")
                        .HasColumnType("int");

                    b.Property<int?>("FacilitatorId")
                        .HasColumnType("int");

                    b.Property<bool>("PM")
                        .HasColumnType("bit");

                    b.Property<int>("Schema")
                        .HasColumnType("int");

                    b.Property<int?>("WorkdayId")
                        .HasColumnType("int");

                    b.Property<bool?>("activityDailyLiving")
                        .HasColumnType("bit");

                    b.Property<bool?>("communityResources")
                        .HasColumnType("bit");

                    b.Property<bool?>("copingSkills")
                        .HasColumnType("bit");

                    b.Property<bool?>("diseaseManagement")
                        .HasColumnType("bit");

                    b.Property<bool?>("healthyLiving")
                        .HasColumnType("bit");

                    b.Property<bool?>("lifeSkills")
                        .HasColumnType("bit");

                    b.Property<bool?>("relaxationTraining")
                        .HasColumnType("bit");

                    b.Property<bool?>("socialSkills")
                        .HasColumnType("bit");

                    b.Property<bool?>("stressManagement")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("ActivityId");

                    b.HasIndex("FacilitatorId");

                    b.HasIndex("WorkdayId");

                    b.ToTable("Workdays_Activities_Facilitators");
                });

            modelBuilder.Entity("KyoS.Web.Data.Entities.Workday_Client", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime?>("BilledDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CauseOfNotPresent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ClientId")
                        .HasColumnType("int");

                    b.Property<int?>("FacilitatorId")
                        .HasColumnType("int");

                    b.Property<int?>("GroupSize")
                        .HasColumnType("int");

                    b.Property<DateTime?>("PaymentDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Present")
                        .HasColumnType("bit");

                    b.Property<string>("Session")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("SharedSession")
                        .HasColumnType("bit");

                    b.Property<int?>("WorkdayId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.HasIndex("FacilitatorId");

                    b.HasIndex("WorkdayId");

                    b.ToTable("Workdays_Clients");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("KyoS.Web.Data.Entities.ActivityEntity", b =>
                {
                    b.HasOne("KyoS.Web.Data.Entities.FacilitatorEntity", "Facilitator")
                        .WithMany()
                        .HasForeignKey("FacilitatorId");

                    b.HasOne("KyoS.Web.Data.Entities.SupervisorEntity", "Supervisor")
                        .WithMany()
                        .HasForeignKey("SupervisorId");

                    b.HasOne("KyoS.Web.Data.Entities.ThemeEntity", "Theme")
                        .WithMany()
                        .HasForeignKey("ThemeId");

                    b.Navigation("Facilitator");

                    b.Navigation("Supervisor");

                    b.Navigation("Theme");
                });

            modelBuilder.Entity("KyoS.Web.Data.Entities.AdendumEntity", b =>
                {
                    b.HasOne("KyoS.Web.Data.Entities.FacilitatorEntity", "Facilitator")
                        .WithMany()
                        .HasForeignKey("FacilitatorId");

                    b.HasOne("KyoS.Web.Data.Entities.MTPEntity", "Mtp")
                        .WithMany("AdendumList")
                        .HasForeignKey("MtpId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("KyoS.Web.Data.Entities.SupervisorEntity", "Supervisor")
                        .WithMany()
                        .HasForeignKey("SupervisorId");

                    b.Navigation("Facilitator");

                    b.Navigation("Mtp");

                    b.Navigation("Supervisor");
                });

            modelBuilder.Entity("KyoS.Web.Data.Entities.BioEntity", b =>
                {
                    b.HasOne("KyoS.Web.Data.Entities.ClientEntity", "Client")
                        .WithOne("Bio")
                        .HasForeignKey("KyoS.Web.Data.Entities.BioEntity", "Client_FK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KyoS.Web.Data.Entities.DocumentsAssistantEntity", "DocumentsAssistant")
                        .WithMany()
                        .HasForeignKey("DocumentsAssistantId");

                    b.HasOne("KyoS.Web.Data.Entities.SupervisorEntity", "Supervisor")
                        .WithMany()
                        .HasForeignKey("SupervisorId");

                    b.Navigation("Client");

                    b.Navigation("DocumentsAssistant");

                    b.Navigation("Supervisor");
                });

            modelBuilder.Entity("KyoS.Web.Data.Entities.Bio_BehavioralHistoryEntity", b =>
                {
                    b.HasOne("KyoS.Web.Data.Entities.ClientEntity", "Client")
                        .WithMany("List_BehavioralHistory")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Client");
                });

            modelBuilder.Entity("KyoS.Web.Data.Entities.CaseMannagerEntity", b =>
                {
                    b.HasOne("KyoS.Web.Data.Entities.ClinicEntity", "Clinic")
                        .WithMany("CaseManagers")
                        .HasForeignKey("ClinicId");

                    b.Navigation("Clinic");
                });

            modelBuilder.Entity("KyoS.Web.Data.Entities.ClientEntity", b =>
                {
                    b.HasOne("KyoS.Web.Data.Entities.ClinicEntity", "Clinic")
                        .WithMany("Clients")
                        .HasForeignKey("ClinicId");

                    b.HasOne("KyoS.Web.Data.Entities.DoctorEntity", "Doctor")
                        .WithMany("Clients")
                        .HasForeignKey("DoctorId");

                    b.HasOne("KyoS.Web.Data.Entities.EmergencyContactEntity", "EmergencyContact")
                        .WithMany("Clients")
                        .HasForeignKey("EmergencyContactId");

                    b.HasOne("KyoS.Web.Data.Entities.GroupEntity", "Group")
                        .WithMany("Clients")
                        .HasForeignKey("GroupId");

                    b.HasOne("KyoS.Web.Data.Entities.FacilitatorEntity", "IndividualTherapyFacilitator")
                        .WithMany("ClientsFromIndividualTherapy")
                        .HasForeignKey("IndividualTherapyFacilitatorId");

                    b.HasOne("KyoS.Web.Data.Entities.LegalGuardianEntity", "LegalGuardian")
                        .WithMany("Clients")
                        .HasForeignKey("LegalGuardianId");

                    b.HasOne("KyoS.Web.Data.Entities.PsychiatristEntity", "Psychiatrist")
                        .WithMany("Clients")
                        .HasForeignKey("PsychiatristId");

                    b.Navigation("Clinic");

                    b.Navigation("Doctor");

                    b.Navigation("EmergencyContact");

                    b.Navigation("Group");

                    b.Navigation("IndividualTherapyFacilitator");

                    b.Navigation("LegalGuardian");

                    b.Navigation("Psychiatrist");
                });

            modelBuilder.Entity("KyoS.Web.Data.Entities.Client_Diagnostic", b =>
                {
                    b.HasOne("KyoS.Web.Data.Entities.ClientEntity", "Client")
                        .WithMany("Clients_Diagnostics")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("KyoS.Web.Data.Entities.DiagnosticEntity", "Diagnostic")
                        .WithMany()
                        .HasForeignKey("DiagnosticId");

                    b.Navigation("Client");

                    b.Navigation("Diagnostic");
                });

            modelBuilder.Entity("KyoS.Web.Data.Entities.Client_HealthInsurance", b =>
                {
                    b.HasOne("KyoS.Web.Data.Entities.ClientEntity", "Client")
                        .WithMany("Clients_HealthInsurances")
                        .HasForeignKey("ClientId");

                    b.HasOne("KyoS.Web.Data.Entities.HealthInsuranceEntity", "HealthInsurance")
                        .WithMany()
                        .HasForeignKey("HealthInsuranceId");

                    b.Navigation("Client");

                    b.Navigation("HealthInsurance");
                });

            modelBuilder.Entity("KyoS.Web.Data.Entities.Client_Referred", b =>
                {
                    b.HasOne("KyoS.Web.Data.Entities.ClientEntity", "Client")
                        .WithMany("Client_Referred")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("KyoS.Web.Data.Entities.ReferredEntity", "Referred")
                        .WithMany()
                        .HasForeignKey("ReferredId");

                    b.Navigation("Client");

                    b.Navigation("Referred");
                });

            modelBuilder.Entity("KyoS.Web.Data.Entities.DailySessionEntity", b =>
                {
                    b.HasOne("KyoS.Web.Data.Entities.GroupEntity", "Group")
                        .WithMany()
                        .HasForeignKey("GroupId");

                    b.Navigation("Group");
                });

            modelBuilder.Entity("KyoS.Web.Data.Entities.DischargeEntity", b =>
                {
                    b.HasOne("KyoS.Web.Data.Entities.ClientEntity", "Client")
                        .WithMany("DischargeList")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("KyoS.Web.Data.Entities.SupervisorEntity", "Supervisor")
                        .WithMany()
                        .HasForeignKey("SupervisorId");

                    b.Navigation("Client");

                    b.Navigation("Supervisor");
                });

            modelBuilder.Entity("KyoS.Web.Data.Entities.DocumentDiagnosticEntity", b =>
                {
                    b.HasOne("KyoS.Web.Data.Entities.DiagnosticEntity", "Diagnostic")
                        .WithMany()
                        .HasForeignKey("DiagnosticId");

                    b.Navigation("Diagnostic");
                });

            modelBuilder.Entity("KyoS.Web.Data.Entities.DocumentEntity", b =>
                {
                    b.HasOne("KyoS.Web.Data.Entities.ClientEntity", "Client")
                        .WithMany("Documents")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Client");
                });

            modelBuilder.Entity("KyoS.Web.Data.Entities.DocumentsAssistantEntity", b =>
                {
                    b.HasOne("KyoS.Web.Data.Entities.ClinicEntity", "Clinic")
                        .WithMany()
                        .HasForeignKey("ClinicId");

                    b.Navigation("Clinic");
                });

            modelBuilder.Entity("KyoS.Web.Data.Entities.FacilitatorEntity", b =>
                {
                    b.HasOne("KyoS.Web.Data.Entities.ClinicEntity", "Clinic")
                        .WithMany("Facilitators")
                        .HasForeignKey("ClinicId");

                    b.Navigation("Clinic");
                });

            modelBuilder.Entity("KyoS.Web.Data.Entities.FarsFormEntity", b =>
                {
                    b.HasOne("KyoS.Web.Data.Entities.ClientEntity", "Client")
                        .WithMany("FarsFormList")
                        .HasForeignKey("ClientId");

                    b.HasOne("KyoS.Web.Data.Entities.SupervisorEntity", "Supervisor")
                        .WithMany()
                        .HasForeignKey("SupervisorId");

                    b.Navigation("Client");

                    b.Navigation("Supervisor");
                });

            modelBuilder.Entity("KyoS.Web.Data.Entities.GeneratedNoteEntity", b =>
                {
                    b.HasOne("KyoS.Web.Data.Entities.ClientEntity", "Client")
                        .WithMany()
                        .HasForeignKey("ClientId");

                    b.HasOne("KyoS.Web.Data.Entities.DailySessionEntity", "DailySession")
                        .WithMany()
                        .HasForeignKey("DailySessionId");

                    b.HasOne("KyoS.Web.Data.Entities.PlanEntity", "Plan")
                        .WithMany()
                        .HasForeignKey("PlanId");

                    b.Navigation("Client");

                    b.Navigation("DailySession");

                    b.Navigation("Plan");
                });

            modelBuilder.Entity("KyoS.Web.Data.Entities.GeneratedNote_NotePrototype", b =>
                {
                    b.HasOne("KyoS.Web.Data.Entities.GeneratedNoteEntity", "GeneratedNote")
                        .WithMany()
                        .HasForeignKey("GeneratedNoteId");

                    b.HasOne("KyoS.Web.Data.Entities.NotePrototypeEntity", "NotePrototype")
                        .WithMany()
                        .HasForeignKey("NotePrototypeId");

                    b.Navigation("GeneratedNote");

                    b.Navigation("NotePrototype");
                });

            modelBuilder.Entity("KyoS.Web.Data.Entities.GoalEntity", b =>
                {
                    b.HasOne("KyoS.Web.Data.Entities.AdendumEntity", "Adendum")
                        .WithMany("Goals")
                        .HasForeignKey("AdendumId");

                    b.HasOne("KyoS.Web.Data.Entities.MTPEntity", "MTP")
                        .WithMany("Goals")
                        .HasForeignKey("MTPId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Adendum");

                    b.Navigation("MTP");
                });

            modelBuilder.Entity("KyoS.Web.Data.Entities.GroupEntity", b =>
                {
                    b.HasOne("KyoS.Web.Data.Entities.FacilitatorEntity", "Facilitator")
                        .WithMany("Groups")
                        .HasForeignKey("FacilitatorId");

                    b.Navigation("Facilitator");
                });

            modelBuilder.Entity("KyoS.Web.Data.Entities.GroupNoteEntity", b =>
                {
                    b.HasOne("KyoS.Web.Data.Entities.SupervisorEntity", "Supervisor")
                        .WithMany("GroupNotes")
                        .HasForeignKey("SupervisorId");

                    b.HasOne("KyoS.Web.Data.Entities.Workday_Client", "Workday_Cient")
                        .WithOne("GroupNote")
                        .HasForeignKey("KyoS.Web.Data.Entities.GroupNoteEntity", "Workday_Client_FK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Supervisor");

                    b.Navigation("Workday_Cient");
                });

            modelBuilder.Entity("KyoS.Web.Data.Entities.GroupNote_Activity", b =>
                {
                    b.HasOne("KyoS.Web.Data.Entities.ActivityEntity", "Activity")
                        .WithMany()
                        .HasForeignKey("ActivityId");

                    b.HasOne("KyoS.Web.Data.Entities.GroupNoteEntity", "GroupNote")
                        .WithMany("GroupNotes_Activities")
                        .HasForeignKey("GroupNoteId");

                    b.HasOne("KyoS.Web.Data.Entities.ObjetiveEntity", "Objetive")
                        .WithMany()
                        .HasForeignKey("ObjetiveId");

                    b.Navigation("Activity");

                    b.Navigation("GroupNote");

                    b.Navigation("Objetive");
                });

            modelBuilder.Entity("KyoS.Web.Data.Entities.HealthInsuranceEntity", b =>
                {
                    b.HasOne("KyoS.Web.Data.Entities.ClinicEntity", "Clinic")
                        .WithMany()
                        .HasForeignKey("ClinicId");

                    b.Navigation("Clinic");
                });

            modelBuilder.Entity("KyoS.Web.Data.Entities.IncidentEntity", b =>
                {
                    b.HasOne("KyoS.Web.Data.Entities.UserEntity", "UserAsigned")
                        .WithMany()
                        .HasForeignKey("UserAsignedId");

                    b.HasOne("KyoS.Web.Data.Entities.UserEntity", "UserCreatedBy")
                        .WithMany()
                        .HasForeignKey("UserCreatedById");

                    b.HasOne("KyoS.Web.Data.Entities.ClientEntity", "client")
                        .WithMany()
                        .HasForeignKey("clientId");

                    b.Navigation("client");

                    b.Navigation("UserAsigned");

                    b.Navigation("UserCreatedBy");
                });

            modelBuilder.Entity("KyoS.Web.Data.Entities.IndividualNoteEntity", b =>
                {
                    b.HasOne("KyoS.Web.Data.Entities.ObjetiveEntity", "Objective")
                        .WithMany("IndividualNotes")
                        .HasForeignKey("ObjectiveId");

                    b.HasOne("KyoS.Web.Data.Entities.SupervisorEntity", "Supervisor")
                        .WithMany("IndividualNotes")
                        .HasForeignKey("SupervisorId");

                    b.HasOne("KyoS.Web.Data.Entities.Workday_Client", "Workday_Cient")
                        .WithOne("IndividualNote")
                        .HasForeignKey("KyoS.Web.Data.Entities.IndividualNoteEntity", "Workday_Client_FK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Objective");

                    b.Navigation("Supervisor");

                    b.Navigation("Workday_Cient");
                });

            modelBuilder.Entity("KyoS.Web.Data.Entities.IntakeAccessToServicesEntity", b =>
                {
                    b.HasOne("KyoS.Web.Data.Entities.ClientEntity", "Client")
                        .WithOne("IntakeAccessToServices")
                        .HasForeignKey("KyoS.Web.Data.Entities.IntakeAccessToServicesEntity", "Client_FK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");
                });

            modelBuilder.Entity("KyoS.Web.Data.Entities.IntakeAcknowledgementHippaEntity", b =>
                {
                    b.HasOne("KyoS.Web.Data.Entities.ClientEntity", "Client")
                        .WithOne("IntakeAcknowledgementHipa")
                        .HasForeignKey("KyoS.Web.Data.Entities.IntakeAcknowledgementHippaEntity", "Client_FK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");
                });

            modelBuilder.Entity("KyoS.Web.Data.Entities.IntakeConsentForReleaseEntity", b =>
                {
                    b.HasOne("KyoS.Web.Data.Entities.ClientEntity", "Client")
                        .WithOne("IntakeConsentForRelease")
                        .HasForeignKey("KyoS.Web.Data.Entities.IntakeConsentForReleaseEntity", "Client_FK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");
                });

            modelBuilder.Entity("KyoS.Web.Data.Entities.IntakeConsentForTreatmentEntity", b =>
                {
                    b.HasOne("KyoS.Web.Data.Entities.ClientEntity", "Client")
                        .WithOne("IntakeConsentForTreatment")
                        .HasForeignKey("KyoS.Web.Data.Entities.IntakeConsentForTreatmentEntity", "Client_FK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");
                });

            modelBuilder.Entity("KyoS.Web.Data.Entities.IntakeConsentPhotographEntity", b =>
                {
                    b.HasOne("KyoS.Web.Data.Entities.ClientEntity", "Client")
                        .WithOne("IntakeConsentPhotograph")
                        .HasForeignKey("KyoS.Web.Data.Entities.IntakeConsentPhotographEntity", "Client_FK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");
                });

            modelBuilder.Entity("KyoS.Web.Data.Entities.IntakeConsumerRightsEntity", b =>
                {
                    b.HasOne("KyoS.Web.Data.Entities.ClientEntity", "Client")
                        .WithOne("IntakeConsumerRights")
                        .HasForeignKey("KyoS.Web.Data.Entities.IntakeConsumerRightsEntity", "Client_FK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");
                });

            modelBuilder.Entity("KyoS.Web.Data.Entities.IntakeFeeAgreementEntity", b =>
                {
                    b.HasOne("KyoS.Web.Data.Entities.ClientEntity", "Client")
                        .WithOne("IntakeFeeAgreement")
                        .HasForeignKey("KyoS.Web.Data.Entities.IntakeFeeAgreementEntity", "Client_FK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");
                });

            modelBuilder.Entity("KyoS.Web.Data.Entities.IntakeMedicalHistoryEntity", b =>
                {
                    b.HasOne("KyoS.Web.Data.Entities.ClientEntity", "Client")
                        .WithOne("IntakeMedicalHistory")
                        .HasForeignKey("KyoS.Web.Data.Entities.IntakeMedicalHistoryEntity", "Client_FK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");
                });

            modelBuilder.Entity("KyoS.Web.Data.Entities.IntakeOrientationChecklistEntity", b =>
                {
                    b.HasOne("KyoS.Web.Data.Entities.ClientEntity", "Client")
                        .WithOne("IntakeOrientationChecklist")
                        .HasForeignKey("KyoS.Web.Data.Entities.IntakeOrientationChecklistEntity", "Client_FK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");
                });

            modelBuilder.Entity("KyoS.Web.Data.Entities.IntakeScreeningEntity", b =>
                {
                    b.HasOne("KyoS.Web.Data.Entities.ClientEntity", "Client")
                        .WithOne("IntakeScreening")
                        .HasForeignKey("KyoS.Web.Data.Entities.IntakeScreeningEntity", "Client_FK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");
                });

            modelBuilder.Entity("KyoS.Web.Data.Entities.IntakeTransportationEntity", b =>
                {
                    b.HasOne("KyoS.Web.Data.Entities.ClientEntity", "Client")
                        .WithOne("IntakeTransportation")
                        .HasForeignKey("KyoS.Web.Data.Entities.IntakeTransportationEntity", "Client_FK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");
                });

            modelBuilder.Entity("KyoS.Web.Data.Entities.IntakeTuberculosisEntity", b =>
                {
                    b.HasOne("KyoS.Web.Data.Entities.ClientEntity", "Client")
                        .WithOne("IntakeTuberculosis")
                        .HasForeignKey("KyoS.Web.Data.Entities.IntakeTuberculosisEntity", "Client_FK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");
                });

            modelBuilder.Entity("KyoS.Web.Data.Entities.MTPEntity", b =>
                {
                    b.HasOne("KyoS.Web.Data.Entities.ClientEntity", "Client")
                        .WithMany("MTPs")
                        .HasForeignKey("ClientId");

                    b.HasOne("KyoS.Web.Data.Entities.DocumentsAssistantEntity", "DocumentAssistant")
                        .WithMany()
                        .HasForeignKey("DocumentAssistantId");

                    b.HasOne("KyoS.Web.Data.Entities.SupervisorEntity", "Supervisor")
                        .WithMany()
                        .HasForeignKey("SupervisorId");

                    b.Navigation("Client");

                    b.Navigation("DocumentAssistant");

                    b.Navigation("Supervisor");
                });

            modelBuilder.Entity("KyoS.Web.Data.Entities.MTPReviewEntity", b =>
                {
                    b.HasOne("KyoS.Web.Data.Entities.MTPEntity", "Mtp")
                        .WithMany("MtpReviewList")
                        .HasForeignKey("MtpId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Mtp");
                });

            modelBuilder.Entity("KyoS.Web.Data.Entities.MedicationEntity", b =>
                {
                    b.HasOne("KyoS.Web.Data.Entities.ClientEntity", "Client")
                        .WithMany("MedicationList")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Client");
                });

            modelBuilder.Entity("KyoS.Web.Data.Entities.MessageEntity", b =>
                {
                    b.HasOne("KyoS.Web.Data.Entities.AdendumEntity", "Addendum")
                        .WithMany("Messages")
                        .HasForeignKey("AddendumId");

                    b.HasOne("KyoS.Web.Data.Entities.BioEntity", "Bio")
                        .WithMany("Messages")
                        .HasForeignKey("BioId");

                    b.HasOne("KyoS.Web.Data.Entities.DischargeEntity", "Discharge")
                        .WithMany("Messages")
                        .HasForeignKey("DischargeId");

                    b.HasOne("KyoS.Web.Data.Entities.FarsFormEntity", "FarsForm")
                        .WithMany("Messages")
                        .HasForeignKey("FarsFormId");

                    b.HasOne("KyoS.Web.Data.Entities.IncidentEntity", "Incident")
                        .WithMany()
                        .HasForeignKey("IncidentId");

                    b.HasOne("KyoS.Web.Data.Entities.MTPReviewEntity", "MTPReview")
                        .WithMany("Messages")
                        .HasForeignKey("MTPReviewId");

                    b.HasOne("KyoS.Web.Data.Entities.MTPEntity", "Mtp")
                        .WithMany("Messages")
                        .HasForeignKey("MtpId");

                    b.HasOne("KyoS.Web.Data.Entities.Workday_Client", "Workday_Client")
                        .WithMany("Messages")
                        .HasForeignKey("Workday_ClientId");

                    b.Navigation("Addendum");

                    b.Navigation("Bio");

                    b.Navigation("Discharge");

                    b.Navigation("FarsForm");

                    b.Navigation("Incident");

                    b.Navigation("Mtp");

                    b.Navigation("MTPReview");

                    b.Navigation("Workday_Client");
                });

            modelBuilder.Entity("KyoS.Web.Data.Entities.NoteEntity", b =>
                {
                    b.HasOne("KyoS.Web.Data.Entities.SupervisorEntity", "Supervisor")
                        .WithMany("Notes")
                        .HasForeignKey("SupervisorId");

                    b.HasOne("KyoS.Web.Data.Entities.Workday_Client", "Workday_Cient")
                        .WithOne("Note")
                        .HasForeignKey("KyoS.Web.Data.Entities.NoteEntity", "Workday_Client_FK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Supervisor");

                    b.Navigation("Workday_Cient");
                });

            modelBuilder.Entity("KyoS.Web.Data.Entities.NotePEntity", b =>
                {
                    b.HasOne("KyoS.Web.Data.Entities.SupervisorEntity", "Supervisor")
                        .WithMany("NotesP")
                        .HasForeignKey("SupervisorId");

                    b.HasOne("KyoS.Web.Data.Entities.Workday_Client", "Workday_Cient")
                        .WithOne("NoteP")
                        .HasForeignKey("KyoS.Web.Data.Entities.NotePEntity", "Workday_Client_FK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Supervisor");

                    b.Navigation("Workday_Cient");
                });

            modelBuilder.Entity("KyoS.Web.Data.Entities.NoteP_Activity", b =>
                {
                    b.HasOne("KyoS.Web.Data.Entities.ActivityEntity", "Activity")
                        .WithMany()
                        .HasForeignKey("ActivityId");

                    b.HasOne("KyoS.Web.Data.Entities.NotePEntity", "NoteP")
                        .WithMany("NotesP_Activities")
                        .HasForeignKey("NotePId");

                    b.HasOne("KyoS.Web.Data.Entities.ObjetiveEntity", "Objetive")
                        .WithMany("NoteP_Activity")
                        .HasForeignKey("ObjetiveId");

                    b.Navigation("Activity");

                    b.Navigation("NoteP");

                    b.Navigation("Objetive");
                });

            modelBuilder.Entity("KyoS.Web.Data.Entities.NotePrototypeEntity", b =>
                {
                    b.HasOne("KyoS.Web.Data.Entities.ActivityEntity", "Activity")
                        .WithMany()
                        .HasForeignKey("ActivityId");

                    b.Navigation("Activity");
                });

            modelBuilder.Entity("KyoS.Web.Data.Entities.NotePrototype_Classification", b =>
                {
                    b.HasOne("KyoS.Web.Data.Entities.ClassificationEntity", "Classification")
                        .WithMany("NotesClassification")
                        .HasForeignKey("ClassificationId");

                    b.HasOne("KyoS.Web.Data.Entities.NotePrototypeEntity", "Note")
                        .WithMany("Classifications")
                        .HasForeignKey("NoteId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Classification");

                    b.Navigation("Note");
                });

            modelBuilder.Entity("KyoS.Web.Data.Entities.Note_Activity", b =>
                {
                    b.HasOne("KyoS.Web.Data.Entities.ActivityEntity", "Activity")
                        .WithMany("Notes_Activities")
                        .HasForeignKey("ActivityId");

                    b.HasOne("KyoS.Web.Data.Entities.NoteEntity", "Note")
                        .WithMany("Notes_Activities")
                        .HasForeignKey("NoteId");

                    b.HasOne("KyoS.Web.Data.Entities.ObjetiveEntity", "Objetive")
                        .WithMany("Note_Activity")
                        .HasForeignKey("ObjetiveId");

                    b.Navigation("Activity");

                    b.Navigation("Note");

                    b.Navigation("Objetive");
                });

            modelBuilder.Entity("KyoS.Web.Data.Entities.ObjectiveTempEntity", b =>
                {
                    b.HasOne("KyoS.Web.Data.Entities.GoalsTempEntity", "GoalTemp")
                        .WithMany("ObjetiveTempList")
                        .HasForeignKey("GoalTempId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("GoalTemp");
                });

            modelBuilder.Entity("KyoS.Web.Data.Entities.ObjetiveEntity", b =>
                {
                    b.HasOne("KyoS.Web.Data.Entities.GoalEntity", "Goal")
                        .WithMany("Objetives")
                        .HasForeignKey("GoalId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Goal");
                });

            modelBuilder.Entity("KyoS.Web.Data.Entities.Objetive_Classification", b =>
                {
                    b.HasOne("KyoS.Web.Data.Entities.ClassificationEntity", "Classification")
                        .WithMany("ObjetivesClassification")
                        .HasForeignKey("ClassificationId");

                    b.HasOne("KyoS.Web.Data.Entities.ObjetiveEntity", "Objetive")
                        .WithMany("Classifications")
                        .HasForeignKey("ObjetiveId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Classification");

                    b.Navigation("Objetive");
                });

            modelBuilder.Entity("KyoS.Web.Data.Entities.Plan_Classification", b =>
                {
                    b.HasOne("KyoS.Web.Data.Entities.ClassificationEntity", "Classification")
                        .WithMany("PlansClassification")
                        .HasForeignKey("ClassificationId");

                    b.HasOne("KyoS.Web.Data.Entities.PlanEntity", "Plan")
                        .WithMany("Classifications")
                        .HasForeignKey("PlanId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Classification");

                    b.Navigation("Plan");
                });

            modelBuilder.Entity("KyoS.Web.Data.Entities.SettingEntity", b =>
                {
                    b.HasOne("KyoS.Web.Data.Entities.ClinicEntity", "Clinic")
                        .WithOne("Setting")
                        .HasForeignKey("KyoS.Web.Data.Entities.SettingEntity", "Clinic_FK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Clinic");
                });

            modelBuilder.Entity("KyoS.Web.Data.Entities.SupervisorEntity", b =>
                {
                    b.HasOne("KyoS.Web.Data.Entities.ClinicEntity", "Clinic")
                        .WithMany("Supervisors")
                        .HasForeignKey("ClinicId");

                    b.Navigation("Clinic");
                });

            modelBuilder.Entity("KyoS.Web.Data.Entities.TCMAdendumEntity", b =>
                {
                    b.HasOne("KyoS.Web.Data.Entities.TCMDomainEntity", "TcmDomain")
                        .WithMany()
                        .HasForeignKey("TcmDomainId");

                    b.HasOne("KyoS.Web.Data.Entities.TCMServicePlanEntity", "TcmServicePlan")
                        .WithMany("TCMAdendum")
                        .HasForeignKey("TcmServicePlanId");

                    b.Navigation("TcmDomain");

                    b.Navigation("TcmServicePlan");
                });

            modelBuilder.Entity("KyoS.Web.Data.Entities.TCMAssessmentDrugEntity", b =>
                {
                    b.HasOne("KyoS.Web.Data.Entities.TCMAssessmentEntity", "TcmAssessment")
                        .WithMany("DrugList")
                        .HasForeignKey("TcmAssessmentId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("TcmAssessment");
                });

            modelBuilder.Entity("KyoS.Web.Data.Entities.TCMAssessmentEntity", b =>
                {
                    b.HasOne("KyoS.Web.Data.Entities.TCMSupervisorEntity", "TCMSupervisor")
                        .WithMany()
                        .HasForeignKey("TCMSupervisorId");

                    b.HasOne("KyoS.Web.Data.Entities.TCMClientEntity", "TcmClient")
                        .WithOne("TCMAssessment")
                        .HasForeignKey("KyoS.Web.Data.Entities.TCMAssessmentEntity", "TcmClient_FK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TcmClient");

                    b.Navigation("TCMSupervisor");
                });

            modelBuilder.Entity("KyoS.Web.Data.Entities.TCMAssessmentHospitalEntity", b =>
                {
                    b.HasOne("KyoS.Web.Data.Entities.TCMAssessmentEntity", "TcmAssessment")
                        .WithMany("HospitalList")
                        .HasForeignKey("TcmAssessmentId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("TcmAssessment");
                });

            modelBuilder.Entity("KyoS.Web.Data.Entities.TCMAssessmentHouseCompositionEntity", b =>
                {
                    b.HasOne("KyoS.Web.Data.Entities.TCMAssessmentEntity", "TcmAssessment")
                        .WithMany("HouseCompositionList")
                        .HasForeignKey("TcmAssessmentId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("TcmAssessment");
                });

            modelBuilder.Entity("KyoS.Web.Data.Entities.TCMAssessmentIndividualAgencyEntity", b =>
                {
                    b.HasOne("KyoS.Web.Data.Entities.TCMAssessmentEntity", "TcmAssessment")
                        .WithMany("IndividualAgencyList")
                        .HasForeignKey("TcmAssessmentId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("TcmAssessment");
                });

            modelBuilder.Entity("KyoS.Web.Data.Entities.TCMAssessmentMedicalProblemEntity", b =>
                {
                    b.HasOne("KyoS.Web.Data.Entities.TCMAssessmentEntity", "TcmAssessment")
                        .WithMany("MedicalProblemList")
                        .HasForeignKey("TcmAssessmentId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("TcmAssessment");
                });

            modelBuilder.Entity("KyoS.Web.Data.Entities.TCMAssessmentMedicationEntity", b =>
                {
                    b.HasOne("KyoS.Web.Data.Entities.TCMAssessmentEntity", "TcmAssessment")
                        .WithMany("MedicationList")
                        .HasForeignKey("TcmAssessmentId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("TcmAssessment");
                });

            modelBuilder.Entity("KyoS.Web.Data.Entities.TCMAssessmentPastCurrentServiceEntity", b =>
                {
                    b.HasOne("KyoS.Web.Data.Entities.TCMAssessmentEntity", "TcmAssessment")
                        .WithMany("PastCurrentServiceList")
                        .HasForeignKey("TcmAssessmentId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("TcmAssessment");
                });

            modelBuilder.Entity("KyoS.Web.Data.Entities.TCMAssessmentSurgeryEntity", b =>
                {
                    b.HasOne("KyoS.Web.Data.Entities.TCMAssessmentEntity", "TcmAssessment")
                        .WithMany("SurgeryList")
                        .HasForeignKey("TcmAssessmentId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("TcmAssessment");
                });

            modelBuilder.Entity("KyoS.Web.Data.Entities.TCMClientEntity", b =>
                {
                    b.HasOne("KyoS.Web.Data.Entities.CaseMannagerEntity", "Casemanager")
                        .WithMany()
                        .HasForeignKey("CasemanagerId");

                    b.HasOne("KyoS.Web.Data.Entities.ClientEntity", "Client")
                        .WithMany()
                        .HasForeignKey("ClientId");

                    b.Navigation("Casemanager");

                    b.Navigation("Client");
                });

            modelBuilder.Entity("KyoS.Web.Data.Entities.TCMDischargeEntity", b =>
                {
                    b.HasOne("KyoS.Web.Data.Entities.TCMSupervisorEntity", "TCMSupervisor")
                        .WithMany()
                        .HasForeignKey("TCMSupervisorId");

                    b.HasOne("KyoS.Web.Data.Entities.TCMServicePlanEntity", "TcmServicePlan")
                        .WithOne("TCMDischarge")
                        .HasForeignKey("KyoS.Web.Data.Entities.TCMDischargeEntity", "TcmServicePlan_FK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TcmServicePlan");

                    b.Navigation("TCMSupervisor");
                });

            modelBuilder.Entity("KyoS.Web.Data.Entities.TCMDischargeFollowUpEntity", b =>
                {
                    b.HasOne("KyoS.Web.Data.Entities.TCMDischargeEntity", "TcmDischarge")
                        .WithMany("TcmDischargeFollowUp")
                        .HasForeignKey("TcmDischargeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("TcmDischarge");
                });

            modelBuilder.Entity("KyoS.Web.Data.Entities.TCMDischargeServiceStatusEntity", b =>
                {
                    b.HasOne("KyoS.Web.Data.Entities.TCMDischargeEntity", "TcmDischarge")
                        .WithMany("TcmDischargeServiceStatus")
                        .HasForeignKey("TcmDischargeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("TcmDischarge");
                });

            modelBuilder.Entity("KyoS.Web.Data.Entities.TCMDomainEntity", b =>
                {
                    b.HasOne("KyoS.Web.Data.Entities.TCMServicePlanEntity", "TcmServicePlan")
                        .WithMany("TCMDomain")
                        .HasForeignKey("TcmServicePlanId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("TcmServicePlan");
                });

            modelBuilder.Entity("KyoS.Web.Data.Entities.TCMFarsFormEntity", b =>
                {
                    b.HasOne("KyoS.Web.Data.Entities.TCMClientEntity", "TCMClient")
                        .WithMany("TCMFarsFormList")
                        .HasForeignKey("TCMClientId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("KyoS.Web.Data.Entities.TCMSupervisorEntity", "TCMSupervisor")
                        .WithMany()
                        .HasForeignKey("TCMSupervisorId");

                    b.Navigation("TCMClient");

                    b.Navigation("TCMSupervisor");
                });

            modelBuilder.Entity("KyoS.Web.Data.Entities.TCMIntakeAcknowledgementHippaEntity", b =>
                {
                    b.HasOne("KyoS.Web.Data.Entities.TCMClientEntity", "TcmClient")
                        .WithOne("TcmIntakeAcknowledgementHipa")
                        .HasForeignKey("KyoS.Web.Data.Entities.TCMIntakeAcknowledgementHippaEntity", "TcmClient_FK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TcmClient");
                });

            modelBuilder.Entity("KyoS.Web.Data.Entities.TCMIntakeAdvancedDirectiveEntity", b =>
                {
                    b.HasOne("KyoS.Web.Data.Entities.TCMClientEntity", "TcmClient")
                        .WithOne("TCMIntakeAdvancedDirective")
                        .HasForeignKey("KyoS.Web.Data.Entities.TCMIntakeAdvancedDirectiveEntity", "TcmClient_FK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TcmClient");
                });

            modelBuilder.Entity("KyoS.Web.Data.Entities.TCMIntakeAppendixJEntity", b =>
                {
                    b.HasOne("KyoS.Web.Data.Entities.TCMClientEntity", "TcmClient")
                        .WithOne("TcmIntakeAppendixJ")
                        .HasForeignKey("KyoS.Web.Data.Entities.TCMIntakeAppendixJEntity", "TcmClient_FK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KyoS.Web.Data.Entities.TCMSupervisorEntity", "TcmSupervisor")
                        .WithMany()
                        .HasForeignKey("TcmSupervisorId");

                    b.Navigation("TcmClient");

                    b.Navigation("TcmSupervisor");
                });

            modelBuilder.Entity("KyoS.Web.Data.Entities.TCMIntakeConsentForReleaseEntity", b =>
                {
                    b.HasOne("KyoS.Web.Data.Entities.TCMClientEntity", "TcmClient")
                        .WithMany("TcmIntakeConsentForRelease")
                        .HasForeignKey("TcmClientId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("TcmClient");
                });

            modelBuilder.Entity("KyoS.Web.Data.Entities.TCMIntakeConsentForTreatmentEntity", b =>
                {
                    b.HasOne("KyoS.Web.Data.Entities.TCMClientEntity", "TcmClient")
                        .WithOne("TcmIntakeConsentForTreatment")
                        .HasForeignKey("KyoS.Web.Data.Entities.TCMIntakeConsentForTreatmentEntity", "Client_FK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TcmClient");
                });

            modelBuilder.Entity("KyoS.Web.Data.Entities.TCMIntakeConsumerRightsEntity", b =>
                {
                    b.HasOne("KyoS.Web.Data.Entities.TCMClientEntity", "TcmClient")
                        .WithOne("TcmIntakeConsumerRights")
                        .HasForeignKey("KyoS.Web.Data.Entities.TCMIntakeConsumerRightsEntity", "TcmClient_FK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TcmClient");
                });

            modelBuilder.Entity("KyoS.Web.Data.Entities.TCMIntakeCoordinationCareEntity", b =>
                {
                    b.HasOne("KyoS.Web.Data.Entities.TCMClientEntity", "TcmClient")
                        .WithOne("TCMIntakeCoordinationCare")
                        .HasForeignKey("KyoS.Web.Data.Entities.TCMIntakeCoordinationCareEntity", "TcmClient_FK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TcmClient");
                });

            modelBuilder.Entity("KyoS.Web.Data.Entities.TCMIntakeForeignLanguageEntity", b =>
                {
                    b.HasOne("KyoS.Web.Data.Entities.TCMClientEntity", "TcmClient")
                        .WithOne("TCMIntakeForeignLanguage")
                        .HasForeignKey("KyoS.Web.Data.Entities.TCMIntakeForeignLanguageEntity", "TcmClient_FK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TcmClient");
                });

            modelBuilder.Entity("KyoS.Web.Data.Entities.TCMIntakeFormEntity", b =>
                {
                    b.HasOne("KyoS.Web.Data.Entities.TCMClientEntity", "TcmClient")
                        .WithOne("TCMIntakeForm")
                        .HasForeignKey("KyoS.Web.Data.Entities.TCMIntakeFormEntity", "TcmClient_FK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TcmClient");
                });

            modelBuilder.Entity("KyoS.Web.Data.Entities.TCMIntakeInterventionEntity", b =>
                {
                    b.HasOne("KyoS.Web.Data.Entities.TCMIntakeInterventionLogEntity", "TcmInterventionLog")
                        .WithMany("InterventionList")
                        .HasForeignKey("TcmInterventionLogId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("TcmInterventionLog");
                });

            modelBuilder.Entity("KyoS.Web.Data.Entities.TCMIntakeInterventionLogEntity", b =>
                {
                    b.HasOne("KyoS.Web.Data.Entities.TCMClientEntity", "TcmClient")
                        .WithOne("TcmInterventionLog")
                        .HasForeignKey("KyoS.Web.Data.Entities.TCMIntakeInterventionLogEntity", "TcmClient_FK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TcmClient");
                });

            modelBuilder.Entity("KyoS.Web.Data.Entities.TCMIntakeMiniMentalEntity", b =>
                {
                    b.HasOne("KyoS.Web.Data.Entities.TCMClientEntity", "TcmClient")
                        .WithOne("TCMIntakeMiniMental")
                        .HasForeignKey("KyoS.Web.Data.Entities.TCMIntakeMiniMentalEntity", "TcmClient_FK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TcmClient");
                });

            modelBuilder.Entity("KyoS.Web.Data.Entities.TCMIntakeNonClinicalLogEntity", b =>
                {
                    b.HasOne("KyoS.Web.Data.Entities.TCMClientEntity", "TcmClient")
                        .WithOne("TCMIntakeNonClinicalLog")
                        .HasForeignKey("KyoS.Web.Data.Entities.TCMIntakeNonClinicalLogEntity", "TcmClient_FK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TcmClient");
                });

            modelBuilder.Entity("KyoS.Web.Data.Entities.TCMIntakeOrientationChecklistEntity", b =>
                {
                    b.HasOne("KyoS.Web.Data.Entities.TCMClientEntity", "TcmClient")
                        .WithOne("TCMIntakeOrientationChecklist")
                        .HasForeignKey("KyoS.Web.Data.Entities.TCMIntakeOrientationChecklistEntity", "TcmClient_FK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TcmClient");
                });

            modelBuilder.Entity("KyoS.Web.Data.Entities.TCMIntakeWelcomeEntity", b =>
                {
                    b.HasOne("KyoS.Web.Data.Entities.TCMClientEntity", "TcmClient")
                        .WithOne("TCMIntakeWelcome")
                        .HasForeignKey("KyoS.Web.Data.Entities.TCMIntakeWelcomeEntity", "TcmClient_FK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TcmClient");
                });

            modelBuilder.Entity("KyoS.Web.Data.Entities.TCMMessageEntity", b =>
                {
                    b.HasOne("KyoS.Web.Data.Entities.TCMAdendumEntity", "TCMAddendum")
                        .WithMany("TCMMessages")
                        .HasForeignKey("TCMAddendumId");

                    b.HasOne("KyoS.Web.Data.Entities.TCMAssessmentEntity", "TCMAssessment")
                        .WithMany("TcmMessages")
                        .HasForeignKey("TCMAssessmentId");

                    b.HasOne("KyoS.Web.Data.Entities.TCMDischargeEntity", "TCMDischarge")
                        .WithMany("TCMMessages")
                        .HasForeignKey("TCMDischargeId");

                    b.HasOne("KyoS.Web.Data.Entities.TCMFarsFormEntity", "TCMFarsForm")
                        .WithMany("TcmMessages")
                        .HasForeignKey("TCMFarsFormId");

                    b.HasOne("KyoS.Web.Data.Entities.TCMNoteEntity", "TCMNote")
                        .WithMany("TCMMessages")
                        .HasForeignKey("TCMNoteId");

                    b.HasOne("KyoS.Web.Data.Entities.TCMServicePlanEntity", "TCMServicePlan")
                        .WithMany("TCMMessages")
                        .HasForeignKey("TCMServicePlanId");

                    b.HasOne("KyoS.Web.Data.Entities.TCMServicePlanReviewEntity", "TCMServicePlanReview")
                        .WithMany("TCMMessages")
                        .HasForeignKey("TCMServicePlanReviewId");

                    b.Navigation("TCMAddendum");

                    b.Navigation("TCMAssessment");

                    b.Navigation("TCMDischarge");

                    b.Navigation("TCMFarsForm");

                    b.Navigation("TCMNote");

                    b.Navigation("TCMServicePlan");

                    b.Navigation("TCMServicePlanReview");
                });

            modelBuilder.Entity("KyoS.Web.Data.Entities.TCMNoteActivityEntity", b =>
                {
                    b.HasOne("KyoS.Web.Data.Entities.TCMDomainEntity", "TCMDomain")
                        .WithMany()
                        .HasForeignKey("TCMDomainId");

                    b.HasOne("KyoS.Web.Data.Entities.TCMNoteEntity", "TCMNote")
                        .WithMany("TCMNoteActivity")
                        .HasForeignKey("TCMNoteId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("KyoS.Web.Data.Entities.TCMServiceActivityEntity", "TCMServiceActivity")
                        .WithMany()
                        .HasForeignKey("TCMServiceActivityId");

                    b.Navigation("TCMDomain");

                    b.Navigation("TCMNote");

                    b.Navigation("TCMServiceActivity");
                });

            modelBuilder.Entity("KyoS.Web.Data.Entities.TCMNoteEntity", b =>
                {
                    b.HasOne("KyoS.Web.Data.Entities.TCMClientEntity", "TCMClient")
                        .WithMany("TCMNote")
                        .HasForeignKey("TCMClientId");

                    b.Navigation("TCMClient");
                });

            modelBuilder.Entity("KyoS.Web.Data.Entities.TCMObjetiveEntity", b =>
                {
                    b.HasOne("KyoS.Web.Data.Entities.TCMDomainEntity", "TcmDomain")
                        .WithMany("TCMObjetive")
                        .HasForeignKey("TcmDomainId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("TcmDomain");
                });

            modelBuilder.Entity("KyoS.Web.Data.Entities.TCMServiceActivityEntity", b =>
                {
                    b.HasOne("KyoS.Web.Data.Entities.TCMServiceEntity", "TcmService")
                        .WithMany("TCMServiceActivity")
                        .HasForeignKey("TcmServiceId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("TcmService");
                });

            modelBuilder.Entity("KyoS.Web.Data.Entities.TCMServiceEntity", b =>
                {
                    b.HasOne("KyoS.Web.Data.Entities.ClinicEntity", "Clinic")
                        .WithMany()
                        .HasForeignKey("ClinicId");

                    b.HasOne("KyoS.Web.Data.Entities.TCMServicePlanEntity", null)
                        .WithMany("TCMService")
                        .HasForeignKey("TCMServicePlanEntityId");

                    b.Navigation("Clinic");
                });

            modelBuilder.Entity("KyoS.Web.Data.Entities.TCMServicePlanEntity", b =>
                {
                    b.HasOne("KyoS.Web.Data.Entities.TCMSupervisorEntity", "TCMSupervisor")
                        .WithMany()
                        .HasForeignKey("TCMSupervisorId");

                    b.HasOne("KyoS.Web.Data.Entities.TCMClientEntity", "TcmClient")
                        .WithOne("TcmServicePlan")
                        .HasForeignKey("KyoS.Web.Data.Entities.TCMServicePlanEntity", "TcmClient_FK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TcmClient");

                    b.Navigation("TCMSupervisor");
                });

            modelBuilder.Entity("KyoS.Web.Data.Entities.TCMServicePlanReviewDomainEntity", b =>
                {
                    b.HasOne("KyoS.Web.Data.Entities.TCMDomainEntity", "TcmDomain")
                        .WithMany()
                        .HasForeignKey("TcmDomainId");

                    b.HasOne("KyoS.Web.Data.Entities.TCMServicePlanReviewEntity", "TcmServicePlanReview")
                        .WithMany("TCMServicePlanRevDomain")
                        .HasForeignKey("TcmServicePlanReviewId");

                    b.Navigation("TcmDomain");

                    b.Navigation("TcmServicePlanReview");
                });

            modelBuilder.Entity("KyoS.Web.Data.Entities.TCMServicePlanReviewDomainObjectiveEntity", b =>
                {
                    b.HasOne("KyoS.Web.Data.Entities.TCMServicePlanReviewDomainEntity", "tcmServicePlanReviewDomain")
                        .WithMany("TCMServicePlanRevDomainObjectiive")
                        .HasForeignKey("tcmServicePlanReviewDomainId");

                    b.Navigation("tcmServicePlanReviewDomain");
                });

            modelBuilder.Entity("KyoS.Web.Data.Entities.TCMServicePlanReviewEntity", b =>
                {
                    b.HasOne("KyoS.Web.Data.Entities.TCMSupervisorEntity", "TCMSupervisor")
                        .WithMany()
                        .HasForeignKey("TCMSupervisorId");

                    b.HasOne("KyoS.Web.Data.Entities.TCMServicePlanEntity", "TcmServicePlan")
                        .WithOne("TCMServicePlanReview")
                        .HasForeignKey("KyoS.Web.Data.Entities.TCMServicePlanReviewEntity", "TcmServicePlan_FK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TcmServicePlan");

                    b.Navigation("TCMSupervisor");
                });

            modelBuilder.Entity("KyoS.Web.Data.Entities.TCMStageEntity", b =>
                {
                    b.HasOne("KyoS.Web.Data.Entities.ClinicEntity", "Clinic")
                        .WithMany()
                        .HasForeignKey("ClinicId");

                    b.HasOne("KyoS.Web.Data.Entities.TCMServiceEntity", "tCMservice")
                        .WithMany("Stages")
                        .HasForeignKey("tCMserviceId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Clinic");

                    b.Navigation("tCMservice");
                });

            modelBuilder.Entity("KyoS.Web.Data.Entities.TCMSupervisorEntity", b =>
                {
                    b.HasOne("KyoS.Web.Data.Entities.ClinicEntity", "Clinic")
                        .WithMany()
                        .HasForeignKey("ClinicId");

                    b.Navigation("Clinic");
                });

            modelBuilder.Entity("KyoS.Web.Data.Entities.TemplateDOCEntity", b =>
                {
                    b.HasOne("KyoS.Web.Data.Entities.ClinicEntity", "Clinic")
                        .WithMany("Templates")
                        .HasForeignKey("ClinicId");

                    b.Navigation("Clinic");
                });

            modelBuilder.Entity("KyoS.Web.Data.Entities.ThemeEntity", b =>
                {
                    b.HasOne("KyoS.Web.Data.Entities.ClinicEntity", "Clinic")
                        .WithMany("Themes")
                        .HasForeignKey("ClinicId");

                    b.Navigation("Clinic");
                });

            modelBuilder.Entity("KyoS.Web.Data.Entities.UserEntity", b =>
                {
                    b.HasOne("KyoS.Web.Data.Entities.ClinicEntity", "Clinic")
                        .WithMany("Users")
                        .HasForeignKey("ClinicId");

                    b.Navigation("Clinic");
                });

            modelBuilder.Entity("KyoS.Web.Data.Entities.WeekEntity", b =>
                {
                    b.HasOne("KyoS.Web.Data.Entities.ClinicEntity", "Clinic")
                        .WithMany("Weeks")
                        .HasForeignKey("ClinicId");

                    b.Navigation("Clinic");
                });

            modelBuilder.Entity("KyoS.Web.Data.Entities.WorkdayEntity", b =>
                {
                    b.HasOne("KyoS.Web.Data.Entities.WeekEntity", "Week")
                        .WithMany("Days")
                        .HasForeignKey("WeekId");

                    b.Navigation("Week");
                });

            modelBuilder.Entity("KyoS.Web.Data.Entities.Workday_Activity_Facilitator", b =>
                {
                    b.HasOne("KyoS.Web.Data.Entities.ActivityEntity", "Activity")
                        .WithMany("Workdays_Activities_Facilitators")
                        .HasForeignKey("ActivityId");

                    b.HasOne("KyoS.Web.Data.Entities.FacilitatorEntity", "Facilitator")
                        .WithMany("Workdays_Activities_Facilitators")
                        .HasForeignKey("FacilitatorId");

                    b.HasOne("KyoS.Web.Data.Entities.WorkdayEntity", "Workday")
                        .WithMany("Workdays_Activities_Facilitators")
                        .HasForeignKey("WorkdayId");

                    b.Navigation("Activity");

                    b.Navigation("Facilitator");

                    b.Navigation("Workday");
                });

            modelBuilder.Entity("KyoS.Web.Data.Entities.Workday_Client", b =>
                {
                    b.HasOne("KyoS.Web.Data.Entities.ClientEntity", "Client")
                        .WithMany("Workdays_Clients")
                        .HasForeignKey("ClientId");

                    b.HasOne("KyoS.Web.Data.Entities.FacilitatorEntity", "Facilitator")
                        .WithMany("Workdays_Clients")
                        .HasForeignKey("FacilitatorId");

                    b.HasOne("KyoS.Web.Data.Entities.WorkdayEntity", "Workday")
                        .WithMany("Workdays_Clients")
                        .HasForeignKey("WorkdayId");

                    b.Navigation("Client");

                    b.Navigation("Facilitator");

                    b.Navigation("Workday");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("KyoS.Web.Data.Entities.UserEntity", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("KyoS.Web.Data.Entities.UserEntity", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KyoS.Web.Data.Entities.UserEntity", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("KyoS.Web.Data.Entities.UserEntity", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("KyoS.Web.Data.Entities.ActivityEntity", b =>
                {
                    b.Navigation("Notes_Activities");

                    b.Navigation("Workdays_Activities_Facilitators");
                });

            modelBuilder.Entity("KyoS.Web.Data.Entities.AdendumEntity", b =>
                {
                    b.Navigation("Goals");

                    b.Navigation("Messages");
                });

            modelBuilder.Entity("KyoS.Web.Data.Entities.BioEntity", b =>
                {
                    b.Navigation("Messages");
                });

            modelBuilder.Entity("KyoS.Web.Data.Entities.ClassificationEntity", b =>
                {
                    b.Navigation("NotesClassification");

                    b.Navigation("ObjetivesClassification");

                    b.Navigation("PlansClassification");
                });

            modelBuilder.Entity("KyoS.Web.Data.Entities.ClientEntity", b =>
                {
                    b.Navigation("Bio");

                    b.Navigation("Client_Referred");

                    b.Navigation("Clients_Diagnostics");

                    b.Navigation("Clients_HealthInsurances");

                    b.Navigation("DischargeList");

                    b.Navigation("Documents");

                    b.Navigation("FarsFormList");

                    b.Navigation("IntakeAccessToServices");

                    b.Navigation("IntakeAcknowledgementHipa");

                    b.Navigation("IntakeConsentForRelease");

                    b.Navigation("IntakeConsentForTreatment");

                    b.Navigation("IntakeConsentPhotograph");

                    b.Navigation("IntakeConsumerRights");

                    b.Navigation("IntakeFeeAgreement");

                    b.Navigation("IntakeMedicalHistory");

                    b.Navigation("IntakeOrientationChecklist");

                    b.Navigation("IntakeScreening");

                    b.Navigation("IntakeTransportation");

                    b.Navigation("IntakeTuberculosis");

                    b.Navigation("List_BehavioralHistory");

                    b.Navigation("MedicationList");

                    b.Navigation("MTPs");

                    b.Navigation("Workdays_Clients");
                });

            modelBuilder.Entity("KyoS.Web.Data.Entities.ClinicEntity", b =>
                {
                    b.Navigation("CaseManagers");

                    b.Navigation("Clients");

                    b.Navigation("Facilitators");

                    b.Navigation("Setting");

                    b.Navigation("Supervisors");

                    b.Navigation("Templates");

                    b.Navigation("Themes");

                    b.Navigation("Users");

                    b.Navigation("Weeks");
                });

            modelBuilder.Entity("KyoS.Web.Data.Entities.DischargeEntity", b =>
                {
                    b.Navigation("Messages");
                });

            modelBuilder.Entity("KyoS.Web.Data.Entities.DoctorEntity", b =>
                {
                    b.Navigation("Clients");
                });

            modelBuilder.Entity("KyoS.Web.Data.Entities.EmergencyContactEntity", b =>
                {
                    b.Navigation("Clients");
                });

            modelBuilder.Entity("KyoS.Web.Data.Entities.FacilitatorEntity", b =>
                {
                    b.Navigation("ClientsFromIndividualTherapy");

                    b.Navigation("Groups");

                    b.Navigation("Workdays_Activities_Facilitators");

                    b.Navigation("Workdays_Clients");
                });

            modelBuilder.Entity("KyoS.Web.Data.Entities.FarsFormEntity", b =>
                {
                    b.Navigation("Messages");
                });

            modelBuilder.Entity("KyoS.Web.Data.Entities.GoalEntity", b =>
                {
                    b.Navigation("Objetives");
                });

            modelBuilder.Entity("KyoS.Web.Data.Entities.GoalsTempEntity", b =>
                {
                    b.Navigation("ObjetiveTempList");
                });

            modelBuilder.Entity("KyoS.Web.Data.Entities.GroupEntity", b =>
                {
                    b.Navigation("Clients");
                });

            modelBuilder.Entity("KyoS.Web.Data.Entities.GroupNoteEntity", b =>
                {
                    b.Navigation("GroupNotes_Activities");
                });

            modelBuilder.Entity("KyoS.Web.Data.Entities.LegalGuardianEntity", b =>
                {
                    b.Navigation("Clients");
                });

            modelBuilder.Entity("KyoS.Web.Data.Entities.MTPEntity", b =>
                {
                    b.Navigation("AdendumList");

                    b.Navigation("Goals");

                    b.Navigation("Messages");

                    b.Navigation("MtpReviewList");
                });

            modelBuilder.Entity("KyoS.Web.Data.Entities.MTPReviewEntity", b =>
                {
                    b.Navigation("Messages");
                });

            modelBuilder.Entity("KyoS.Web.Data.Entities.NoteEntity", b =>
                {
                    b.Navigation("Notes_Activities");
                });

            modelBuilder.Entity("KyoS.Web.Data.Entities.NotePEntity", b =>
                {
                    b.Navigation("NotesP_Activities");
                });

            modelBuilder.Entity("KyoS.Web.Data.Entities.NotePrototypeEntity", b =>
                {
                    b.Navigation("Classifications");
                });

            modelBuilder.Entity("KyoS.Web.Data.Entities.ObjetiveEntity", b =>
                {
                    b.Navigation("Classifications");

                    b.Navigation("IndividualNotes");

                    b.Navigation("Note_Activity");

                    b.Navigation("NoteP_Activity");
                });

            modelBuilder.Entity("KyoS.Web.Data.Entities.PlanEntity", b =>
                {
                    b.Navigation("Classifications");
                });

            modelBuilder.Entity("KyoS.Web.Data.Entities.PsychiatristEntity", b =>
                {
                    b.Navigation("Clients");
                });

            modelBuilder.Entity("KyoS.Web.Data.Entities.SupervisorEntity", b =>
                {
                    b.Navigation("GroupNotes");

                    b.Navigation("IndividualNotes");

                    b.Navigation("Notes");

                    b.Navigation("NotesP");
                });

            modelBuilder.Entity("KyoS.Web.Data.Entities.TCMAdendumEntity", b =>
                {
                    b.Navigation("TCMMessages");
                });

            modelBuilder.Entity("KyoS.Web.Data.Entities.TCMAssessmentEntity", b =>
                {
                    b.Navigation("DrugList");

                    b.Navigation("HospitalList");

                    b.Navigation("HouseCompositionList");

                    b.Navigation("IndividualAgencyList");

                    b.Navigation("MedicalProblemList");

                    b.Navigation("MedicationList");

                    b.Navigation("PastCurrentServiceList");

                    b.Navigation("SurgeryList");

                    b.Navigation("TcmMessages");
                });

            modelBuilder.Entity("KyoS.Web.Data.Entities.TCMClientEntity", b =>
                {
                    b.Navigation("TCMAssessment");

                    b.Navigation("TCMFarsFormList");

                    b.Navigation("TcmIntakeAcknowledgementHipa");

                    b.Navigation("TCMIntakeAdvancedDirective");

                    b.Navigation("TcmIntakeAppendixJ");

                    b.Navigation("TcmIntakeConsentForRelease");

                    b.Navigation("TcmIntakeConsentForTreatment");

                    b.Navigation("TcmIntakeConsumerRights");

                    b.Navigation("TCMIntakeCoordinationCare");

                    b.Navigation("TCMIntakeForeignLanguage");

                    b.Navigation("TCMIntakeForm");

                    b.Navigation("TCMIntakeMiniMental");

                    b.Navigation("TCMIntakeNonClinicalLog");

                    b.Navigation("TCMIntakeOrientationChecklist");

                    b.Navigation("TCMIntakeWelcome");

                    b.Navigation("TcmInterventionLog");

                    b.Navigation("TCMNote");

                    b.Navigation("TcmServicePlan");
                });

            modelBuilder.Entity("KyoS.Web.Data.Entities.TCMDischargeEntity", b =>
                {
                    b.Navigation("TcmDischargeFollowUp");

                    b.Navigation("TcmDischargeServiceStatus");

                    b.Navigation("TCMMessages");
                });

            modelBuilder.Entity("KyoS.Web.Data.Entities.TCMDomainEntity", b =>
                {
                    b.Navigation("TCMObjetive");
                });

            modelBuilder.Entity("KyoS.Web.Data.Entities.TCMFarsFormEntity", b =>
                {
                    b.Navigation("TcmMessages");
                });

            modelBuilder.Entity("KyoS.Web.Data.Entities.TCMIntakeInterventionLogEntity", b =>
                {
                    b.Navigation("InterventionList");
                });

            modelBuilder.Entity("KyoS.Web.Data.Entities.TCMNoteEntity", b =>
                {
                    b.Navigation("TCMMessages");

                    b.Navigation("TCMNoteActivity");
                });

            modelBuilder.Entity("KyoS.Web.Data.Entities.TCMServiceEntity", b =>
                {
                    b.Navigation("Stages");

                    b.Navigation("TCMServiceActivity");
                });

            modelBuilder.Entity("KyoS.Web.Data.Entities.TCMServicePlanEntity", b =>
                {
                    b.Navigation("TCMAdendum");

                    b.Navigation("TCMDischarge");

                    b.Navigation("TCMDomain");

                    b.Navigation("TCMMessages");

                    b.Navigation("TCMService");

                    b.Navigation("TCMServicePlanReview");
                });

            modelBuilder.Entity("KyoS.Web.Data.Entities.TCMServicePlanReviewDomainEntity", b =>
                {
                    b.Navigation("TCMServicePlanRevDomainObjectiive");
                });

            modelBuilder.Entity("KyoS.Web.Data.Entities.TCMServicePlanReviewEntity", b =>
                {
                    b.Navigation("TCMMessages");

                    b.Navigation("TCMServicePlanRevDomain");
                });

            modelBuilder.Entity("KyoS.Web.Data.Entities.WeekEntity", b =>
                {
                    b.Navigation("Days");
                });

            modelBuilder.Entity("KyoS.Web.Data.Entities.WorkdayEntity", b =>
                {
                    b.Navigation("Workdays_Activities_Facilitators");

                    b.Navigation("Workdays_Clients");
                });

            modelBuilder.Entity("KyoS.Web.Data.Entities.Workday_Client", b =>
                {
                    b.Navigation("GroupNote");

                    b.Navigation("IndividualNote");

                    b.Navigation("Messages");

                    b.Navigation("Note");

                    b.Navigation("NoteP");
                });
#pragma warning restore 612, 618
        }
    }
}
