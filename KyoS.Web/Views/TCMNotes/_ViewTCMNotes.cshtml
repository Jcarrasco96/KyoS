@model IEnumerable<KyoS.Web.Data.Entities.WeekEntity>
<div class="row">
    <div class="col-md-12">
        <div class="panel panel-default">
            <div class="panel-heading">
                <h3 class="panel-title">PSR Notes</h3>
            </div>
            <div class="panel-body">
                <table class="table table-hover table-responsive table-striped" id="MyTable">
                    <thead>
                        <tr>
                            <th class="col-md-1">

                            </th>
                            <th class="col-md-2">

                            </th>
                            <th class="col-md-3">

                            </th>
                            <th class="col-md-2" style="text-align:center;">
                                Init Date
                            </th>
                            <th class="col-md-2" style="text-align:center;">
                                Final Date
                            </th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model.OrderBy(w => w.WeekOfYear))
                        {
                            <tr>
                                <td align="center">
                                    @if (item.Days.Count() != 0)
                                    {
                                        <a class="icon-plus-sign-alt"></a>
                                    }
                                    <div style="display:none">
                                        <table class="table table-striped">
                                            <tr>
                                                <th class="col-md-3">Date</th>
                                                <th class="col-md-3">Day</th>
                                                <th class="col-md-2" style="text-align:center;">AM Session</th>
                                                <th class="col-md-2" style="text-align:center;">PM Session</th>
                                                <th class="col-md-1"></th>
                                            </tr>
                                            @foreach (var day in item.Days.Where(d => d.Service == KyoS.Common.Enums.ServiceType.PSR).OrderBy(d => d.Date))
                                            {
                                                <tr>
                                                    <td align="center">
                                                      
                                                    <td>
                                                        @Html.DisplayFor(modelItem => day.Date)
                                                    </td>
                                                    <td>
                                                        @Html.DisplayFor(modelItem => day.Day)
                                                    </td>
                                                    <td align="center">
                                                        @day.Workdays_Clients.Where(wc => (wc.Facilitator.LinkedUser == User.Identity.Name) && (wc.Workday.Service == KyoS.Common.Enums.ServiceType.PSR) && (wc.Session == "AM")).Count()
                                                    </td>
                                                    <td align="center">
                                                        @day.Workdays_Clients.Where(wc => (wc.Facilitator.LinkedUser == User.Identity.Name) && (wc.Workday.Service == KyoS.Common.Enums.ServiceType.PSR) && (wc.Session == "PM")).Count()
                                                    </td>
                                                    <td align="right">
                                                        @if ((day.Workdays_Clients.Where(wc => wc.Facilitator.LinkedUser == User.Identity.Name).Count() == (day.Workdays_Clients.Where(wc => (wc.Facilitator.LinkedUser == User.Identity.Name && wc.Present == false)).Count() + day.Workdays_Clients.Where(wc => (wc.Facilitator.LinkedUser == User.Identity.Name && ((wc.Note != null && wc.Note.Status == KyoS.Common.Enums.NoteStatus.Approved) || (wc.NoteP != null && wc.NoteP.Status == KyoS.Common.Enums.NoteStatus.Approved)))).Count())) && (day.Workdays_Clients.Where(wc => (wc.Facilitator.LinkedUser == User.Identity.Name && ((wc.Note != null && wc.Note.Status == KyoS.Common.Enums.NoteStatus.Approved) || (wc.NoteP != null && wc.NoteP.Status == KyoS.Common.Enums.NoteStatus.Approved)))).Count() > 0))
                                                        {
                                                            //schema 3
                                                            if (day.Workdays_Clients.Where(wc => (wc.NoteP != null && wc.NoteP.Schema == KyoS.Common.Enums.SchemaType.Schema3)).Count() == day.Workdays_Clients.Count())
                                                            {
                                                                <a asp-action="PrintWorkdaysNotesP" asp-route-id="@day.Id" class="btn btn-success" title="Print notes - Date: @day.Date.ToShortDateString()"><i class="glyphicon glyphicon-print"></i></a>
                                                            }
                                                            else
                                                            {
                                                                <a asp-action="PrintWorkdaysNotes" asp-route-id="@day.Id" class="btn btn-success" title="Print notes - Date: @day.Date.ToShortDateString()"><i class="glyphicon glyphicon-print"></i></a>
                                                            }
                                                        }
                                                        else
                                                        {
                                                            @if ((day.Workdays_Clients.Where(wc => wc.Facilitator.LinkedUser == User.Identity.Name).Count() != (day.Workdays_Clients.Where(wc => (wc.Facilitator.LinkedUser == User.Identity.Name && wc.Present == false)).Count() + day.Workdays_Clients.Where(wc => (wc.Facilitator.LinkedUser == User.Identity.Name && wc.Note != null && wc.Note.Status == KyoS.Common.Enums.NoteStatus.Approved)).Count())) || (day.Workdays_Clients.Where(wc => (wc.Facilitator.LinkedUser == User.Identity.Name && wc.Note != null && wc.Note.Status == KyoS.Common.Enums.NoteStatus.Approved)).Count() == 0))
                                                            {
                                                                <a class="btn btn-success disabled" title="Print notes - Date: @day.Date.ToShortDateString()"><i class="glyphicon glyphicon-print"></i></a>
                                                            }
                                                        }
                                                    </td>
                                                </tr>
                                            }

                                        </table>
                                    </div>
                                </td>
                                <td>
                                    @if (item.MonthYear.Contains("January"))
                                    {
                                        <span class="label label-default">
                                            @Html.DisplayFor(modelItem => item.MonthYear)
                                        </span>
                                    }
                                    @if (item.MonthYear.Contains("February"))
                                    {
                                        <span class="label label-info">
                                            @Html.DisplayFor(modelItem => item.MonthYear)
                                        </span>
                                    }
                                    @if (item.MonthYear.Contains("March"))
                                    {
                                        <span class="label label-primary">
                                            @Html.DisplayFor(modelItem => item.MonthYear)
                                        </span>
                                    }
                                    @if (item.MonthYear.Contains("April"))
                                    {
                                        <span class="label label-warning">
                                            @Html.DisplayFor(modelItem => item.MonthYear)
                                        </span>
                                    }
                                    @if (item.MonthYear.Contains("May"))
                                    {
                                        <span class="label label-success">
                                            @Html.DisplayFor(modelItem => item.MonthYear)
                                        </span>
                                    }
                                    @if (item.MonthYear.Contains("June"))
                                    {
                                        <span class="label label-default">
                                            @Html.DisplayFor(modelItem => item.MonthYear)
                                        </span>
                                    }
                                    @if (item.MonthYear.Contains("July"))
                                    {
                                        <span class="label label-info">
                                            @Html.DisplayFor(modelItem => item.MonthYear)
                                        </span>
                                    }
                                    @if (item.MonthYear.Contains("August"))
                                    {
                                        <span class="label label-primary">
                                            @Html.DisplayFor(modelItem => item.MonthYear)
                                        </span>
                                    }
                                    @if (item.MonthYear.Contains("September"))
                                    {
                                        <span class="label label-warning">
                                            @Html.DisplayFor(modelItem => item.MonthYear)
                                        </span>
                                    }
                                    @if (item.MonthYear.Contains("October"))
                                    {
                                        <span class="label label-success">
                                            @Html.DisplayFor(modelItem => item.MonthYear)
                                        </span>
                                    }
                                    @if (item.MonthYear.Contains("November"))
                                    {
                                        <span class="label label-default">
                                            @Html.DisplayFor(modelItem => item.MonthYear)
                                        </span>
                                    }
                                    @if (item.MonthYear.Contains("December"))
                                    {
                                        <span class="label label-info">
                                            @Html.DisplayFor(modelItem => item.MonthYear)
                                        </span>
                                    }
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Alias)
                                </td>
                                <td align="center">
                                    @Html.DisplayFor(modelItem => item.InitDate)
                                </td>
                                <td align="center">
                                    @Html.DisplayFor(modelItem => item.FinalDate)
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

