@model KyoS.Web.Models.NoteViewModel
@{
    ViewData["Title"] = "PSR note management";
}

<div class="breadcrumbs" id="breadcrumbs">
    <ul class="breadcrumb">
        <li>
            <i class="icon-home"></i>
            @Html.ActionLink("PSR Notes", "Index", "Notes")
        </li>
        <li class="active">PSR Note</li>
    </ul>
</div>

<h4>PSR Note Management</h4>

<div class="row">
    <div>
        <div class="col-md-12">
            @if (ViewBag.Error == "0")
            {
                <div class="alert alert-block alert-danger">
                    <button type="button" class="close" data-dismiss="alert">
                        <i class="icon-remove"></i>
                    </button>
                    <i class="icon-ok red"></i>
                    <strong class="red">
                        Error. The note must have at least one related goal.
                    </strong>
                </div>
            }
            @if (ViewBag.Error == "1")
            {
                <div class="alert alert-block alert-danger">
                    <i class="icon-ok red"></i>
                    <strong class="red">
                        Error. There are no activities for this date. Please must create them.
                    </strong>
                    <a asp-action="CreateActivitiesWeek" asp-controller="Activities" asp-route-id="@Model.Id">Activities per day</a>
                </div>
            }
            @if (ViewBag.Error == "2")
            {
                <div class="alert alert-block alert-danger">
                    <button type="button" class="close" data-dismiss="alert">
                        <i class="icon-remove"></i>
                    </button>
                    <i class="icon-ok red"></i>
                    <strong class="red">
                        Error. The note has fields mandatory.
                    </strong>
                </div>
            }
            @if (ViewBag.Error == "3")
            {
                <div class="alert alert-block alert-danger">
                    <button type="button" class="close" data-dismiss="alert">
                        <i class="icon-remove"></i>
                    </button>
                    <i class="icon-ok red"></i>
                    <strong class="red">
                        Error. The client have not active MTP.
                    </strong>
                </div>
            }
            @if (ViewBag.Error == "4")
            {
                <div class="alert alert-block alert-danger">
                    <button type="button" class="close" data-dismiss="alert">
                        <i class="icon-remove"></i>
                    </button>
                    <i class="icon-ok red"></i>
                    <strong class="red">
                        Error. There are gender issues in: @ViewBag.errorText
                    </strong>
                </div>
            }
            @if (ViewBag.Error == "5")
            {
                <div class="alert alert-block alert-danger">
                    <button type="button" class="close" data-dismiss="alert">
                        <i class="icon-remove"></i>
                    </button>
                    <i class="icon-ok red"></i>
                    <strong class="red">
                        Error. The selected client has a created note from another service at that time.
                    </strong>
                </div>
            }
        </div>
        @if ((ViewBag.Error != "1") && (ViewBag.Error != "3"))  //se puede crear o editar la nota
        { 
    <form asp-action="EditNote" enctype="multipart/form-data">
        @*<div class="form-group col-md-12">*@
        <!-- Nav tabs -->
        @*<ul class="nav nav-tabs" role="tablist">
            <li role="presentation" class="active"><a href="#note" aria-controls="note" role="tab" data-toggle="tab">Note</a></li>
            <li role="presentation"><a href="#cms" aria-controls="cms" role="tab" data-toggle="tab">Client's Mental Status</a></li>
        </ul>*@
        <!-- Tab panes -->
        @*<div class="tab-content">
        <div role="tabpanel" class="tab-pane active" id="note">*@
        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
        <input type="hidden" asp-for="Id" />
        <input type="hidden" asp-for="IdActivity1" />
        <input type="hidden" asp-for="IdActivity2" />
        <input type="hidden" asp-for="IdActivity3" />
        <input type="hidden" asp-for="IdActivity4" />
        <input type="hidden" asp-for="Origin" />
        <input type="hidden" asp-for="Schema" />
        <input type="hidden" asp-for="CodeBill" />
        <partial name="_MCS" />
        <partial name="_Notes" />
        <div class="form-group col-md-12">
            <input type="submit" value="Save All" class="btn btn-primary" />
            @if (Model.Origin == 0) //viene de la pagina Index de las notas
            {
                <a asp-action="Index" class="btn btn-success">Back</a>
            }
            @if (Model.Origin == 1) //viene de la pagina NotStartedNotes de las notas
            {
                <a asp-action="NotStartedNotes" class="btn btn-success">Back</a>
            }
            @if (Model.Origin == 2) //viene de la pagina NotesInEdit de las notas
            {
                <a asp-action="NotesInEdit" class="btn btn-success">Back</a>
            }
            @if (Model.Origin == 3) //viene de la pagina PendingNotes de las notas
            {
                <a asp-action="PendingNotes" class="btn btn-success">Back</a>
            }
            @if (Model.Origin == 4) //viene de la pagina NotesWithReview de las notas
            {
                <a asp-action="NotesWithReview" class="btn btn-success">Back</a>
            }
            @if (Model.Origin == 5) //viene de la pagina MessagesOfNotes
            {
                <a asp-action="MessagesOfNotes" asp-controller="Messages" class="btn btn-success">Back</a>
            }

            @if (Model.Status.ToString() == "Edition")
            {
                @if (Model.Origin == 0) //viene de la pagina Index de las notas
                {
                    <a asp-action="FinishEditing" class="btn btn-warning" asp-route-id="@Model.Id" asp-route-origin="0" title="Finish edition of note">Finish Editing</a>
                }
                @if (Model.Origin == 2) //viene de la pagina NotesInEdit de las notas
                {
                    <a asp-action="FinishEditing" class="btn btn-warning" asp-route-id="@Model.Id" asp-route-origin="2" title="Finish edition of note">Finish Editing</a>
                }
            }
        </div>
        @*</div>
        <div role="tabpanel" class="tab-pane" id="cms">*@
        @*<br />*@

        @*</div>*@
        @*</div>*@
        @*</div>*@
    </form>
        }
    </div>
</div>      

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
<script type="text/javascript">
        $(document).ready(function () {
            $("#cbTopic1").change(function () {
                var url = "@Url.Action("GetActivityList", "Notes")";
                $.get(url, { idTheme: $("#cbTopic1").val() }, function (data) {
                    $("#cbActivity1").empty();
                    $.each(data, function (index, row) {
                        $("#cbActivity1").append("<option value='" + row.value + "'>" + row.value + " - " + row.text + "</option>")
                    });
                });
            })
            $("#cbTopic2").change(function () {
                var url = "@Url.Action("GetActivityList", "Notes")";
                $.get(url, { idTheme: $("#cbTopic2").val() }, function (data) {
                    $("#cbActivity2").empty();
                    $.each(data, function (index, row) {
                        $("#cbActivity2").append("<option value='" + row.value + "'>" + row.value + " - " + row.text + "</option>")
                    });
                });
            })
            $("#cbTopic3").change(function () {
                var url = "@Url.Action("GetActivityList", "Notes")";
                $.get(url, { idTheme: $("#cbTopic3").val() }, function (data) {
                    $("#cbActivity3").empty();
                    $.each(data, function (index, row) {
                        $("#cbActivity3").append("<option value='" + row.value + "'>" + row.value + " - " + row.text + "</option>")
                    });
                });
            })
            $("#cbTopic4").change(function () {
                var url = "@Url.Action("GetActivityList", "Notes")";
                $.get(url, { idTheme: $("#cbTopic4").val() }, function (data) {
                    $("#cbActivity4").empty();
                    $.each(data, function (index, row) {
                        $("#cbActivity4").append("<option value='" + row.value + "'>" + row.value + " - " + row.text + "</option>")
                    });
                });
            })
            $("#cbGoal1").change(function () {
                var url = "@Url.Action("GetObjetiveList", "Notes")";
                $.get(url, { idGoal: $("#cbGoal1").val(), idNote: @Model.Id }, function (data) {
                    $("#cbObjetive1").empty();
                    $.each(data, function (index, row) {
                        $("#cbObjetive1").append("<option value='" + row.value + "'>" + row.text + "</option>")
                    });

                    //actualizo el label con la intervention que corresponde al obj seleccionado
                    url = "@Url.Action("GetIntervention", "Notes")";
                    $.get(url, { idObjetive: $("#cbObjetive1").val() }, function (data) {
                        $("#lbIntervention1").text(data);
                    });
                });
            })
            $("#cbGoal2").change(function () {
                var url = "@Url.Action("GetObjetiveList", "Notes")";
                $.get(url, { idGoal: $("#cbGoal2").val(), idNote: @Model.Id }, function (data) {
                    $("#cbObjetive2").empty();
                    $.each(data, function (index, row) {
                        $("#cbObjetive2").append("<option value='" + row.value + "'>" + row.text + "</option>")
                    });

                    //actualizo el label con la intervention que corresponde al obj seleccionado
                    url = "@Url.Action("GetIntervention", "Notes")";
                    $.get(url, { idObjetive: $("#cbObjetive2").val() }, function (data) {
                        $("#lbIntervention2").text(data);
                    });
                });
            })
            $("#cbGoal3").change(function () {
                var url = "@Url.Action("GetObjetiveList", "Notes")";
                $.get(url, { idGoal: $("#cbGoal3").val(), idNote: @Model.Id }, function (data) {
                    $("#cbObjetive3").empty();
                    $.each(data, function (index, row) {
                        $("#cbObjetive3").append("<option value='" + row.value + "'>" + row.text + "</option>")
                    });

                    //actualizo el label con la intervention que corresponde al obj seleccionado
                    url = "@Url.Action("GetIntervention", "Notes")";
                    $.get(url, { idObjetive: $("#cbObjetive3").val() }, function (data) {
                        $("#lbIntervention3").text(data);
                    });
                });
            })
            $("#cbGoal4").change(function () {
                var url = "@Url.Action("GetObjetiveList", "Notes")";
                $.get(url, { idGoal: $("#cbGoal4").val(), idNote: @Model.Id }, function (data) {
                    $("#cbObjetive4").empty();
                    $.each(data, function (index, row) {
                        $("#cbObjetive4").append("<option value='" + row.value + "'>" + row.text + "</option>")
                    });

                    //actualizo el label con la intervention que corresponde al obj seleccionado
                    url = "@Url.Action("GetIntervention", "Notes")";
                    $.get(url, { idObjetive: $("#cbObjetive4").val() }, function (data) {
                        $("#lbIntervention4").text(data);
                    });
                });
            })
            $("#cbObjetive1").change(function () {
                var url = "@Url.Action("GetIntervention", "Notes")";
                $.get(url, { idObjetive: $("#cbObjetive1").val() }, function (data) {
                    $("#lbIntervention1").text(data);
                });
            })
            $("#cbObjetive2").change(function () {
                var url = "@Url.Action("GetIntervention", "Notes")";
                $.get(url, { idObjetive: $("#cbObjetive2").val() }, function (data) {
                    $("#lbIntervention2").text(data);
                });
            })
            $("#cbObjetive3").change(function () {
                var url = "@Url.Action("GetIntervention", "Notes")";
                $.get(url, { idObjetive: $("#cbObjetive3").val() }, function (data) {
                    $("#lbIntervention3").text(data);
                });
            })
            $("#cbObjetive4").change(function () {
                var url = "@Url.Action("GetIntervention", "Notes")";
                $.get(url, { idObjetive: $("#cbObjetive4").val() }, function (data) {
                    $("#lbIntervention4").text(data);
                });
            })
            $("#EnglishAnswerClient1").click(function () {
                var url = "@Url.Action("Translate", "Notes")";
                $.get(url, { text: $("#AnswerClient1").val() }, function (data) {
                    $("#AnswerClient1").val(data);
                });
            })
            $("#EnglishAnswerFacilitator1").click(function () {
                var url = "@Url.Action("Translate", "Notes")";
                $.get(url, { text: $("#AnswerFacilitator1").val() }, function (data) {
                    $("#AnswerFacilitator1").val(data);
                });
            })
            $("#EnglishAnswerClient2").click(function () {
                var url = "@Url.Action("Translate", "Notes")";
                $.get(url, { text: $("#AnswerClient2").val() }, function (data) {
                    $("#AnswerClient2").val(data);
                });
            })
            $("#EnglishAnswerFacilitator2").click(function () {
                var url = "@Url.Action("Translate", "Notes")";
                $.get(url, { text: $("#AnswerFacilitator2").val() }, function (data) {
                    $("#AnswerFacilitator2").val(data);
                });
            })
            $("#EnglishAnswerClient3").click(function () {
                var url = "@Url.Action("Translate", "Notes")";
                $.get(url, { text: $("#AnswerClient3").val() }, function (data) {
                    $("#AnswerClient3").val(data);
                });
            })
            $("#EnglishAnswerFacilitator3").click(function () {
                var url = "@Url.Action("Translate", "Notes")";
                $.get(url, { text: $("#AnswerFacilitator3").val() }, function (data) {
                    $("#AnswerFacilitator3").val(data);
                });
            })
            $("#EnglishAnswerClient4").click(function () {
                var url = "@Url.Action("Translate", "Notes")";
                $.get(url, { text: $("#AnswerClient4").val() }, function (data) {
                    $("#AnswerClient4").val(data);
                });
            })
            $("#EnglishAnswerFacilitator4").click(function () {
                var url = "@Url.Action("Translate", "Notes")";
                $.get(url, { text: $("#AnswerFacilitator4").val() }, function (data) {
                    $("#AnswerFacilitator4").val(data);
                });
            })
            $("#EnglishPlanNote").click(function () {
                var url = "@Url.Action("Translate", "Notes")";
                $.get(url, { text: $("#PlanNote").val() }, function (data) {
                    $("#PlanNote").val(data);
                });
            })

        });
        function getMinute() {
            var url = "@Url.Action("GetUnitsPSR", "Notes")";
            $.get(url, { minute1: $("#minute1").val(), minute2: $("#minute2").val(), minute3: $("#minute3").val(), minute4: $("#minute4").val() }, function (data) { $("#lbUnits").text(data); });
            var url = "@Url.Action("GetMinutesPSR", "Notes")";
            $.get(url, { minute1: $("#minute1").val(), minute2: $("#minute2").val(), minute3: $("#minute3").val(), minute4: $("#minute4").val() }, function (data) { $("#lbTotalMinutes").text(data); });
        }
</script>
}



