@model KyoS.Web.Models.BillingReportViewModel
@{
    ViewData["Title"] = "Billing Report";
}
@{
    int units = 0;
}

<link rel="stylesheet" href="~/css/jquery.dataTables.min.css" />
<link rel="stylesheet" href="~/css/datepicker.min.css">

<div class="breadcrumbs" id="breadcrumbs">
    <ul class="breadcrumb">
        <li>
            <i class="icon-home"></i>
            @Html.ActionLink("Dashboard", "Index", "Desktop")
        </li>
        <li class="active">Billing Report</li>
    </ul><!--.breadcrumb-->
</div>

<div class="row">
    <form asp-action="BillingReport" enctype="multipart/form-data">
        <div class="form-group col-md-4">
            <label class="control-label">Date Range</label>&nbsp;*<br />
            <table border="0" width="100%">
                <tr>
                    <td>
                        <input type="text"
                               asp-for="DateIterval"
                               data-range="true"
                               data-multiple-dates-separator=" - "
                               data-language="en"
                               class="form-control datepicker-here" />
                    </td>
                    <td>
                        &nbsp;&nbsp;
                    </td>
                    <td>
                        <button type="submit" class="btn btn-success" title="Filter"><i class="glyphicon glyphicon-filter"></i> Filter</button>
                    </td>
                </tr>
            </table>
        </div>        
    </form>
    <div class="col-md-12">
        <hr />
    </div>
    <div class="col-md-12">
        <div class="panel panel-default">
            <div class="panel-heading">
                <h3 class="panel-title">Units per weeks</h3>
            </div>
            <div class="panel-body">
                <table class="table table-hover table-responsive table-striped" id="MyTable">
                    <thead>
                        <tr>
                            <th class="col-md-1">

                            </th>
                            <th class="col-md-2">

                            </th>
                            <th class="col-md-2">

                            </th>
                            <th class="col-md-2" style="text-align:center;">
                                Init Date
                            </th>
                            <th class="col-md-2" style="text-align:center;">
                                Final Date
                            </th>
                            <th class="col-md-1" style="text-align:center;">
                                Notes
                            </th>
                            <th class="col-md-1" style="text-align:center;">
                                Units
                            </th>
                            <th class="col-md-1" style="text-align:center;">

                            </th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model.Weeks.OrderBy(w => w.WeekOfYear))
                        {
                            <tr>
                                <td align="center">
                                    @if (item.Clinic.Facilitators.Where(f => f.Workdays_Clients.Where(wc => (wc.Present == true && wc.Hold == false && wc.Workday.Week.Id == item.Id && wc.Client != null)).Count() != 0).Count() != 0)
                                    {
                                        <a class="icon-plus-sign-alt"></a>
                                    }
                                    <div style="display:none">
                                        <table class="table table-striped">
                                            <tr>
                                                <th class="col-md-1"></th>
                                                <th class="col-md-5">Facilitator Name</th>
                                                <th class="col-md-2" style="text-align:center;">Clients</th>
                                                <th class="col-md-2" style="text-align:center;">Notes</th>
                                                <th class="col-md-2" style="text-align:center;">Units</th>
                                            </tr>
                                            @foreach (var facilitator in item.Clinic.Facilitators.OrderByDescending(f => f.Workdays_Clients.Where(wc => (wc.Present == true && wc.Hold == false && wc.Workday.Week.Id == item.Id && wc.Client != null)).Count()))
                                            {
                                                <tr>
                                                    <td align="center">
                                                        @if (facilitator.Workdays_Clients.Where(wc => (wc.Present == true && wc.Hold == false && wc.Workday.Week.Id == item.Id && wc.Client != null)).Count() != 0)
                                                        {
                                                            <a class="icon-plus-sign-alt"></a>
                                                        }
                                                        <div style="display:none">
                                                            <table class="table table-striped">
                                                                <tr>
                                                                    <th class="col-md-1" style="text-align:center;">Code</th>
                                                                    <th class="col-md-2">Client Name</th>
                                                                    <th class="col-md-2" style="text-align:center;">Medicaid ID</th>
                                                                    <th class="col-md-1" style="text-align:center;">Date</th>
                                                                    <th class="col-md-1" style="text-align:center;">Session</th>
                                                                    <th class="col-md-2" style="text-align:center;">Diagnostics</th>
                                                                    <th class="col-md-1" style="text-align:center;">Billed</th>
                                                                    <th class="col-md-1" style="text-align:center;">Notes</th>
                                                                    <th class="col-md-1" style="text-align:center;">Units</th>
                                                                </tr>
                                                                @foreach (var workdayClient in facilitator.Workdays_Clients.Where(wc => (wc.Present == true && wc.Hold == false && wc.Workday.Week.Id == item.Id && wc.Client != null)).OrderBy(wc => wc.Client.Name))
                                                                {
                                                                    <tr>
                                                                        <td align="center">
                                                                            @Html.DisplayFor(modelItem => workdayClient.Client.Code)
                                                                        </td>
                                                                        <td>
                                                                            @Html.DisplayFor(modelItem => workdayClient.Client.Name)
                                                                        </td>
                                                                        <td align="center">
                                                                            @Html.DisplayFor(modelItem => workdayClient.Client.MedicaidID)
                                                                        </td>
                                                                        <td align="center">
                                                                            @Html.DisplayFor(modelItem => workdayClient.Workday.Date)
                                                                        </td>
                                                                        <td align="center">
                                                                            @Html.DisplayFor(modelItem => workdayClient.Session)
                                                                        </td>
                                                                        <td align="center">
                                                                            @if (workdayClient.Client.Clients_Diagnostics.Where(n => n.Principal == true).Count() > 0)
                                                                            {
                                                                                @Html.DisplayFor(modelItem => workdayClient.Client.Clients_Diagnostics.First(n => n.Principal == true).Diagnostic.Code)
                                                                            }
                                                                        </td>
                                                                        <td align="center">
                                                                            @if (workdayClient.BilledDate == null)
                                                                            {
                                                                                <p>-</p>
                                                                            }
                                                                            else
                                                                            {
                                                                                <p>@workdayClient.BilledDate.Value.ToShortDateString()</p>
                                                                            }
                                                                        </td>
                                                                        <td align="center">
                                                                            1
                                                                        </td>
                                                                        <td align="center">
                                                                            @if (workdayClient.Note != null)
                                                                            {
                                                                                if ((workdayClient.Note.Schema == KyoS.Common.Enums.SchemaType.Schema1) || (workdayClient.Note.Schema == KyoS.Common.Enums.SchemaType.Schema2))
                                                                                {
                                                                                    <label>16</label>
                                                                                }
                                                                                if ((workdayClient.Note.Schema == KyoS.Common.Enums.SchemaType.Schema4))
                                                                                {
                                                                                    <label>12</label>
                                                                                }
                                                                            }
                                                                            else
                                                                            {
                                                                                @if (workdayClient.NoteP != null)
                                                                                {
                                                                                    if (workdayClient.NoteP.Schema == KyoS.Common.Enums.SchemaType.Schema3)
                                                                                    {
                                                                                        <label>@workdayClient.NoteP.RealUnits</label>
                                                                                    }
                                                                                }
                                                                                else
                                                                                {
                                                                                    if (workdayClient.Workday.Service == KyoS.Common.Enums.ServiceType.Individual)
                                                                                    {
                                                                                        <label>4</label>
                                                                                    }
                                                                                    else
                                                                                    {
                                                                                        if (workdayClient.Workday.Service == KyoS.Common.Enums.ServiceType.Group)
                                                                                        {
                                                                                            <label>8</label>
                                                                                        }
                                                                                        else
                                                                                        {
                                                                                            if ((workdayClient.Workday.Week.Clinic.Schema == KyoS.Common.Enums.SchemaType.Schema1) || (workdayClient.Workday.Week.Clinic.Schema == KyoS.Common.Enums.SchemaType.Schema2) || (workdayClient.Workday.Week.Clinic.Schema == KyoS.Common.Enums.SchemaType.Schema3))
                                                                                            {
                                                                                                <label>16</label>
                                                                                            }
                                                                                            if ((workdayClient.Workday.Week.Clinic.Schema == KyoS.Common.Enums.SchemaType.Schema4))
                                                                                            {
                                                                                                <label>12</label>
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                }
                                                                            }
                                                                        </td>
                                                                    </tr>
                                                                }
                                                            </table>
                                                        </div>
                                                    </td>
                                                    <td>
                                                        @Html.DisplayFor(modelItem => facilitator.Name)
                                                    </td>
                                                    <td align="center">
                                                        @facilitator.Workdays_Clients.Where(wc => (wc.Present == true && wc.Hold == false && wc.Workday.Week.Id == item.Id && wc.Client != null)).Select(wc => wc.Client).Distinct().Count()
                                                    </td>
                                                    <td align="center">
                                                        @facilitator.Workdays_Clients.Where(wc => (wc.Present == true && wc.Hold == false && wc.Workday.Week.Id == item.Id && wc.Client != null)).Count()
                                                    </td>
                                                    <td align="center">
                                                        @{
                                                            units = 0;
                                                        }
                                                        @foreach (var workdayClient in facilitator.Workdays_Clients.Where(wc => (wc.Present == true && wc.Hold == false && wc.Workday.Week.Id == item.Id && wc.Client != null)))
                                                        {
                                                            @if (workdayClient.Note != null)
                                                            {
                                                                if ((workdayClient.Note.Schema == KyoS.Common.Enums.SchemaType.Schema1) || (workdayClient.Note.Schema == KyoS.Common.Enums.SchemaType.Schema2))
                                                                {
                                                                    units = units + 16;
                                                                }
                                                                if ((workdayClient.Note.Schema == KyoS.Common.Enums.SchemaType.Schema4))
                                                                {
                                                                    units = units + 12;
                                                                }
                                                            }
                                                            else
                                                            {
                                                                if (workdayClient.NoteP != null)
                                                                {
                                                                    if (workdayClient.NoteP.Schema == KyoS.Common.Enums.SchemaType.Schema3)
                                                                    {
                                                                        units = units + workdayClient.NoteP.RealUnits;
                                                                    }
                                                                }
                                                                else
                                                                {
                                                                    if (workdayClient.Workday.Service == KyoS.Common.Enums.ServiceType.Individual)
                                                                    {
                                                                        units = units + 4;
                                                                    }
                                                                    else
                                                                    {
                                                                        if (workdayClient.Workday.Service == KyoS.Common.Enums.ServiceType.Group)
                                                                        {
                                                                            units = units + 8;
                                                                        }
                                                                        else
                                                                        {
                                                                            if ((workdayClient.Workday.Week.Clinic.Schema == KyoS.Common.Enums.SchemaType.Schema1) || (workdayClient.Workday.Week.Clinic.Schema == KyoS.Common.Enums.SchemaType.Schema2) || (workdayClient.Workday.Week.Clinic.Schema == KyoS.Common.Enums.SchemaType.Schema3))
                                                                            {
                                                                                units = units + 16;
                                                                            }
                                                                            if ((workdayClient.Workday.Week.Clinic.Schema == KyoS.Common.Enums.SchemaType.Schema4))
                                                                            {
                                                                                units = units + 12;
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                        <label>@units</label>
                                                        @*@(facilitator.Workdays_Clients.Where(wc => (wc.Present == true && wc.Workday.Week.Id == item.Id)).Count() * 16)*@
                                                    </td>
                                                </tr>
                                            }
                                        </table>
                                    </div>
                                </td>
                                <td>
                                    @if (item.MonthYear.Contains("January"))
                                    {
                                        <span class="label label-default">
                                            @Html.DisplayFor(modelItem => item.MonthYear)
                                        </span>
                                    }
                                    @if (item.MonthYear.Contains("February"))
                                    {
                                        <span class="label label-info">
                                            @Html.DisplayFor(modelItem => item.MonthYear)
                                        </span>
                                    }
                                    @if (item.MonthYear.Contains("March"))
                                    {
                                        <span class="label label-primary">
                                            @Html.DisplayFor(modelItem => item.MonthYear)
                                        </span>
                                    }
                                    @if (item.MonthYear.Contains("April"))
                                    {
                                        <span class="label label-warning">
                                            @Html.DisplayFor(modelItem => item.MonthYear)
                                        </span>
                                    }
                                    @if (item.MonthYear.Contains("May"))
                                    {
                                        <span class="label label-success">
                                            @Html.DisplayFor(modelItem => item.MonthYear)
                                        </span>
                                    }
                                    @if (item.MonthYear.Contains("June"))
                                    {
                                        <span class="label label-default">
                                            @Html.DisplayFor(modelItem => item.MonthYear)
                                        </span>
                                    }
                                    @if (item.MonthYear.Contains("July"))
                                    {
                                        <span class="label label-info">
                                            @Html.DisplayFor(modelItem => item.MonthYear)
                                        </span>
                                    }
                                    @if (item.MonthYear.Contains("August"))
                                    {
                                        <span class="label label-primary">
                                            @Html.DisplayFor(modelItem => item.MonthYear)
                                        </span>
                                    }
                                    @if (item.MonthYear.Contains("September"))
                                    {
                                        <span class="label label-warning">
                                            @Html.DisplayFor(modelItem => item.MonthYear)
                                        </span>
                                    }
                                    @if (item.MonthYear.Contains("October"))
                                    {
                                        <span class="label label-success">
                                            @Html.DisplayFor(modelItem => item.MonthYear)
                                        </span>
                                    }
                                    @if (item.MonthYear.Contains("November"))
                                    {
                                        <span class="label label-default">
                                            @Html.DisplayFor(modelItem => item.MonthYear)
                                        </span>
                                    }
                                    @if (item.MonthYear.Contains("December"))
                                    {
                                        <span class="label label-info">
                                            @Html.DisplayFor(modelItem => item.MonthYear)
                                        </span>
                                    }
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Alias)
                                </td>
                                <td align="center">
                                    @Html.DisplayFor(modelItem => item.InitDate)
                                </td>
                                <td align="center">
                                    @Html.DisplayFor(modelItem => item.FinalDate)
                                </td>
                                <td align="center">
                                    @Html.DisplayFor(modelItem => item.Notes)
                                </td>
                                <td align="center" style="font-weight:bold;">
                                    <span class="label label-success">
                                        @Html.DisplayFor(modelItem => item.Units)
                                    </span>
                                </td>
                                <td align="center">
                                    <a asp-action="BillingWeek" class="btn btn-success" asp-route-id="@item.Id" asp-route-billed="1" title="Billed"><i class="icon-usd"></i></a>
                                    <a asp-action="BillingWeek" class="btn btn-danger" asp-route-id="@item.Id" asp-route-billed="0" title="Unbilled"><i class="icon-usd"></i></a>
                                   @* @if (item.Days.Where(d => d.Workdays_Clients.Where(wc => (wc.BilledDate == null && wc.Present == true && wc.Client != null)).Count() > 0).Count() > 0)
                                    {
                                        <a asp-action="BillingWeek" class="btn btn-success" asp-route-id="@item.Id" asp-route-billed="1" title="Bill this week">Bill</a>
                                        <a asp-action="BillingWeek" class="btn btn-danger" asp-route-id="@item.Id" asp-route-billed="0" title="Bill this week">Bill</a>
                                    }
                                    else
                                    {
                                        <a asp-action="BillingWeek" class="btn btn-default" asp-route-id="@item.Id" asp-route-origin="0" title="Billing completed successfully">Bill</a>
                                    }*@
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

<partial name="_DeleteDialog" />

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}

    <script src="~/js/jquery.dataTables.min.js"></script>
    <script src="~/js/moment.min.js"></script>
    <script src="~/js/datetime-moment.js"></script>
    <script src="~/js/datepicker.min.js" type="text/javascript" charset="utf-8"></script>
    <script src="~/js/datepicker.en.js" type="text/javascript" charset="utf-8"></script>


    <script type="text/javascript">
        $(document).ready(function () {

            $.fn.dataTable.moment('MM/DD/YYYY');

            $('#MyTable').DataTable({
                "order": [[3, "asc"]],
                "pageLength": 100
            });

            // Delete item
            var item_to_delete;

            $('.deleteItem').click((e) => {
                item_to_delete = e.currentTarget.dataset.id;
            });

            $("#btnYesDelete").click(function () {
                var url = "@Url.Action("Delete", "WorkDays")";
                window.location.href = url + '/' + item_to_delete;
            });
        });
        $(function () {

            //Assign Click event to Plus Image.
            $("body").on("click", "a[class*='icon-plus-sign-alt']", function () {
                $(this).closest("tr").after("<tr><td></td><td colspan = '999'>" + $(this).next().html() + "</td></tr>");
                $(this).attr("class", "icon-minus-sign-alt");
            });
            //Assign Click event to Minus Image.
            $("body").on("click", "a[class*='icon-minus-sign-alt']", function () {
                $(this).attr("class", "icon-plus-sign-alt");
                $(this).closest("tr").next().remove();
            });
        });

    </script>
}
